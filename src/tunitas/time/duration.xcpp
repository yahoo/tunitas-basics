// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
#import tunitas.time.Duration
#import std.chrono.duration
#import tunitas.time.ratio
namespace tunitas::time::duration {
  //
  // There are many durations that we care about
  //
  using Microsecond = std::chrono::duration<Duration::rep, ratio::Microsecond>;
  using Millisecond = std::chrono::duration<Duration::rep, ratio::Millisecond>;
  using Second = std::chrono::duration<Duration::rep, ratio::Second>;
  using Minute = std::chrono::duration<Duration::rep, ratio::Minute>;
  using Hour = std::chrono::duration<Duration::rep, ratio::Hour>;
  using Day = std::chrono::duration<Duration::rep, ratio::Day>;
  using Week = std::chrono::duration<Duration::rep, ratio::Week>;
  using Fortnight = std::chrono::duration<Duration::rep, ratio::Fortnight>;
  using Month = std::chrono::duration<Duration::rep, ratio::Month>;
  using Year = std::chrono::duration<Duration::rep, ratio::Year>;
  //
  // pesky plurality ... just sounds wrong when conjugated badly
  using Microseconds = Microsecond;
  using Milliseconds = Millisecond;
  using Seconds = Second;
  using Minutes = Minute;
  using Hours = Hour;
  using Days = Day;
  using Weeks = Week;
  using Fortnights = Fortnight;
  using Months = Month;
  using Years = Year;
}
namespace tunitas::time {
  namespace [[deprecated("tunitas::time::duration (plural) never was a namespace name; use tunitas::time::duration (singular)")]] durations { using namespace duration; }
}
#endiv
