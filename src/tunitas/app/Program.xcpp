// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
namespace tunitas::app {
  //
  // The (string) name of the program, trimmed.
  //
  // Usage:
  //
  //   Program prog{argv[0]};
  //
  class Program;
}
#endiv
#divert <hpp>
#import std.string
#import want.std.filesystem.path
class tunitas::app::Program : public std::string {
  using ancestor = std::string;
public:
  inline explicit Program(char const *);
  inline explicit Program(std::string);
  inline explicit Program(std::filesystem::path);
};
#endiv
#divert <ipp>
tunitas::app::Program::Program(char const *word)
  : Program(std::string{word})
{ }
tunitas::app::Program::Program(std::string path)
  : ancestor{} {
  auto slash = path.rfind('/');
  if (std::string::npos != slash) {
    if (slash+1 == path.size()) {
      ancestor::operator=(".");
    } else {
      ancestor::operator=(path.substr(slash+1));
    }
  } else {
    ancestor::operator=(std::move(path));
  }
}
tunitas::app::Program::Program(std::filesystem::path path)
  : ancestor{path.filename()} {
}
#endiv
