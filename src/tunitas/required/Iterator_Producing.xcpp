// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
#import std.iterator_traits
namespace tunitas::required {
  //
  // The concept of an iterator producing a VALUE type
  //
  // Usage:
  //
  //   template<required::Iterator_Producing<Strings> ITERATOR> Constructor(ITERATOR, ITERATOR);
  //
  template<typename ITERATOR, typename VALUE> concept Iterator_Producing = requires(ITERATOR iterator) {
    // it is an iterator
    typename std::iterator_traits<ITERATOR>::value_type;
    { iterator++ } -> convertible_to<ITERATOR>;
    { ++iterator } -> convertible_to<ITERATOR>;
    { *iterator } -> convertible_to<typename std::iterator_traits<ITERATOR>::value_type>;
    // is an iterator producing (something convertible to) VALUE
    { *iterator } -> convertible_to<VALUE>;
  };
}
#endiv
