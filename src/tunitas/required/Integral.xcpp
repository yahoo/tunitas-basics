// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
#import std.is_integral
namespace tunitas::required {
  //
  // The concept of an integral type
  //
  // Usage:
  //
  //   template<required::Integral INTEGRAL> Constructor(INTEGRAL, INTEGRAL);
  //
  template<typename INTEGRAL> concept Integral = std::is_integral<INTEGRAL>::value;
}
#endiv
#divert <cpp>
// Of course this is test code
#import std.byte
namespace tunitas::required {
  static_assert(Integral<char signed>);
  static_assert(Integral<char unsigned>);
  static_assert(Integral<int short signed>);
  static_assert(Integral<int short unsigned>);
  static_assert(Integral<char>);
  static_assert(!Integral<std::byte>); // ... and rightly so ... there is no math on these, maybe you wanted Octet<std::byte>
}
#endiv
