// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
namespace tunitas::exception::feature {
  //
  // As stated.
  //
  // Semantic:
  //
  //   The sense of an invalid (argument).
  //   Pretty much any data-dependent error.
  //   As distinguished from substd::exception::Logic which announces a programmer's error.
  //
  // Specification:
  //
  //   The minimal sense of that.
  //
  // Design:
  //
  //   Descendants only.
  //   Descendants MUST fulfill the what() obligation
  //
  // Usage:
  //
  //   You need a tutorial on how to use inheritance?  O.Rly?
  //
  class Invalid;
}
#endiv
#divert <hpp>
#import tunitas.exception.feature.Logic
class tunitas::exception::feature::Invalid : public virtual Logic {
protected:
  virtual ~Invalid() = default;
public:
  virtual auto what() const noexcept -> char const * = 0;
};
#endiv
