// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
//
// This is test code and should not be in the production library biuld
//
#import tunitas.base64.Decoder
#endiv
#divert <hpp>
#import std.uint32_t
struct tunitas::base64::Decoder::test::Access {
  Decoder &subject;
  explicit Access(Decoder &);
  static auto decode(char) -> std::uint32_t;
  auto dump() -> void;
};
#endiv
#divert <cpp>
#import std.cerr
namespace tunitas::base64 {
  Decoder::test::Access::Access(Decoder &subject)
    : subject(subject) { }
  auto Decoder::test::Access::decode(char value) -> std::uint32_t {
    return Decoder::decode(value);
  };
  auto Decoder::test::Access::dump() -> void {
    std::ostream &outbound{std::cerr};
    outbound << "state: (" << subject.size() << " bits) ";
    for (auto b : subject.decoded_state) {
      outbound << b;
    }
    outbound << '\n';
  }
}
#endiv
