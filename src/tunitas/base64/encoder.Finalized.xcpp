// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/tunitas-basics/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::base64::encoder {
  //
  // An invalid argument to the base64 encoder job itself.
  //
  // Usage:
  //
  //   throw encoder::Finalized("cannot");
  //
  class Finalized;
}
#endiv
#divert <hpp>
#import std.invalid_argument
#import tunitas.base64.Exception
class tunitas::base64::encoder::Finalized : public std::invalid_argument, public base64::Exception {
  using ancestor = std::invalid_argument;
public:
  Finalized() : ancestor("finalized") { }
  using ancestor::invalid_argument;
  auto what() const noexcept -> char const * { return ancestor::what(); }
};
#endiv
