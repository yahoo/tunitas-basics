// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-basics/blob/master/LICENSE for terms.
#divert <fpp>
#include <hpp/tests.unit.outcome.Fixture>
#endiv
#divert <hpp>
#import std.string
//
// We need an uncopyable data type that is otherwise "easy to work with"
//
class tests::unit::outcome::Fixture::Uncopyable : public std::string {
  using ancestor = std::string;
public:
  using ancestor::basic_string;
  Uncopyable(Uncopyable const &) = delete;
  auto operator=(Uncopyable const &) -> Uncopyable & = delete;
  Uncopyable(Uncopyable &&) = default;
  auto operator=(Uncopyable &&) -> Uncopyable & = default;
};
#endiv
