// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-basics/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::unit::server::exception::my {
  //
  // This is the example from the documentariat at the top of tunitas.server.exception.Aspect
  //
  class Difficulty;
}
#endiv
#divert <hpp>
#import tunitas.server.exception.Aspect
#import std.logic_error
class tests::unit::server::exception::my::Difficulty : public ::tunitas::server::exception::Aspect, public std::logic_error {
  struct Ancestors {
    using Aspect = ::tunitas::server::exception::Aspect;
    using Exception = std::logic_error;
  };
public:
  Difficulty();
  auto what() const noexcept -> char const * final;
};
#endiv
#divert <cpp>
namespace tests::unit::server::exception::my {
  Difficulty::Difficulty()
    : Ancestors::Exception{"difficulty"}
  { }
  auto Difficulty::what() const noexcept -> char const * {
    return Ancestors::Exception::what();
  }
}
#endiv
