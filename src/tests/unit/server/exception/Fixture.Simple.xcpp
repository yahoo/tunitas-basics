// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
#include <hpp/tests.unit.server.exception.Fixture>
#endiv
#divert <hpp>
#import tunitas.server.exception.Generic
#import std.runtime_error
#import std.string
class tests::unit::server::exception::Fixture::Simple : public tunitas::server::exception::Aspect, public std::runtime_error {
  struct Ancestors {
    using Aspect = tunitas::server::exception::Aspect;
    using Exception = std::runtime_error;
  };
public:
  explicit Simple(std::string const &reason);
  auto what() const noexcept -> char const * final;
};
#endiv
#divert <cpp>
tests::unit::server::exception::Fixture::Simple::Simple(std::string const &reason)
  : Ancestors::Exception{reason}
{ }
auto tests::unit::server::exception::Fixture::Simple::what() const noexcept -> char const * {
  return Ancestors::Exception::what();
}
#endiv
