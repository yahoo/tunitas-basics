// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
#divert <fpp>
#import tests.unit.app.Drop
#endiv
#divert <hpp>
#import std.runtime_error
#import tunitas.app.exception.Aspect
#import tunitas.app.exception.aspect.Quitting
#import std.string
#import sys.exits.Code
class tests::unit::app::Drop::Quitting : public ::tunitas::app::exception::Aspect, public tunitas::app::exception::aspect::Quitting, public std::runtime_error {
  using appware = tunitas::app::exception::aspect::Quitting;
  using stdware = std::runtime_error;
public:
  inline explicit Quitting(std::string NAME, sys::exits::Code);
  auto what() const noexcept -> char const * final;
  auto stream() const noexcept -> std::ostream & final;
  auto code() const noexcept -> sys::exits::Code final;
};
#endiv
#divert <ipp>
#import std.move
#import sys.exits.constants
tests::unit::app::Drop::Quitting::Quitting(std::string reason, sys::exits::Code code)
  : appware{sys::exits::FAIL}
  , stdware{"because"} // And 'cause never was the reason for the evening, or the Tropic of Sir Gallahad
{ }
#endiv
#divert <cpp>
auto tests::unit::app::Drop::Quitting::what() const noexcept -> char const * {
  return stdware::what();
}
auto tests::unit::app::Drop::Quitting::stream() const noexcept -> std::ostream & {
  return appware::stream();
}
auto tests::unit::app::Drop::Quitting::code() const noexcept -> sys::exits::Code {
  return appware::code();
}
#endiv
