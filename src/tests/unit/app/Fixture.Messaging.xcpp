// This is -*- c++ -*- in the S.C.O.L.D. stylings that are so popular these days.
#divert <fpp>
#import tests.unit.app.Fixture
#endiv
#divert <hpp>
#import std.exception
#import std.string
#import tunitas.app.exception.Generic
#import tunitas.app.exception.Messaging
class tests::unit::app::Fixture::Messaging : public ::tunitas::app::exception::Generic, public ::tunitas::app::exception::Messaging, public ::std::exception {
  struct ancestors {
    using Exception = ::std::exception;
    using Messaging = ::tunitas::app::exception::Messaging;
    using Generic = ::tunitas::app::exception::Messaging;
  };
public:
  explicit Messaging(std::string const &message);
  auto what() const noexcept -> char const * final;
private:
  static auto format(std::string const &NAME) -> std::string;
};
#endiv
#divert <cpp>
tests::unit::app::Fixture::Messaging::Messaging(std::string const &message)
  : ancestors::Messaging{format(message)}
{ }
auto tests::unit::app::Fixture::Messaging::what() const noexcept -> char const * {
  return ancestors::Messaging::what();
}
auto tests::unit::app::Fixture::Messaging::format(std::string const &message) -> std::string {
  // Keep this simple so that app.Fixture.xcpp
  //   auto tests::unit::app::Fixture::test_exception_Messaging_1() -> void
  // can replicate the formatting
  return "[" + message + "]";
}
#endiv
