// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/tunitas-basics/blob/master/LICENSE for terms.
#divert <hpp>
#import sys.call.Result
#include <unistd.h> // [[FIXTHIS]] module-posix-os #import uid_t
#import want.sys.posix
namespace want::sys::posix {
  //
  // Set the effective user id (UID)
  //
  // Specification: see setesuid(2)
  //
  //   #include <sys/types.h>
  //   #include <unistd.h>
  //   int seteuid(uid_t effective saved);
  //
  // Usage:  really?
  //
  inline auto seteuid(uid_t effective) -> call::Result;
}
#endiv
#divert <ipp>
#include <unistd.h> // [[FIXTHIS]] module-posix-os #import seteuid
#include <cerrno>
auto want::sys::posix::seteuid(uid_t euid) -> call::Result {
  using Result = call::Result;
  auto r = ::seteuid(euid);
  auto errnum = errno; // capture as soon as practical
  auto b = 0 == r;
  return Result{b, errnum, r};
}
#endiv
