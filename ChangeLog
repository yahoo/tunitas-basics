2019-01-23  Wendell Baker  <wbaker@verizonmedia>

	* Version v1.7.0-0.devel, add tunitas.app.exception becomes a module
	- whereas these are "additions only" the C:R:A rachets to C:R:A=8.0.5 ~ O.F.A=3.5.0
	- to allow applications to cascade the namespace (easily)
	- Whereas this is a pure organizational change, rachet the C:R:A=7.1.4 ~ O.F.A=3.4.1
	* src/tunitas/app/exception/namespace.xcpp: ibidem

2019-01-04  Wendell Baker  <wbaker@oath.com>

	* Version v1.7.0-0.devel, add tunitas::app::options::get_word, get_identifier, get_filepath
	- The "word" cannot be empty and is returned as a std::string
	  any string of characters not containing whitespace
	- The "filepath" cannot be empty, and is returned as a std::filesystem:;path
	  any string of characters not containing whitespace
	- The "identifier" must be shaped like an identifer, but will allow leading number and is returned as a std::string
	  e.g. that certain package named "0ad", which is a multiplayer game set in the days of the Roman Empire.
	- Whereas this is a pure addition, rachet the C:R:A=7.0.4 ~ O.F.A=3.4.0
	* src/tunitas/app/options.get_identifier.xcpp: ibidem.
	* src/tunitas/app/options.get_filepath.xcpp: ibidem.
	* src/tunitas/app/options.get_port.xcpp: commentariat.
	* src/tunitas/app/options.get_word.xcpp: ibidem.
	* src/tunitas/Makefrag.am: C:R:A
	* configure.ac: rachet the version

2018-12-06  Wendell Baker  <wbaker@oath.com>

	* Version v1.6.0-0.devel, urlsafe encoding should prefer upper case
	- See https://tools.ietf.org/html/rfc3986
	-- <quote>For consistency, URI producers and normalizers should use uppercase hexadecimal digits for all percent-encodings.</quote>
	* src/tunitas/urlsafe/detail.xcpp: ibidem.

2018-11-15  Wendell Craig Baker  <wbaker@oath.com>

	* Version v1.6.0-0.devel, tunitas::Outcome constructor accepts and ancestor
	- and tunitas::Outcome leaves private the ancestry in std::variant; "not is-a variant"
	* src/tunitas/Outcome.xcpp: four new constructors in lieu of Outcome(Value)
	- tunitas::Outcome(Value &&), Outcome(Value const &), Outcome(ancestor &&), Outcome(ancestor const &)
	* src/tunitas/outcome.Success.xcpp -> src/tunitas/outcome/Success.xcpp
	* src/tunitas/Outcome.xcpp -> src/tunitas/outcome/Variant.xcpp: in support of.
	* src/tunitas/outcome/Visitor.xcpp: oibidem.
	* src/tunitas/outcome/visit.xcpp: ibidem.

2018-11-14  Wendell Baker  <wbaker@oath.com>

	* Version v1.5.0-0.devel, tunitas::server::exception::Generic
	- libtunitas-server C:R:A=2.0.1, reflecting the addition
	* src/tunitas/server/exception.Generic.xcpp: ibidem.

2018-11-13  Wendell Baker  <wbaker@oath.com>

	* Version v1.4.0-0.devel, tunitas::urlsafe::encode, tunitas::urlsafe::decode
	- rachet libtunitas C:R:A=5.0.2, pretending that the previous was 4.0.1
	- new unit testers go in check/bin and check/lib
	- bin/unit moves to check/bin/unit

	* Version v1.3.0-0.devel, tunitas::base64::encode, tunitas::base64::decode
	- rachet libtunitas C:R:A=4.0.0 but could reasonably have been 4.0.1

2018-10-28  Wendell Craig Baker  <wbaker@oath.com>

	* Version v1.0.1, cleaner packaging, install the tunitas modules, version sync
	  synchronize versions among ChangeLog, configure.ac, src/tunitas/Makefrag.am
	  install the modules of libtunitas
	  removed mention of boost as it is not (yet) used.
	* src/tunitas/Makefrag.am: ibidem.

	* Version v1.0.0, first released.  C:R:A=2.0.0
	* src/tunitas/Makefrag.am: sets the libtunitas.so C:R:A
