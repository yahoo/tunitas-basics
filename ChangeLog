2019-08-23  Wendell Craig Baker  <wbaker@verizonmedia.com>

	* Version v1.8.4, build robustification; portification to gcc 7
	see the git logs

	* Version v1.8.3, modernize the buildconf from temerarious-flagship >= 1.3.3
	Whereas all the information in the ChangeLog is already in the git log
	NOTICE IS GIVEN that ChangeLog will disappear in future revisions.
	See the git log for micro-level changes.
	Macro documentation is at least at
	https://wiki.tunitas.technology/page/Project/tunitas-basics
	https://wiki.tunitas.technology/page/Package/tunitas-basics
	configure.ac states the authoritative version of the package

2019-05-31  Wendell Craig Baker  <wbaker@verizonmedia.com>

	* Version v1.8.0-0.devel, merge from upstream gives
	* src/tunitas/Makefrag.am: library, announced at C:R:A=12:0:1 ~ O.F.A=11.1.0
	- updated mentions of C:R:A to use the colon syntax; but O.F.A to use dot syntax

	* Version v1.8.0-0.devel, libtunitas-app.la with namespace tunitas::app::exception::aspect with exception::Aspect
	- this follows the natural S.C.O.L.D. methodology of using mixins near the standard exception hierarchy
	- this is an ABI-breaking change but with API compatibility
	* src/tunitas/Makefrag.am: library, announced at C:R:A=11:0:0 ~ O.F.A=11.0.0 with the removal of libtunitas-app.la
	* src/tunitas/app/Makefrag.am: new library, announced at C:R:A=1:0:0 ~ O.F.A=1.0.0
	* src/tunitas/Outcome.xcpp: compatibility, entail the tunitas.Success
	* src/tunitas/Success.xcpp: new, separate out the tunitas.Success
	* src/tunitas/app/Configuration.xcpp: add a type alias of nearby Program for the convenience of descendants
	* src/tunitas/app/exception/Generic.xcpp: compatibility with a deprecation warning
	* src/tunitas/app/exception/Messaging.xcpp: ibidem.
	* src/tunitas/app/exception/Quitting.xcpp: ibidem.
	* src/tunitas/app/exception/Usage.xcpp: ibidem.
	* src/tunitas/app/exception/Version.xcpp; ibidem.
	* src/tunitas/app/exception/Generic.xcpp -> src/tunitas/app/exception/Aspect.xcpp: renamed.
	* src/tunitas/app/exception/Messaging.xcpp -> src/tunitas/app/exception/aspect.Messaging.xcpp: ibidem.
	* src/tunitas/app/exception/Quitting.xcpp -> src/tunitas/app/exception/aspect.Quitting.xcpp: ibidem.
	* src/tunitas/app/exception/Usage.xcpp -> src/tunitas/app/exception/aspect.Usage.xcpp: ibidem.
	* src/tunitas/app/exception/Version.xcpp -> src/tunitas/app/exception/aspect.Version.xcpp: ibidem.

2019-05-24  Wendell Craig Baker  <wbaker@verizonmedia.com>

	* Version v1.7.0-0.devel, tunitas.Success, tunitas::SUCCESS
	- split out of tunitas.Outcome, which had incomplete hoisting
	- whereas these are "additions only" the C:R:A rachets to C:R:A=11:0:8 ~ O.F.A=3.8.0
	* src/tunitas/Outcome.xcpp: remove hoisting of Success
	* src/tunitas/Success.xcpp: separate hoist

2019-03-12  Wendell Craig Baker  <wbaker@verizonmedia.com>

	* Version v1.7.0-0.devel, the time via a simplified idiomatic usage of std::chrono
	- whereas these are "additions only" the C:R:A rachets to C:R:A=10:0:7 ~ O.F.A=3.7.0
	- namespace tunitas::time with Clock, Duration, Point, put(Point, format)
	* src/tunitas/Makefrag.am
	* src/tunitas/time with Clock.xcpp, Duration.xcpp, Point.xcpp, put.xcpp

2019-03-06  Wendell Craig Baker  <wbaker@verizonmedia.com>

	* Version v1.7.0-0.devel, configure and build against --with-nonstd-libhttpserver if necessary
	* Makefile.am: use the configuration produced in configure.ac

2019-02-11  Wendell Baker  <wbaker@verizonmedia.com>

	* Version v1.7.0-0.devel, tunitas::app::drop(...) privileges; the concept of Quitting
	- tunitas::required::exception::app::Quitting specifies what a Quitting exception must behave like
	* src/tunitas/app/Pidfile.xcpp: the Pidfile; manually operable across fork(2)
	* src/tunitas/required/exception/app.Quitting.xcpp: the concept
	* src/tunitas/app/options.get_filepath.xcpp: use required::exception::app::Quitting
	* src/tunitas/app/options.get_identifier.xcpp: ibidem.
	* src/tunitas/app/options.get_port.xcpp: ibidem.
	* src/tunitas/app/options.get_word.xcpp: ibidem.
	* src/tunitas/app/drop.xcpp: drop privileges

2019-02-07  Wendell Baker  <wbaker@verizonmedia.com>

	* Version v1.7.0-0.devel, add tunitas.app.exception becomes a module
	- whereas these are "additions only" the C:R:A rachets to C:R:A=8:0:5 ~ O.F.A=3.5.0
	* add onstd.uninitialized_zero
	* add sys.posix Endent, daemon, endpwent, geteuid, getpwnam, getpwname, getpwuid, getuid, geteuid, getresuid, setreuid
	- sys.posix.entry Buffer, Pointer

2019-01-23  Wendell Baker  <wbaker@verizonmedia.com>

	* Version v1.7.0-0.devel, add tunitas.app.exception becomes a module
	- to allow applications to cascade the namespace (easily)
	- Whereas this is a pure organizational change, rachet the C:R:A=7:1:4 ~ O.F.A=3.4.1
	* src/tunitas/app/exception/namespace.xcpp: ibidem

2019-01-04  Wendell Baker  <wbaker@oath.com>

	* Version v1.7.0-0.devel, add tunitas::app::options::get_word, get_identifier, get_filepath
	- The "word" cannot be empty and is returned as a std::string
	  any string of characters not containing whitespace
	- The "filepath" cannot be empty, and is returned as a std::filesystem:;path
	  any string of characters not containing whitespace
	- The "identifier" must be shaped like an identifer, but will allow leading number and is returned as a std::string
	  e.g. that certain package named "0ad", which is a multiplayer game set in the days of the Roman Empire.
	- Whereas this is a pure addition, rachet the C:R:A=7:0:4 ~ O.F.A=3.4.0
	* src/tunitas/app/options.get_identifier.xcpp: ibidem.
	* src/tunitas/app/options.get_filepath.xcpp: ibidem.
	* src/tunitas/app/options.get_port.xcpp: commentariat.
	* src/tunitas/app/options.get_word.xcpp: ibidem.
	* src/tunitas/Makefrag.am: C:R:A
	* configure.ac: rachet the version

2018-12-06  Wendell Baker  <wbaker@oath.com>

	* Version v1.6.0-0.devel, urlsafe encoding should prefer upper case
	- See https://tools.ietf.org/html/rfc3986
	-- <quote>For consistency, URI producers and normalizers should use uppercase hexadecimal digits for all percent-encodings.</quote>
	* src/tunitas/urlsafe/detail.xcpp: ibidem.

2018-11-15  Wendell Craig Baker  <wbaker@oath.com>

	* Version v1.6.0-0.devel, tunitas::Outcome constructor accepts and ancestor
	- and tunitas::Outcome leaves private the ancestry in std::variant; "not is-a variant"
	* src/tunitas/Outcome.xcpp: four new constructors in lieu of Outcome(Value)
	- tunitas::Outcome(Value &&), Outcome(Value const &), Outcome(ancestor &&), Outcome(ancestor const &)
	* src/tunitas/outcome.Success.xcpp -> src/tunitas/outcome/Success.xcpp
	* src/tunitas/Outcome.xcpp -> src/tunitas/outcome/Variant.xcpp: in support of.
	* src/tunitas/outcome/Visitor.xcpp: oibidem.
	* src/tunitas/outcome/visit.xcpp: ibidem.

2018-11-14  Wendell Baker  <wbaker@oath.com>

	* Version v1.5.0-0.devel, tunitas::server::exception::Generic
	- libtunitas-server C:R:A=2:0:1, reflecting the addition
	* src/tunitas/server/exception.Generic.xcpp: ibidem.

2018-11-13  Wendell Baker  <wbaker@oath.com>

	* Version v1.4.0-0.devel, tunitas::urlsafe::encode, tunitas::urlsafe::decode
	- rachet libtunitas C:R:A=5:0:2, pretending that the previous was 4.0.1
	- new unit testers go in check/bin and check/lib
	- bin/unit moves to check/bin/unit

	* Version v1.3.0-0.devel, tunitas::base64::encode, tunitas::base64::decode
	- rachet libtunitas C:R:A=4:0:0 but could reasonably have been 4.0.1

2018-10-28  Wendell Craig Baker  <wbaker@oath.com>

	* Version v1.0.1, cleaner packaging, install the tunitas modules, version sync
	  synchronize versions among ChangeLog, configure.ac, src/tunitas/Makefrag.am
	  install the modules of libtunitas
	  removed mention of boost as it is not (yet) used.
	* src/tunitas/Makefrag.am: ibidem.

	* Version v1.0.0, first released.  C:R:A=2:0:0
	* src/tunitas/Makefrag.am: sets the libtunitas.so C:R:A
