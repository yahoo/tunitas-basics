// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace openssl::managed {
  //
  // A mixin to provide common support for a delete-or-drop capability in the deleter.
  // Descendants only
  //
  // Usage:
  //
  //   struct my::Delete_Something ; public Deleter<TYPE>, public Deleting {
  //     Delete_Something()
  //     explicit Delete_Something(deleting::Configuration)
  //     auto operator()(Value *value) const -> void {
  //        if (deleting::DELETING == configuration) {
  //           if (value) {
  //              THAT_THING_free(value);
  //           }
  //        }
  //      }
  //   };
  //
  class Deleting;
}
#endiv
#divert <hpp>
class openssl::managed::Deleting {
public:
  enum Configuration { DROPPING, DELETING };
protected:
  ~Deleting() = default;
  inline Deleting() : configuration{DELETING} { }
  inline explicit Deleting(Configuration configuration) : configuration{configuration} { }
  Configuration configuration;
};
#endiv
