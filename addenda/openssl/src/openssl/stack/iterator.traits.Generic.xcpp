// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import openssl.required.Stacklike
#forward openssl.stack.Iterator
namespace openssl::stack::iterator::traits {
  //
  // Common traits shared by all iterators, whether they are on Stack or Stack0
  // Specializations only, just what you see here.
  // These traits are indexed by the stackable item of the stack.
  //
  // Usage:
  //
  //   see std::iterator_traits<Iterator<Stack<TYPE>>>
  //
  template<required::Stacklike STACKLIKE> struct Generic;
}
#endiv
#divert <hpp>
#import std.ptrdiff_t
#import std.bidirectional_iterator_tag
namespace openssl::stack::iterator {
  template<required::Stacklike STACKLIKE> struct traits::Generic {
    // New School
    using Value = typename STACKLIKE::Traits::Value; // MAY be a "Value" or "Value0"
    using Difference = std::ptrdiff_t;
    using Reference = void;
    using Pointer = void;
    using Category = std::bidirectional_iterator_tag;
    // old_school
    using value_type = Value;
    using difference_type = Difference;
    using reference = Reference;
    using pointer = Pointer;
    using iterator_category = Category;
  };
}
#endiv
#divert <ipp>
#import openssl.stack.Iterator
#import openssl.stack.Stack
#import openssl.stack.Stack0
#endiv
