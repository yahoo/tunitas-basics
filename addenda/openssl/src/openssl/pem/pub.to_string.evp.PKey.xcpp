// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import openssl.evp.PKey
#import std.string
namespace openssl::pem::pub {
  //
  // Convert the public(--only) into PEM, as a string.
  // Throws on std::error_code upon failure to to_string the public aspect of the key.
  //
  // Usage:
  //
  //   auto specimen = evp::PKey{...somehow...};
  //   auto pemmican = pub::to_string(specimen);
  //
  inline auto to_string(evp::PKey const &) -> std::string;
}
#endiv
#divert <ipp>
#import openssl.functions
#import openssl.pem.detail.write_and_recover
namespace openssl::pem {
  auto pub::to_string(evp::PKey const &source) -> std::string {
    using Writer = std::function<int (bio::String &, evp::PKey const &)>;
    Writer const writer = [](bio::String &out, evp::PKey const &source) {
                            return PEM_write_bio_PUBKEY(out.get(), source.get());
                          };
    return detail::write_and_recover(source, writer);
  }
}
#endiv
