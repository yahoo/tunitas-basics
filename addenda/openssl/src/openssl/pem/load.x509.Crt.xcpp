// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import openssl.x509.Crt
#import openssl.pem.load.declaration
namespace openssl::pem::packaging::load::function {
  //
  // Load the certificate (a.k.a. crt) from the file
  // Throws on failure to load the request.
  // [[FIXTHIS]] provide a (less-,non-)throwing variant which returns an outcome.
  //
  // Usage:
  //
  //   auto const filepath = std::filesystem::path{...somehow...};
  //   auto loaded = load<x509::Crt>(filepath);
  //
  template<> inline auto load<x509::Crt>(Filepath) -> x509::Crt;
}
#endiv
#divert <ipp>
#import openssl.functions
namespace openssl::pem::packaging::load {
  template<> auto function::load<x509::Crt>(Filepath filepath) -> x509::Crt {
    using Reader = std::function<X509 *(BIO *)>;
    Reader const reader = [](BIO *in) { 
                            // See the commentariat in Load.declaration.xcpp
                            auto const indirect_x = nullptr;
                            auto const callback_function = nullptr;
                            auto const callback_data = nullptr;;
                            return PEM_read_bio_X509(in, indirect_x, callback_function, callback_data);
                          };
    return detail::open_read_close<x509::Crt>(filepath, reader);
  }
}
#endiv
