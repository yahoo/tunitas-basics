// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace openssl::exception {
  //
  // The (stack) is empty
  // Like std::invalid_argument, only moreso; applicable to x509::Stack<TYPE>
  //
  // Usage:
  //
  //   try {
  //     throw Empty{};
  //     stack.pop();
  //   } catch (Aspect const &) {
  //     ...recover...
  //   }
  //
  class Empty;
}
#endiv
#divert <hpp>
#import openssl.exception.Aspect
#import std.invalid_argument
class openssl::exception::Empty : public Aspect, public std::invalid_argument {
  struct ancestors {
    using Aspect = openssl::exception::Aspect;
    using Exception = std::invalid_argument;
  };
public:
  inline Empty() : ancestors::Exception{"empty"} { }
  auto what() const noexcept -> char const * override { return ancestors::Exception::what(); }
};
#endiv
