// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace openssl::exception {
  //
  // A null ptr is discovered
  // Like std::bad_alloc, but doesn't indicate an allocation has occurred.
  //
  // Usage:
  //
  //   try {
  //     throw Null{};
  //   } catch (Aspect const &) {
  //     ...recover...
  //   }
  //
  class Null;
}
#endiv
#divert <hpp>
#import openssl.exception.Aspect
#import std.exception
class openssl::exception::Null : public Aspect, public std::exception {
  struct ancestors {
    using Aspect = openssl::exception::Aspect;
    using Exception = std::exception;
  };
public:
  Null() = default;
  auto what() const noexcept -> char const * override;
};
#endiv
#divert <cpp>
auto openssl::exception::Null::what() const noexcept -> char const * {
  return "nullptr";
}
#endiv
