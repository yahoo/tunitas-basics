// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace openssl::exception {
  //
  // An time with no representation is discovered.
  // Descendants only.
  //
  // The time exception can consiste of ASN1 Time which is outright bogus,
  // or this can consist of ASN1 Time which is No Well Defined Expiration
  //
  // The sense here is that the Time exception is like an invalid argument,
  // but pertains to a time and even when the time is not an argument to a function.
  //
  // Usage:
  //
  //   try {
  //     throw time::Invalid{};
  //     throw time::No_Well_Defined{};
  //   } catch (Aspect const &) {
  //     ...recover...
  //   }
  //
  class Time;
}
#endiv
#divert <hpp>
#import openssl.exception.Aspect
#import std.exception
class openssl::exception::Time : public Aspect, public std::exception {
  struct ancestors {
    using Aspect = openssl::exception::Aspect;
    using Exception = std::exception;
  };
protected:
  ~Time() = default;
  Time() = default;
};
#endiv
