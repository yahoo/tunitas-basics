// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace openssl::ec {
  //
  // An Elliptic Curve (Private) Key
  //
  class Key;
}
#endiv
#divert <hpp>
#import openssl.types
#import openssl.ec.Group
#import openssl.managed.Pointer
#import openssl.managed.Deleter.EC_KEY
class openssl::ec::Key : public managed::Pointer<EC_KEY> {
  using ancestor = managed::Pointer<EC_KEY>;
public:
  inline Key();
  inline auto set_group(Group) -> void;
  inline auto generate_key() -> void;
};
#endiv
#divert <ipp>
#import openssl.error.Code
#import openssl.functions
#import std.error_code
namespace openssl::ec {
  Key::Key()
    : ancestor{EC_KEY_new()}
  { }
  auto Key::set_group(Group group) -> void {
    auto ok = EC_KEY_set_group(get(), group.get());
    if (!ok) {
      throw std::error_code{error::Code::EC};
    }
    group.release();
  }
  auto Key::generate_key() -> void {
    auto ok = EC_KEY_generate_key(get());
    if (!ok) {
      throw std::error_code{error::Code::EC};
    }
  }
}
#endiv
