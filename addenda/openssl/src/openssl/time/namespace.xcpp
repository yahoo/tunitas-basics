// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.chrono.seconds
#import std.chrono.duration
#import std.ratio
namespace openssl::time {
  namespace ratio {
    // [[FIXTHIS]] by the naming convention, these ought to be in openssl.time.ratio
    using Seconds = std::ratio<1>;
    using Minutes = std::ratio_multiply<std::ratio<60>, Seconds>::type;
    using Hours   = std::ratio_multiply<std::ratio<60>, Minutes>::type;
    using Days    = std::ratio_multiply<std::ratio<24>, Hours>::type;
    using Weeks   = std::ratio_multiply<std::ratio<7>, Days>::type;
    using Months  = std::ratio_multiply<std::ratio<30>, Days>; // close enoug::typeh
    using Years   = std::ratio_multiply<std::ratio<365>, Days>; // close enoug::typeh
  }
  namespace duration {
    // [[FIXTHIS]] by the naming convention, these ought to be in openssl.time.duration
    using Seconds = std::chrono::duration<std::chrono::seconds::rep, ratio::Seconds>;
    using Minutes = std::chrono::duration<Seconds::rep, ratio::Minutes>;
    using Hours   = std::chrono::duration<Minutes::rep, ratio::Hours>;
    using Days    = std::chrono::duration<Hours::rep, ratio::Days>;
    using Weeks   = std::chrono::duration<Days::rep, ratio::Weeks>;
    using Months  = std::chrono::duration<Days::rep, ratio::Months>;
    using Years   = std::chrono::duration<Days::rep, ratio::Years>;
  }
}
#endiv
#divert <cpp>
// This is test code
#import std.is_same
namespace openssl::time {
  static_assert(std::is_same<duration::Seconds, std::chrono::seconds>::value);
  static_assert(std::is_same<duration::Minutes, std::chrono::minutes>::value);
  static_assert(std::is_same<duration::Hours, std::chrono::hours>::value);
}
#endiv
