// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace openssl::x509::field {
  //
  // A tagged field of the Subject Name or Issuer Name
  //
  // Some size limits: from RFC 2459
  //   ub_name                         32768
  //   ub_common_name                  64
  //   ub_locality_name                128
  //   ub_state_name                   128
  //   ub_organization_name            64
  //   ub_organization_unit_name       64
  //   ub_title                        64
  //   ub_email_address                128
  //
  enum class Name { C, ST, L, O, OU, CN };
  template<Name> class Named;
}
#endiv
#divert <hpp>
#import openssl.x509.field.Basis
namespace openssl::x509 {
  template<field::Name> class field::Named : public Basis {
    using ancestor = Basis;
  public:
    inline Named();
  };
}
namespace openssl::x509::field {
  template<> inline Named<Name::C>::Named();
  template<> inline Named<Name::ST>::Named();
  template<> inline Named<Name::L>::Named();
  template<> inline Named<Name::O>::Named();
  template<> inline Named<Name::OU>::Named();
  template<> inline Named<Name::CN>::Named();
}
#endiv
#divert <ipp>
namespace openssl::x509::field {
  template<> Named<Name::C>::Named()  : ancestor{"C", 1u} { }
  template<> Named<Name::ST>::Named() : ancestor{"ST", 2u} { }
  template<> Named<Name::L>::Named()  : ancestor{"L", 1u} { }
  template<> Named<Name::O>::Named()  : ancestor{"O", 1u} { }
  template<> Named<Name::OU>::Named() : ancestor{"OU", 2u} { }
  template<> Named<Name::CN>::Named() : ancestor{"CN", 2u} { }
}
#endiv
