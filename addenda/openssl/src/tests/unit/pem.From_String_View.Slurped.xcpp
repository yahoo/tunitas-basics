// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#include <hpp/tests.unit.pem.From_String_View>
#endiv
#divert<hpp>
#import std.string
#import std.string_view
class tests::unit::pem::From_String_View::Slurped : private std::string {
  using ancestor = std::string;
public:
  inline explicit Slurped(std::string);
  //
  // Of course the lifetime of the Slurped must be longer than that ot he view  that emits in cast.
  //
  inline operator std::string_view() const;
};
#endiv
#divert <ipp>
#import std.move
namespace tests::unit::pem {
  From_String_View::Slurped::Slurped(std::string value)
    : ancestor{std::move(value)}
  { }
  From_String_View::Slurped::operator std::string_view() const {
    return std::string_view{ancestor::data(), ancestor::size()};
  }
}
#endiv
