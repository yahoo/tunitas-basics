// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::pem::pub { class To_String; }
#endiv
#divert <hpp>
#import cppunit.test.Fixture
#import cppunit.Test
class tests::unit::pem::pub::To_String : public cppunit::test::Fixture {
public:
  template<typename OBJECT> auto test_to_string() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <tpp>
#import tests.unit.pem.Maker
#import openssl.pem.to_string
#import std.cerr
namespace tests::unit::pem::pub {
  template<typename OBJECT> auto To_String::test_to_string() -> void {
    Maker<OBJECT> maker;
    auto stringy = ::openssl::pem::pub::to_string(maker());
    CPPUNIT_ASSERT(!stringy.empty());
    std::cerr << stringy;
  }
}
#endiv
#divert <cpp>
#import openssl.evp.PKey
#import openssl.x509.Req
#import openssl.x509.Crt
#import rigging.suite.io
auto tests::unit::pem::pub::To_String::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("to_string");
  // For pub::to_string(...), only the evp::PKey overload exists
  series << call("evp::PKey", &To_String::test_to_string<::openssl::evp::PKey>)
    ;
  return finalize(series);
}
#endiv
