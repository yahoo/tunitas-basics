// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import std.filesystem.path
#import std.string_view
namespace tests {
  //
  // Return "present" or "absent" depending on whether the file is present or absent.
  // Because having a single definition is better than cut&paste of a lambda...
  //
  // Usage:
  //
  //   cout << "that file is " << present("./that-file") << '\n';
  //
  inline auto present(std::filesystem::path const &) -> std::string_view;
}
#endiv
#divert <ipp>
#import std.string_view_literals
#import sys.posix.exists // equivalently: std::filesystem::exists
auto tests::present(std::filesystem::path const &candidate) -> std::string_view {
  using namespace std::string_view_literals;
  return sys::posix::exists(candidate) ? "present"sv :  "absent"sv;
}
#endiv
