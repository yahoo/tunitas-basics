// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenace see the LICENSE file at the top of the repository.
#divert <hpp>
#import format.detail.Match
namespace format {
  //
  // Same as q(VALUE)
  //
  // Usage:
  //
  //     std::cout << quote("quote this");
  //
  // Of course, the reference to the VALUE must last for the lifetime of the formatter object
  template<typename VALUE> inline auto quote(VALUE const &) -> detail::Match<char, VALUE>;
}
#endiv
#divert <ipp>
#import format.q
#import std.is_same
template<typename VALUE> auto format::quote(VALUE const &value) -> detail::Match<char, VALUE> {
  static_assert(std::is_same<decltype(q(value)), decltype(quote(value))>::value, "q(...) and quote(...) are inconsistently defiend");
  return detail::Match<char, VALUE>('\'', value, '\'');
}
#endiv
