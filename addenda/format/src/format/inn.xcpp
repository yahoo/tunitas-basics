// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import format.detail.ifnot.Null
namespace format {
  //
  // If Not Null then insert as VALUE
  //
  // Usage:
  //
  //     cout << inn(quote("quote this"))
  //     cout << inn(quote(nullptr))
  //     cout << inn(quote(std::optional<int>()))
  //
  // Of course, the reference to the VALUE must last for the lifetime of the formatter object
  template<typename VALUE> inline auto inn(VALUE const &) -> detail::ifnot::Null<VALUE>;
}
#endiv
#divert <ipp>
template<typename VALUE> auto format::inn(VALUE const &value) -> detail::ifnot::Null<VALUE> {
  return detail::ifnot::Null<VALUE>(value);
}
#endiv
