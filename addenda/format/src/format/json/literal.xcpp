// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import format.json.detail.Literal
namespace format::json {
  //
  // usage:
  //
  //     outbound << json::literal("quote this")      <--- char const [11] with trailing '\0'
  //              << json::literal(quote_this)        <--- char const * with sentinel '\0 terminator
  //              << json::literal(1)
  //              << json::literal(false)
  //
  // Of course, the reference to the VALUE must last for the lifetime of the formatter object
  template<typename VALUE> inline auto literal(VALUE const &) -> detail::Literal<VALUE>;
}
#endiv
#divert <ipp>
template<typename VALUE> auto format::json::literal(VALUE const &value) -> detail::Literal<VALUE> {
  return detail::Literal<VALUE>(value);
}
#endiv
