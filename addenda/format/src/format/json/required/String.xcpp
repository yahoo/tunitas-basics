// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import format.json.required.Stringlike
#import std.char_traits
#import std.basic_ostream
namespace format::json::required {
  // WATCHOUT - here we use std::char_traits<typename STRING::value_type>
  //             we do not use 'typename STRING::traits_type' because not all "String" concept objects have a traits_type, e.g. c::stringz
  template<typename STRING> concept String = requires (STRING string, std::basic_ostream<typename STRING::value_type, std::char_traits<typename STRING::value_type>> &outbound) {
    requires required::stringlike::Object<STRING>;
    outbound << string;
  };
}

#import std.string
#import std.string_view
#import c.stringz
#import c.const_stringz
namespace format::json::required {
  // NOT static_assert(String<char const *>, "fail");
  static_assert(String<std::string>, "fail");
  static_assert(String<std::string_view>, "fail");
  static_assert(String<c::stringz>, "fail");
  static_assert(String<c::const_stringz>, "fail");
}
#endiv
