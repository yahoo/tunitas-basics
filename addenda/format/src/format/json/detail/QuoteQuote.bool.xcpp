// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#forward format.json.detail.QuoteQuote
#import std.basic_ostream
namespace format::json::detail {
  template<typename CHAR, typename TRAITS> auto operator<<(std::basic_ostream<CHAR, TRAITS> &, QuoteQuote<bool> const &) -> std::basic_ostream<CHAR, TRAITS> &;
}
#endiv
#divert <ipp>
#import format.json.detail.QuoteQuote
#import std.boolalpha
template<typename CHAR, typename TRAITS> auto format::json::detail::operator<<(std::basic_ostream<CHAR, TRAITS> &o, QuoteQuote<bool> const &q) -> std::basic_ostream<CHAR, TRAITS> & {
  CHAR const QQ('"');
  // Use boolalpha here because we are emitting a quoted literal (a string).
  // We are not emitting the JSON literal 'true' or 'false'
  return o << QQ << std::boolalpha << q.value << QQ;
}
#endiv
