// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import format.json.required.Character
#forward format.json.detail.QuoteQuote
#import std.basic_ostream
namespace format::json::detail {
  template<typename CHAR, typename TRAITS> inline auto operator<<(std::basic_ostream<CHAR, TRAITS> &, QuoteQuote<CHAR const *> const &) -> std::basic_ostream<CHAR, TRAITS> & requires required::Character<CHAR>;
}
#endiv
#divert <ipp>
#import format.json.detail.QuoteQuote
#import format.json.charcode
template<typename CHAR, typename TRAITS> auto format::json::detail::operator<<(std::basic_ostream<CHAR, TRAITS> &o, QuoteQuote<CHAR const *> const &q) -> std::basic_ostream<CHAR, TRAITS> & requires required::Character<CHAR> {
  if (nullptr == q.value) {
    return o << QuoteQuote<std::nullptr_t>(nullptr);
  } else if (o) {
    CHAR const QQ('"');
    CHAR const SENTINEL('\0');
    o << QQ;
    for (auto p(q.value); SENTINEL != *p; ++p) {
      o << charcode(*p);
    }
    o << QQ;
  }
  return o;
}
#endiv
