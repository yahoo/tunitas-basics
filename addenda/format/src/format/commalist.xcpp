// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import format.detail.separator.Formatter
#import format.required.Container
namespace format {
  //
  // Usage:
  //
  //     auto container = std::list<int>{1,2,3,4,5}
  //     std::cout << commalist(container);
  //
  // Of course, the reference to the VALUE must last for the lifetime of the formatter object
  template<required::Container CONTAINER> inline auto commalist(CONTAINER const &, char const *separator = ", ") -> detail::separator::Formatter<CONTAINER, char const *>;
}
#endiv
#divert <ipp>
template<format::required::Container CONTAINER> auto format::commalist(CONTAINER const &container, char const *separator) -> detail::separator::Formatter<CONTAINER, char const *> {
  return detail::separator::Formatter<CONTAINER, char const *>(container, separator);
}
#endiv
