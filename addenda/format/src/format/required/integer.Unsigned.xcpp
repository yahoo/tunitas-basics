// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenace see the LICENSE file at the top of the repository.
#divert <fpp>
#import nonstd.is_unsigned
#include <hpp/nonstd.is_unsigned>
namespace format::required::integer {
  //
  // What constitutes an unsigned integer?
  //
  template<typename INTEGER> concept Unsigned = nonstd::is_unsigned<INTEGER>::value;
}
#endiv
#divert <cpp>
#import nonstd.integers
namespace format::required::integer {
  using namespace nonstd::integers;
  // signed
  static_assert(!Unsigned<nonstd::int8_t>);
  static_assert(!Unsigned<nonstd::int16_t>);
  static_assert(!Unsigned<nonstd::int32_t>);
  static_assert(!Unsigned<nonstd::int64_t>);
  static_assert(!Unsigned<nonstd::int128_t>);
  // unsigned
  static_assert(Unsigned<nonstd::uint8_t>);
  static_assert(Unsigned<nonstd::uint16_t>);
  static_assert(Unsigned<nonstd::uint32_t>);
  static_assert(Unsigned<nonstd::uint64_t>);
  static_assert(Unsigned<nonstd::uint128_t>);
}
#endiv
