// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenace see the LICENSE file at the top of the repository.
#divert <fpp>
#import format.detail.Match
namespace format::detail {
  //
  // When nesting the Match structure, the inner one must be captured by value (not by reference)
  // You can configure it to do capture-by-referenc but that is typically nevr what you want.
  //
  // Usage
  //     using inner_match = format::detail::Match<char, std::string>; <---------------- the string is captured by reference
  //     using outer_match = format::detail::Match<char, inner_match, inner_match>; <--- the inner match captured by value
  //     std::cout << outer_match('<', inner_match(' ', "some string"s, ' '), '>');
  //

  template<required::Character CHAR, typename VALUE> using Match_Match = class Match<CHAR, /*value*/ Match<CHAR, VALUE>, /*capture by value*/ Match<CHAR, VALUE>>;
}
#endiv
