// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#forward format.detail.tuple.Formatter
#import std.tuple
namespace format::detail::tuple {
  template<typename... VALUES> class Formatter<std::tuple<VALUES const &...>>;
}
#endiv
#divert <hpp>
template<typename... VALUES> class format::detail::tuple::Formatter<std::tuple<VALUES const &...>> {
public:
  using value_type = std::tuple<VALUES const &...>;
  using argument_type = value_type const &;
  using capture_type = value_type; // capture tuple-of-references by value.
  inline explicit Formatter(argument_type);
  value_type value;
};
#endiv
#divert <ipp>
template<typename... VALUES> format::detail::tuple::Formatter<std::tuple<VALUES const &...>>::Formatter(argument_type arg_value)
  : value(arg_value) {
  ;
}
#endiv
