// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenace see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.size_t
namespace format::detail {
  template<std::size_t N, typename VALUE> class Pipe;
}
#endiv
#divert <hpp>
#import std.ostream
#import std.size_t
namespace format::detail {
  template<std::size_t N, typename VALUE> inline auto operator<<(std::ostream &, Pipe<N, VALUE> const &) -> std::ostream &;
  template<typename VALUE> inline auto operator<<(std::ostream &, Pipe<0, VALUE> const &) -> std::ostream &;
}

#import format.detail.Formatter
template<std::size_t N, typename VALUE> class format::detail::Pipe : public Formatter<VALUE> {
  using ancestor = Formatter<VALUE>;
public:
  using ancestor::Formatter;
};
#endiv
#divert <ipp>
template<std::size_t N, typename VALUE> auto format::detail::operator<<(std::ostream &o, Pipe<N, VALUE> const &p) -> std::ostream & {
  Pipe<N-1, VALUE> sub(p.value);
  return o << '|' << sub << '|';
}

template<typename VALUE> auto format::detail::operator<<(std::ostream &o, Pipe<0, VALUE> const &p) -> std::ostream & {
  return o << p.value;
}
#endiv
