// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.char_traits
namespace format::stream {
  //
  // A null input & output stream
  // ... like basic_iostream, but supplies its own null streambuf
  //
  template<typename CHAR, typename TRAITS = std::char_traits<CHAR>> class basic_null;
}
#endiv
#divert <hpp>
#import std.basic_iostream
#import std.unique_ptr
#import format.stream.Nullbuf
template<typename CHAR, typename TRAITS> class format::stream::basic_null : public std::basic_iostream<CHAR, TRAITS> {
  using ancestor = std::basic_iostream<CHAR, TRAITS>;
public:
  inline basic_null();
  // No capability for copy or move because of the ancestry
protected:
  std::unique_ptr<Nullbuf<CHAR, TRAITS>> buf;
};
#endiv
#divert <ipp>
template<typename CHAR, typename TRAITS> format::stream::basic_null<CHAR, TRAITS>::basic_null()
  : ancestor()
  , buf(new Nullbuf<CHAR, TRAITS>()) {
  this->rdbuf(buf.get());
}
#endiv
