// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenace see the LICENSE file at the top of the repository.
#divert <hpp>
#import format.detail.ifnot.Empty
namespace format {
  //
  // If Not Empty then insert as VALUE
  //
  // Usage:
  //
  //     cout << ine(quote("quote this"))
  //     cout << ine(quote(nullptr))
  //     cout << ine(quote(std::string()))
  //     cout << ine(quote(std::optional<int>()))
  //     cout << ine(parenthesis(commalist(std::set<int>())))
  //
  // Of course, the reference to the VALUE must last for the lifetime of the formatter object
  template<typename VALUE> inline auto ine(VALUE const &) -> detail::ifnot::Empty<VALUE>;
}
#endiv
#divert <ipp>
#import format.q
#import std.is_same
template<typename VALUE> auto format::ine(VALUE const &value) -> detail::ifnot::Empty<VALUE> {
  return detail::ifnot::Empty<VALUE>(value);
}
#endiv
