// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenace see the LICENSE file at the top of the repository.
#divert <fpp>
#forward tests.unit.format.json.Enumeration_Limits
namespace tests::unit::format::json {
  enum class Format { QUOTE, LITERAL, PURE };
  template<> struct Enumeration_Limits<Format>;
}
#endiv
#divert <hpp>
#import std.size_t
template<> struct tests::unit::format::json::Enumeration_Limits<tests::unit::format::json::Format> {
  using type = tests::unit::format::json::Format;
  static constexpr auto min() -> std::size_t { return (std::size_t)type::QUOTE; }
  static constexpr auto max() -> std::size_t { return (std::size_t)type::PURE; }
  static constexpr auto size() -> std::size_t { return 1 + (max() - min()); }
  static constexpr auto index(type symbolic) -> std::size_t { return (std::size_t)(symbolic) - min(); }
};

#import tests.unit.format.json.Enumeration_Limits
namespace tests::unit::format::json {
  static_assert(required::Enumeration_Limits<Format>, "fail");
}
#endiv
