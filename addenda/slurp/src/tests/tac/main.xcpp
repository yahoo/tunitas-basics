// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <cpp>
#import c.argv
#import c.rest
#import slurp.file.read
#import options.Program
#import std.cerr
#import std.copy
#import std.cout
#import std.exception
#import std.ostream_iterator
#import std.string
#import std.vector
#import sys.exits.constants
#import want.rbegin
#import want.rend
auto main(int arg_c, char **arg_v) -> int {
  c::argv argv(arg_c, arg_v);
  options::Program program(argv);
  using container_type = std::vector<char>;
  std::ostream &err(std::cerr);
  std::ostream &out(std::cout);
  sys::exits::Code exit = sys::exits::OK;
  for (std::string name_of_file : rest(argv)) {
    try {
      auto body = slurp::file::read<container_type>(name_of_file);
      err << "filename " << name_of_file << '\n'
          << "tac (backwards)\n";
      // that's ... we just need to use rbegin and rend instead of begin & end
      std::copy(want::rbegin(body), want::rend(body), std::ostream_iterator<char>(out));
    } catch (std::exception const &e) {
      err << program << ": failed to open " << name_of_file << " because " << e.what() << '\n';
      exit = sys::exits::FAIL;
    }
  }
  return exit;
}
#endiv
