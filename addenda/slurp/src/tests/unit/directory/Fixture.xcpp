// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    namespace directory {
      class Fixture;
    }
  }
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::directory::Fixture : public cppunit::test::Fixture {
public:
  auto test_read() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import std.list
#import std.string
#import slurp.directory.read

auto tests::unit::directory::Fixture::test_read() -> void {
  auto listing = ::slurp::directory::read<std::list<std::string>>("/tmp");
  // There will be at least "." and ".." therein
  CPPUNIT_ASSERT(!listing.empty());
}

#import tests.unit.directory.read.Fixture
#import unit.rigging.suite.Stream
#import unit.rigging.suite.add
#import unit.rigging.suite.call
auto tests::unit::directory::Fixture::suite() -> cppunit::Test * {
  using namespace ::unit::rigging::suite;
  Stream s("directory");
  s << call("read-usage", &Fixture::test_read)
    << add(read::Fixture::suite())
    ;
  return s.release();
}
#endiv
