// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the license file at the top of this repository.
// Also the LICENSE file at https://github.com/yahoo/tunitas-packaging/blob/master/LICENSE (as available)
// Also the LICENSE file at https://git.tunitas.technology/all/components/$PACKAGE/tree/LICENSE (as available)
#divert <fpp>
#import std.is_same
#import std.remove_const
namespace c::required {
  //
  // recall, the c-string module entails "const" into the template parameter.
  // e.g.
  //     'char'
  //     'char const'
  //
  namespace detail {
    template<typename CHARACTER> concept bool Character_Basis =
      (std::is_same<char, CHARACTER>::value ||
       std::is_same<wchar_t, CHARACTER>::value ||
       std::is_same<char16_t, CHARACTER>::value ||
       std::is_same<char32_t, CHARACTER>::value);
  }
  template<typename CHARACTER> concept bool Character =
    (detail::Character_Basis<CHARACTER> ||
     detail::Character_Basis<typename std::remove_const<CHARACTER>::type>);
}
#endiv
