// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the license file at the top of this repository.
// Also the LICENSE file at https://github.com/yahoo/tunitas-packaging/blob/master/LICENSE (as available)
// Also the LICENSE file at https://git.tunitas.technology/all/components/$PACKAGE/tree/LICENSE (as available)
#divert <fpp>
#forward c.detail.UnboundVector.Character
namespace c {
  namespace detail {
    template<typename CHAR> class UnboundVector<Character<CHAR>>;
  }
}
#endiv
#divert <hpp>
#import c.detail.specification.Unbound
#import std.is_const
template<typename CHAR> class c::detail::UnboundVector<c::detail::Character<CHAR>> : public specification::UIMYC<CHAR, CHAR> {
  using ancestor = specification::UIMYC<CHAR, CHAR>;
  static_assert(!std::is_const<CHAR>::value, "CHAR must not be const, there is another specialization nearby that handles consty");
public:
  using ancestor::Unbound;
};
#endiv
