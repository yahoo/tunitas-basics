// -*- c++ -*-  in the SCOLD styling that is so popular these days
#divert <hpp>
#import std.size_t
namespace c {
  namespace detail {
    namespace argv {
      // Whereas as<...>(...) is a conversion operation,
      // the new data invariant of argv must be respected.
      // In addition to supplying a count (argc, argv[]), nullptr == argv[argc]
      // so the true size commitment of argv[] is argc+1
      // These throw std::invalid_argument if the element at [N] is not nullptr
      inline auto enforce_terminating_nullptr_invariant(std::size_t argc, char const  *const argv[]) -> void;
    }
  }
}
#divert </hpp>
#divert <ipp>
#import std.invalid_argument
auto c::detail::argv::enforce_terminating_nullptr_invariant(std::size_t argc, char const  *const argv[]) -> void {
  // argc can be 0, but nullptr == argv[0] must hold
  if (nullptr == argv || nullptr != argv[argc]) {
    throw std::invalid_argument("the argv nullptr sentinel was missing");
  }
}
#divert </ipp>
