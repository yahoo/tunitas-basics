// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the license file at the top of this repository.
// Also the LICENSE file at https://github.com/yahoo/tunitas-packaging/blob/master/LICENSE (as available)
// Also the LICENSE file at https://git.tunitas.technology/all/components/$PACKAGE/tree/LICENSE (as available)
#divert <fpp>
namespace c {
  namespace detail {
    namespace specification {
      template<typename ITEM> class Bound;
    }
  }
}
#entail c.detail.specification.Core
#entail c.detail.specification.Indirection
#entail c.detail.specification.Mutability
namespace c {
  namespace detail {
    namespace specification {
      //
      // After 'Indirection'
      //
      //  Usage
      //   BIMNC<char, char>  <--------------- tricky, 'char' stays the same
      //   BIMNC<char, char const *>
      //   BIMNC<char, char const *const *>
      //
      //   BIMYC<char, char> <--- Ibidem.
      //   BIMYC<char, char *>
      //   BIMYC<char, char **>
      //
      template<Mutability MUTABILITY, typename CHAR, typename VALUE> using BIMC = Bound<Indirection<MUTABILITY, Core<CHAR>, VALUE>>;
      template<typename CHAR, typename VALUE> using BIMNC = BIMC<Mutability::NO, CHAR, VALUE>;
      template<typename CHAR, typename VALUE> using BIMYC = BIMC<Mutability::YES, CHAR, VALUE>;
    }
  }
}
#entail c.detail.specification.Bound.consty
#entail c.detail.specification.Bound.muting
#divert </fpp>
