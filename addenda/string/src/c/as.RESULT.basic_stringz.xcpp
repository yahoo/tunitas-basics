// -*- c++ -*-  in the SCOLD styling that is so popular these days
#divert <hpp>
#import c.as
#import c.basic_stringz
namespace c {
  template<typename RESULT, typename CHAR> inline auto as(basic_stringz<CHAR const> const &) -> RESULT;
  // Indeed, there must be a const reference variant for the non-const pointer-holding stringn<char> 
  template<typename RESULT, typename CHAR> inline auto as(basic_stringz<CHAR> /*const*/ &) -> RESULT;
}
#divert </hpp>
#divert <ipp>
#import c.detail.Dispatcher.basic_stringz
template<typename RESULT, typename CHAR> auto c::as(basic_stringz<CHAR const> const &subject) -> RESULT {
  detail::Dispatcher<RESULT> call;
  return call(subject);
}

template<typename RESULT, typename CHAR> auto c::as(basic_stringz<CHAR> /*const*/ &subject) -> RESULT {
  detail::Dispatcher<RESULT> call;
  return call(subject);
}
#divert </ipp>
