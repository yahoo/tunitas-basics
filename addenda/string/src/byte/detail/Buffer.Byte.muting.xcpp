// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the license file at the top of this repository.
// Also the LICENSE file at https://github.com/yahoo/tunitas-packaging/blob/master/LICENSE (as available)
// Also the LICENSE file at https://git.tunitas.technology/all/components/$PACKAGE/tree/LICENSE (as available)
#divert <fpp>
#forward byte.detail.Buffer.Byte
#import byte.required.Byte
namespace byte::detail {
  //
  // The implementation details of a (mutable) byte buffer
  // The ancestor... to byte::buffer
  //
  template<required::Byte BYTE> class Buffer<Byte<BYTE>>;
}
#endiv
#divert <hpp>
#import c.detail.specification.Bound
#import std.is_const
template<byte::required::Byte BYTE> class byte::detail::Buffer<byte::detail::Byte<BYTE>> : public c::detail::specification::BIMYC<BYTE, BYTE> {
  using ancestor = c::detail::specification::BIMYC<BYTE, BYTE>;
  static_assert(!std::is_const<BYTE>::value, "BYTE must not be const, there is another specialization nearby that handles consty");
protected:
  ~Buffer() = default; // descendants only
public:
  using ancestor::Bound;
};
#endiv
