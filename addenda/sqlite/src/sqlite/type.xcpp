// -*- c++ -*- in the stylings of SCOLD 
#divert <hpp>
#import sqlite.Type
#import sqlite.Value.PROTECTED
namespace sqlite {
  // Yes, there is no way to extract the "type" out of a Value<UNPROTECTED>.
  //   Either remember what you created or separately call Statement::type(column_index) -> type
  // There is only a way to extract the "type" out of a Value<PROTECTED>.
  inline auto type(Value<PROTECTED> &) -> Type;
}
#endiv
#divert <ipp>
#import sqlite.api.unguarded
auto sqlite::type(Value<PROTECTED> &value) -> Type {
  return api::unguarded::type(value.safe());
}
#endiv
