// -*- c++ -*- in the stylings of SCOLD
#divert <fpp>
namespace sqlite {
  namespace exception {
    class Generic; 
  }
}
#endiv
#divert <hpp>
#import std.runtime_error
#import std.string
class sqlite::exception::Generic : public std::runtime_error {
  using Ancestor = std::runtime_error;
protected:
  inline explicit Generic(std::string const &message);
  //
  // reminder - seems like storing an actual object in the exception is ill-posed
  // To Wit: http://en.cppreference.com/w/cpp/error/runtime_error
  //   Because copying std::exception is not permitted to throw exceptions,
  //   this message is typically stored internally as a copy-on-write string.
  //   This is also why there is no constructor taking std::string&&:
  //       it would have to copy the content anyway.
  //
};
#endiv
#divert <ipp>
sqlite::exception::Generic::Generic(std::string const &arg_message)
  : Ancestor(arg_message) {
  ;
}
#endiv
