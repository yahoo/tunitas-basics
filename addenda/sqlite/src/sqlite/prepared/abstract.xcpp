// -*- c++ -*- in the stylings of SCOLD 
#divert <hpp>
#import sqlite.Statement
#import sqlite.statement.Shell
#import sqlite.prepared.BasicResult
namespace sqlite {
  namespace prepared {
    // needs non-const to be able to extract out the statement::Shell
    // does not really modify the Statement, which will still self-destruct (finalize) at destruction time
    template<typename CONTINUATION> inline auto abstract(BasicResult<Statement, CONTINUATION> &) -> BasicResult<statement::Shell, CONTINUATION>;
  }
}
#endiv
#divert <ipp>
#import std.get
#import std.move
template<typename CONTINUATION> auto sqlite::prepared::abstract(BasicResult<Statement, CONTINUATION> &specimen) -> BasicResult<statement::Shell, CONTINUATION> {
  using result_type = BasicResult<statement::Shell, CONTINUATION>;
  // reach in and get the (self-destructing) Statemen; grab its unguarded 
  statement::Shell simplified(std::get<2>(specimen).unguarded());
  result_type ret(std::get<0>(specimen), std::get<1>(specimen), std::move(simplified), std::get<3>(specimen));
  return ret;
}
#endiv
