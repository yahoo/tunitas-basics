// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace sqlite {
  namespace api {
    namespace lob {
      // Only specializations, there is no general class template
      template<typename WHENCE, typename MEMORY, typename SQLITE_MEMORY = MEMORY> class Getter;
      //
      // Where WHENCE is something among Statement or Value
      //
      // For 'blob' it is somewhat motivated that "data" is a pointer into the const void, but there is real space out there, so 'char const' it becomes
      // See  also sqlite::c89 which records the (nearly arbitrary) choices of
      // C-level data types used to store utf8 and utf16 character data types.
      //     sqlite::c89::utf8
      //     sqlite::c89::utf16
      //
    } 
  }
}
// Import all the specialized variants
#entail sqlite.api.lob.Getter.Statement
#entail sqlite.api.lob.Getter.Value
#endiv
