// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace sqlite {
  namespace api {
    namespace feature {
      class Result;
    } 
  }
}
#endiv
#divert <hpp>
#import std.tuple
#import sqlite.status.Code
namespace sqlite {
  namespace api {
    namespace feature {
      inline auto ok(Result const &) -> bool;
      // Status code from accessing the feature enablement (apparently even asking that question can fail)
      inline auto code(Result const &) -> status::Code;
      // Is the feature enabled?
      inline auto enabled(Result const &) -> bool;
    }
  }
}
      
class sqlite::api::feature::Result : public std::tuple<status::Code, bool> {
  using Ancestor = std::tuple<status::Code, bool>;
public:
  using Ancestor::tuple;
};
#endiv
#divert <ipp>
auto sqlite::api::feature::ok(Result const &f) -> bool {
  return sqlite::status::ok(code(f));
}

#import std.get
auto sqlite::api::feature::code(Result const &f) -> status::Code {
  return std::get<0>(f);
}

auto sqlite::api::feature::enabled(Result const &f) -> bool {
  return std::get<1>(f);
}
#endiv
