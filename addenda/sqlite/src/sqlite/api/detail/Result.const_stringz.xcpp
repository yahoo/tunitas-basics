// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import c.const_stringz
#forward sqlite.api.detail.Result
namespace sqlite {
  namespace api {
    namespace detail {
      template<> struct Result<c::const_stringz>;
    } 
  }
}
#endiv
#divert <hpp>
#import sqlite.api.detail.Result
#import sqlite.detail
#import sqlite.detail.ResultSFINAE
#import sqlite.api.detail.WithDestructor
template<> struct sqlite::api::detail::Result<c::const_stringz>
  : public sqlite::detail::ResultSFINAE<void>
  , public sqlite::detail::pass_by_value<c::const_stringz>
  // INVALID because data inside sqlite is not '\0'-terminated.
  // use Result<const_stringn>
  // also see proscriptions on Dispatcher<const_stringz>, Column<const_stringz>
  , public sqlite::detail::specialization_is_invalid
  , public WithDestructor
{ };
#endiv
