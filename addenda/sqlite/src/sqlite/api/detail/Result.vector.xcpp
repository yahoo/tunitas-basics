// -*- c++ -*- in the stylings of SCOLD 
#divert <fpp>
#forward sqlite.api.detail.Result
#import std.vector
namespace sqlite {
  namespace api {
    namespace detail {
      template<typename CHAR, typename ALLOC> struct Result<std::vector<CHAR, ALLOC>>;
    } 
  }
}
#endiv
#divert <hpp>
#import sqlite.api.detail.Result
#import sqlite.detail
#import sqlite.detail.ResultSFINAE
template<typename CHAR, typename ALLOC> struct sqlite::api::detail::Result<std::vector<CHAR, ALLOC>>
  // Only the "standard" specializations for std::vector<char> are valid (useable)
  : private sqlite::detail::ResultSFINAE<void>
  , private sqlite::detail::pass_by_const_reference<std::vector<CHAR, ALLOC>>
  , public sqlite::detail::specialization_is_invalid
{ };
#endiv
