// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    namespace exception {
      class Fixture;
    }
  }
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::exception::Fixture : public cppunit::test::Fixture {
public:
  auto test_prototype() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import tests.unit.exception.Throwable
#import sqlite.exception.Generic
auto tests::unit::exception::Fixture::test_prototype() -> void {
  try {
    throw Throwable("badness happened");
  } catch (sqlite::exception::Generic const &e) {
    CPPUNIT_ASSERT(true);
  } catch (...) {
    CPPUNIT_ASSERT(false);
  }
}

#import tests.unit.exception.Status
#import tests.unit.exception.Prepared
#import tests.unit.exception.Statement
#import unit.rigging.suite.Stream
#import unit.rigging.suite.add
#import unit.rigging.suite.call
auto tests::unit::exception::Fixture::suite() -> cppunit::Test * {
  using namespace ::unit::rigging::suite;
  Stream s("exception");
  s << call("prototype", &Fixture::test_prototype)
    << add(Status::suite())
    << add(Prepared::suite())
    << add(Statement::suite())
    ;
  return s.release();
}
#endiv
