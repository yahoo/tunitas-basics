#
# Usage:
#
#   __topdir=../..
#   source ${__topdir?}/lib/tests/config.sh || exit 70
#
# Expectations:
#
#    1. copied into your project at lib/tests/config.sh.in
#
#       cd ${topdir} (of your project)
#       mkdir -p lib/tests
#       cp /opt/scold/share/incendiary-sophist/sh/template.config.sh.in lib/tests/config.sh.in
#    2. configure.ac contains
#
#         AC_CONFIG_FILES([Makefile lib/tests/config.sh])
#
#    3. incorporate the config.sh into each unit test
#       in each unit test, e.g. $(topdir}/test/unit/TEST.test   (of your project)
#
#    3(a) using the compare_output method
#
#       source ../../lib/tests/config.sh && 
#       source ${incendiary_sophist_riggingdir}/sysexits.sh &&
#       source ${incendiary_sophist_riggingdir}/compare_output.sh ||
#       exit 70
#
#    3(a) using the exiting method
#
#       source ../../lib/tests/config.sh && 
#       source ${incendiary_sophist_riggingdir}/sysexits.sh &&
#       source ${incendiary_sophist_riggingdir}/exiting.sh ||
#       exit 70
#

# Grab the values from the autotools substitution against --with-incendiary-sophist=PREFIX
incendiary_sophist_prefix=@incendiary_sophist_prefix@
incendiary_sophist_libdir=@incendiary_sophist_libdir@
incendiary_sophist_riggingdir=@incendiary_sophist_riggingdir@
# incendiary_sophist_riggingdir is in a patch from hypogeal-twilight series/v0.44/04.green-copper.heron
if [[ "@"incendiary_sophist_riggingdir"@" == "${incendiary_sophist_riggingdir}" ]] ; then
    eval ${incendiary_sophist_libdir:+incendiary_sophist_riggingdir=${incendiary_sophist_libdir}/rigging}
fi

# If --without-incendiary-sophist was asserted, then unset everything
# If --with-incendiary-sophist was asserted, then crudely prove the directories exist.
function __incendiary_sophist_with_or_without_name() {
    local name=$1; shift
    local subname=$1; shift
    eval "
    if test -n \"\$${name}_${subname}\" ;
    then test -d \"\$${name}_${subname}\" || exit 70;
    else unset ${name}_${subname};
    fi"
}
function __incendiary_sophist_with_or_without() {
    __incendiary_sophist_with_or_without_name $1 prefix
    __incendiary_sophist_with_or_without_name $1 libdir
    __incendiary_sophist_with_or_without_name $1 riggingdir
}
function __incendiary_sophist() {
    __incendiary_sophist_with_or_without incendiary_sophist
    # and leave no trace
    unset __incendiary_sophist_with_or_without_name
    unset __incendiary_sophist_with_or_without
    unset __incendiary_sophist
}
__incendiary_sophist
