// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::fd { class Count; }
#endiv
#divert <hpp>
#import cppunit.test.Fixture
#import cppunit.Test
class tests::unit::fd::Count : public cppunit::test::Fixture {
public:
  auto test_2sets() -> void;
  auto test_1sets() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import ares.Count
#import ares.fd.count
#import ares.Channel
#import ares.fd.Set
auto tests::unit::fd::Count::test_2sets() -> void {
  ::ares::fd::Set rs, ws;
  ::ares::Channel channel;
  ::ares::Count ccc = ::ares::fd::count(channel, rs, ws);
  CPPUNIT_ASSERT(0 <= (unsigned) ccc);
}
#import ares.fd.Sets
auto tests::unit::fd::Count::test_1sets() -> void {
  ::ares::fd::Sets rw;
  ::ares::Channel channel;
  ::ares::Count ccc = count(channel, rw);
  CPPUNIT_ASSERT(0 <= (unsigned) ccc);
}
#import rigging.suite.io
auto tests::unit::fd::Count::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series{"count"};
  series << call("2sets", &Count::test_2sets)
         << call("1sets", &Count::test_1sets)
    ;
  return finalize(series);
}
#endiv
