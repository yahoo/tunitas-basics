// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::library { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.test.Fixture
#import cppunit.Test
class tests::unit::library::Fixture : public cppunit::test::Fixture {
public:
  auto test_initialization() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import ares.Library
#import ares.library.initialized
auto tests::unit::library::Fixture::test_initialization() -> void {
  using ::ares::Library;
  Library subject;
  CPPUNIT_ASSERT(::ares::library::is_initialized());
  {
    Library subject;
    CPPUNIT_ASSERT(::ares::library::is_initialized());
    {
      Library subject;
      CPPUNIT_ASSERT(::ares::library::is_initialized());
      {
        Library subject;
        CPPUNIT_ASSERT(::ares::library::is_initialized());
      }
    }
  }
}
#import tests.unit.library.Allocator
#import tests.unit.library.Features
#import tests.unit.library.Library
#import rigging.suite.io
auto tests::unit::library::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series{"library"};
  series << call("initialization", &Fixture::test_initialization)
         << add<Allocator>()
         << add<Features>()
         << add<Library>()
    ;
  return finalize(series);
}
#endiv
