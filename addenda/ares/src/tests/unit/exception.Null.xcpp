// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::exception { class Null; }
#endiv
#divert <hpp>
#import cppunit.test.Fixture
#import cppunit.Test
#import ares.exception.Null
class tests::unit::exception::Null : public cppunit::test::Fixture {
public:
  using Subject = ::ares::exception::Null;
  auto test_constructor_default() -> void;
  auto test_constructor_reason() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
auto tests::unit::exception::Null::test_constructor_default() -> void {
  Subject subject;
  CPPUNIT_ASSERT(nullptr != subject.what());
}
auto tests::unit::exception::Null::test_constructor_reason() -> void {
  Subject subject{"bad"};
  CPPUNIT_ASSERT(nullptr != subject.what());
}
#import rigging.suite.io
auto tests::unit::exception::Null::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series{"Null"};
  {
    Stream con{"constructor"};
    con << call("default", &Null::test_constructor_default)
        << call("reason", &Null::test_constructor_reason)
      ;
    series << move(con);
  }
  return finalize(series);
}
#endiv
