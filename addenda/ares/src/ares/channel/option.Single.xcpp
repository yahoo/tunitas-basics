// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.underlying_type
namespace ares::channel::option {
  //
  // An option, to announce fields in the option::Blob.
  // The option::Blob system is effectively announced as deprecated in c-ares-devel-1.13.0-5.fc29.x86_64.
  // There will be some sort of function-per-option API going forward.
  //
  [[deprecated]] enum class Single
    { FLAGS = ARES_OPT_FLAGS,
      TIMEOUT = ARES_OPT_TIMEOUT,
      TRIES = ARES_OPT_TRIES,
      NDOTS = ARES_OPT_NDOTS,
      UDP_PORT = ARES_OPT_UDP_PORT,
      TCP_PORT = ARES_OPT_TCP_PORT,
      SERVERS = ARES_OPT_SERVERS,
      DOMAINS = ARES_OPT_DOMAINS,
      LOOKUPS = ARES_OPT_LOOKUPS,
      SOCK_STATE_CB = ARES_OPT_SOCK_STATE_CB,
      SORTLIST = ARES_OPT_SORTLIST,
      SOCK_SNDBUF = ARES_OPT_SOCK_SNDBUF,
      SOCK_RCVBUF = ARES_OPT_SOCK_RCVBUF,
      TIMEOUTMS = ARES_OPT_TIMEOUTMS,
      ROTATE = ARES_OPT_ROTATE,
      EDNSPSZ = ARES_OPT_EDNSPSZ,
      NOROTATE = ARES_OPT_NOROTATE };
  namespace single {
    using Underlying = std::underlying_type<Single>::type;
  }
}
#endiv
