// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import ares.Count
namespace ares::count::literals {
  //
  // The count literal
  //
  // Howmany were there?
  // There were 10_count lords a' leapin',
  //             9_count ladies dancing,
  //             8_count STEM students 'a studying,
  //             7_count swans 'a swimmin',
  //             ...you get the basic idea...
  //
  // WATCHOUT - we don't check for overflow here.  underlying for Count is 'unsigned int' (32 bits)
  // but the operator"" system reqwuires that long long (64 bits ore more) be used.
  // [[FIXTHIS]] - check for numeric overflow in Count at compile time
  //
  // Silence:
  //    use Count(c) ...... conversion
  //    avoid Count{c} .... initialization
  //
  // Witness:
  //   src/ares/count.literals.xcpp:15:89: warning: narrowing conversion of ‘c’ from ‘long long unsigned int’ to ‘unsigned int’ inside { } [-Wnarrowing]
  //
  // 
  // Usage:
  //
  //   #import ares.count.literals
  //   using namespace ares::count::literals
  //   auto ccc = 10_count;
  //
  inline constexpr auto operator""_count(unsigned long long c) -> Count { return Count(c); }
}
#endiv
