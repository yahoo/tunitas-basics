// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import ares.required.time.Ratio
#import std.chrono.system_clock
#import std.chrono.duration
#import std.ratio
#import std.atto
namespace ares::time {
  //
  // The durations.
  // The representation is fixed using that certain rep underying the system clock.
  // The period is fluid, being a parameter to the type alias.
  //
  // Use ares::time::duration_cast to change scales.
  // Use ares::time::literals to make such convenient.
  //
  // And yes, 5G and 6G not withstanding, networks are not so fast that a timeout denominted in Decaseconds isn't reasonable as a failstop.
  //
  // Usage:
  //
  //    ... same as before ... you know...
  //
  namespace duration {
    template<required::time::Ratio RATIO> using Basic = std::chrono::duration<std::chrono::system_clock::rep, RATIO>;
  }
  // When the time unit is unspecified, then compute units of "durations."
  using Duration = duration::Basic<std::atto>;
}
#endiv
