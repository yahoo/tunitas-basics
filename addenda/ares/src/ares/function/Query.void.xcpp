// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#forward ares.function.Query
namespace ares::function {
  //
  // A function-object endpoint of a query ... with no state
  // Descendants only.
  //
  // There is no real guarantee that these won't get "lost", so it is up to the caller to manage their lifetimes.
  //
  // Usage:
  //
  //   see ares::query(...)
  //
  template<> class Query<void>;
}
#endiv
#divert <hpp>
#import ares.function.query.Basis
template<> class ares::function::Query<void> : public query::Basis {
  using ancestor = query::Basis;
protected:
  virtual ~Query() = default;
public:
  Query() = default;
  // descendants are still obliged to implement
  //
  //   auto receive(error::Code, Count, buffer<std::byte const>) -> void override;
  //
};
#endiv
