// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace ares::unmanaged {
  //
  // Organizing the names of the unmanaged (C-runtime) structures.
  // Specializations only.
  //
  // The unmanaged Structure<RECORD> is basically a traits-type structure.
  //
  template<Resource_Record> struct Structure;
  template<> struct Structure<A>;
  template<> struct Structure<AAAA>;
  template<> struct Structure<MX>;
  template<> struct Structure<NAPTR>;
  template<> struct Structure<NS>;
  template<> struct Structure<PTR>;
  template<> struct Structure<SOA>;
  template<> struct Structure<SRV>;
  template<> struct Structure<TXT>;
  template<> struct Structure<URI>;
}
#endiv
#divert <hpp>
#forward ares.unmanaged.Host
#forward ares.unmanaged.Uri
namespace ares::unmanaged {
  template<> struct Structure<A> {
    using Array_Item = ::ares_addrttl;
    using Item = Host;
    using Parse = Item;
  };
  template<> struct Structure<AAAA> {
    using Array_Item = ::ares_addr6ttl;
    using Item = Host;
    using Parse = Item;
  };
  template<> struct Structure<MX> {
    using List_Item = ::ares_mx_reply;
    using Parse = List_Item;
  };
  template<> struct Structure<NAPTR> {
    using List_Item = ::ares_naptr_reply;
    using Parse = List_Item;
  };
  template<> struct Structure<NS> {
    using Item = Host; // but special care is needed for the use of host::Names
    using Parse = Item;
  };
  template<> struct Structure<PTR> {
    using Item = Host; // ibidem ... special care
    using Parse = Item;
  };
  template<> struct Structure<SOA> {
    using Item = ::ares_soa_reply;
    using Parse = Item; // not list item
  };
  template<> struct Structure<SRV> {
    using List_Item = ::ares_srv_reply;
    using Parse = List_Item;
  };
  template<> struct Structure<TXT> {
    using List_Item = ::ares_txt_reply;
    using Parse = List_Item;
  };
  template<> struct Structure<URI> {
    using List_Item = Uri;
    using Parse = List_Item;
  };
}
#import ares.unmanaged.Host
#import ares.unmanaged.Uri
#endiv
