// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.ratio
#import nonstd.required.Integer
namespace ares::required::time {
  //
  // Is this a ratio, suitable time duration
  //
  // [[MAYBE]] move this to want::required::Ratio and then into nonstd::required::Ratio
  template<typename RATIO> concept Ratio = requires(RATIO) {
    { RATIO::num };
    { RATIO::den };
    nonstd::required::Integer<decltype(RATIO::num)>;
    nonstd::required::Integer<decltype(RATIO::den)>;
  };
}
#endiv
#divert <cpp>
// This is test code
namespace ares::required::time {
  static_assert(Ratio<std::ratio<1>>);
  static_assert(Ratio<std::ratio<1, 2>>);
  static_assert(Ratio<std::ratio<2, 1>>);
}
#endiv
