// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
struct option;
namespace options {
  namespace longish {
    namespace detail {
      using Option = ::option;
    }
  }
}
#endiv
#divert <hpp>
// require the complete definition of ::option
// to complete options::longish::detail::Option
#include <getopt.h>

// We have to define clear out in global namespace because ADL will find it out there anyway
inline auto clear(::option &) -> void;

namespace options {
  namespace longish {
    namespace detail {
      // But we like to pretend that it is "really" mastered herein where nobody can see it
      inline auto clear(Option &fill) -> void;
    }
  }
}
#endiv
#divert <ipp>
inline auto clear(::option &subject) -> void {
  options::longish::detail::clear(subject);
}

#import std.fill_n
auto options::longish::detail::clear(Option &subject) -> void {
  std::fill_n(reinterpret_cast<char *>(&subject), sizeof (subject), '\0');
}
#endiv

