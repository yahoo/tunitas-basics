// -*- c++ -*- in the SCOLD styling
#divert <hpp>
#import c.const_stringz
#import c.stringz
namespace tests {
  namespace unit {
    namespace detail {
      inline static auto duplicate(c::const_stringz spec) ->  c::stringz; 
    }
  }
}
#endiv
#divert <ipp>
#import std.copy
#import std.unique_ptr
#import std.invalid_argument
auto tests::unit::detail::duplicate(c::const_stringz spec) ->  c::stringz {
  if (nullptr == spec.data()) {
    // In this case, "duplicating" nullptr is just nullptr
    // The nullptr is legitimate; it is expected to be the sentinel af the end of the vector
    return c::stringz();
  } else {
    std::size_t size_plus_nul = spec.size()+1;
    std::unique_ptr<char []> tmp(new char[size_plus_nul]);
    auto begin = spec.begin();
    std::copy(begin, begin+size_plus_nul, tmp.get());
    c::stringz ret(tmp.release());
    return ret;
  }
}
#endiv
