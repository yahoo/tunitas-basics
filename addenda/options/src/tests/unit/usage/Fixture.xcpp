// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    namespace usage {
      class Fixture;
    }
  }
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::usage::Fixture : public cppunit::test::Fixture {
  using Ancestor = cppunit::test::Fixture;
public:
  auto test_throwing() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>

#import tests.unit.usage.Mock
auto tests::unit::usage::Fixture::test_throwing() -> void {
  try {
    usage::Mock mock("a.out");
    throw mock;
  } catch (options::throwable::Usage const &u) {
    CPPUNIT_ASSERT(true);
  } catch (...) {
    CPPUNIT_ASSERT(false);
  }
}

#import tests.unit.usage.Throwable
#import unit.rigging.suite.Stream
#import unit.rigging.suite.add
#import unit.rigging.suite.call
auto tests::unit::usage::Fixture::suite() -> cppunit::Test * {
  using namespace ::unit::rigging::suite;
  Stream s("usage");
  s << add<Throwable>()
    << call("throwing", &Fixture::test_throwing)
    ;
  return finalize(s);
}
#endiv
