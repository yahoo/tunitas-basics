// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    namespace generator {
      class Symbol;
    }
  }
}
#endiv
#divert <hpp>
#import tests.unit.generator.State
class tests::unit::generator::Symbol {
public:
  template<typename STRING> inline auto as(State &) -> STRING;
protected:
  inline auto generate(State &) -> std::string;
};

#import json.String
#import std.string
namespace tests {
  namespace unit {
    namespace generator {
      template<> inline auto Symbol::as<::json::String>(State &) -> ::json::String;
      template<> inline auto Symbol::as<std::string>(State &) -> std::string;
    }
  }
}

#endiv
#divert <ipp>
#import json.to
template<> auto tests::unit::generator::Symbol::as<::json::String>(State &state) -> ::json::String {
  return json::to(::json::STRING(), generate(state));
}

template<> auto tests::unit::generator::Symbol::as<std::string>(State &state) -> std::string {
  return generate(state);
}

#import std.ostringstream
auto tests::unit::generator::Symbol::generate(State &state) -> std::string {
  std::ostringstream buf;
  buf << "symbol-" << state.serial++;
  return buf.str();
}
#endiv
