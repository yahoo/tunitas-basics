// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    namespace generator {
      class Readerlike;
    }
  }
}
#endiv
#divert <hpp>
#import json.Value
#import json.reader.Result
#import tests.unit.Generator
class tests::unit::generator::Readerlike : public Generator {
  using Ancestor = Generator;
public:
  // Like a Generator, but has a return signature like the json::Reader
  using result_type = ::json::reader::Result;
  inline auto operator()(bool want_success = true) -> result_type;
};
#endiv
#divert <ipp>
#import tests.unit.generator.State
#import std.move
auto tests::unit::generator::Readerlike::operator()(bool want_success) -> result_type {
  if (want_success) {
    auto val = Ancestor::operator()();
    result_type ret(true, std::move(val));
    return ret;
  } else {
    result_type ret(false, ::json::Value());
    return ret;
  }
}
#endiv
