// -*- c++ -*- but in the SCOLD stylings
#divert <hpp>
#import json.Value
namespace json {
  //
  // This is essentially (actually, only) a constructor call
  // converting "to" a Value "from" the ARGUMENT
  //
  enum class VALUE { };
  template<typename ARGUMENT> inline auto to(VALUE, ARGUMENT const &) -> Value;
  template<typename ARGUMENT> inline auto to(VALUE, ARGUMENT &&) -> Value;
}
#entail json.to.Value.stdint
#entail json.to.Value.String
#entail json.to.Value.Value
#endiv
#divert <ipp>
template<typename ARGUMENT> auto json::to(VALUE, ARGUMENT const &source) -> Value {
  // the constructor does all the work
  return json::Value(source);
}

#ifndef JSON_HAS_RVALUE_REFERENCES
// this is a jsoncpp-1.7 thing; jsoncpp-1.6 does not have rvalue references
// and without the rvalue references, these will be copy-semantic (deep copy) and ... ambiguous
#error JSON_HAS_RVALUE_REFERENCES is not configured
#endif

template<typename ARGUMENT> auto json::to(VALUE, ARGUMENT &&anon) -> Value {
  // the constructor does all the work
  return json::Value(std::forward<ARGUMENT>(anon));
}
#endiv
