// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#include "json/value.h"
namespace json::value {
  // [[FIXTHIS]]- this is merely a type alias, so ADL will not find based on it.
  using Type = ::Json::ValueType;
}
#import json.value.constants // for compatibility with module-json-devel < 0.7.0
#endiv
#divert <hpp>
#import std.ostream
namespace json::value { 
  auto operator<<(std::ostream &, Type) -> std::ostream &;
}
namespace Json {
  // Make ADL find this because ::Json::ValueType is the original type of json::value::Type
  using json::value::operator<<;
}
#endiv
#divert <cpp>
#import json.value.constants
auto json::value::operator<<(std::ostream &o, Type t) -> std::ostream & {
  char const *word = nullptr;
  switch (t) {
  case JSONNULL:
    word = "NULL";
    break;
  case INT:
    word = "INT";
    break;
  case UINT:
    word = "UINT";
    break;
  case REAL:
    word = "REAL";
    break;
  case STRING:
    word = "STRING";
    break;
  case BOOLEAN:
    word = "BOOLEAN";
    break;
  case ARRAY:
    word = "ARRAY";
    break;
  case OBJECT:
    word = "OBJECT";
    break;
  default:
    return o << "INVALID-" << (int)(t);
  }
  return o << word;
}
#endiv
