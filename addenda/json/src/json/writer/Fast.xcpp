// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace json::writer {
  //
  // We want the compact single-line variant of JSON (this stuff is going out on the wire)
  // See json::writer::Compact.
  //
  // Deprecation, as of jsoncpp-1.8.3, the "fast writer" is deprecated in favor of a longer
  // more lugibrious code stanza that configures a builder and generates the writer, writes
  // and recovers the string.  The new way is "just different."
  //
  // So json::writer::Fast becomes deprecated.
  // And we want to suppress the (implementation detail) of the base level deprecation.
  //
  // The rhyming similarities (ours are not related by any ancestry; theirs are related by ancestry in json::Writer)
  //   ... Ours ...........        ...Theirs........
  //   json::writer::Compact       json::writer::Fast
  //   json::writer::Pretty        json::writer::Styled
  //
  // Usage:
  //
  //   auto value = json::Value{...somehow...};
  //   auto fff = json::writer::Fast{};
  //   { ...configure semantic & formatting options...
  //     fff.enableYAMLCompatibility();
  //     fff.dropNullPlaceholders();
  //     fff.omitEndingLineFeed(); }
  //   std::string stringified = fff.write(value);
  //
  //
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  using Fast [[deprecated]] = ::Json::FastWriter;
#pragma GCC diagnostic pop
}
#endiv
