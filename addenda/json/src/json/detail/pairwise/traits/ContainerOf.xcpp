// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import json.detail.pairwise.Iterator
namespace json {
  namespace detail {
    namespace pairwise {
      namespace traits {
	// There is no struct definition template, only specializations
	template<typename ITERATOR> struct ContainerOf;
	template<typename JSONITERATOR, typename VALUE> struct ContainerOf<pairwise::Iterator<JSONITERATOR, VALUE>>;
      }
    }
  }
}
#endiv
#divert <hpp>
#import json.detail.pairwise.Container
#import json.detail.pairwise.Iterator
#import json.detail.pairwise.traits.Value
#import json.Value

template<typename JSONITERATOR, typename VALUE> struct json::detail::pairwise::traits::ContainerOf<json::detail::pairwise::Iterator<JSONITERATOR, VALUE>> {
    using json_value_type = typename traits::Value<JSONITERATOR>::json_value_type;
    using value_type = VALUE;
    using key_type = typename value_type::first_type;
    using mapped_type = typename value_type::second_type;
    using container_type = pairwise::Container<json_value_type, key_type, mapped_type>;
};
#endiv
