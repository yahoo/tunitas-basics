// -*- c++ -*- but in the SCOLD stylings
#divert <hpp>
#import json.as.RESULT.Value
#import json.Value
#import std.string
namespace json {
  template<> inline auto as<std::string>(Value const &) -> std::string;
  template<> inline auto as<std::string>(Value &&) -> std::string;
}
#endiv
#divert <ipp>
#import json.writer.Compact
#import json.value.constants
#import std.move
template<> auto json::as<std::string>(Value const &value) -> std::string {
  if (value::STRING == value.type()) {
    // Avoid returning the double quotes that would surround the string literal
    return value.asString();
  } else {
    // Choose -- writer::Compact (was: writer::Fast) -- contra --  writer::Styled
    writer::Compact c;
    return c.write(value);
  }
}

#import std.forward
template<> auto json::as<std::string>(Value &&anon) -> std::string {
  // FIXTHIS ... should move the string out of anon, not const-copy it
  Value const &consty(anon);
  return as<std::string>(consty);
}
#endiv
