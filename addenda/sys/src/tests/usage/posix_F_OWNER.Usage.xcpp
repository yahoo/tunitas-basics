// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <tpp>
//
// Usage:
//
//   #import tests.usage.posix.f.owner.Usage
//   using namespace tests::usage::posix::f::owner;
//   static_assert(Usage<sys::posix::F::OWNER>);
//
#import sys.posix.F.OWNER
#import tests.model.Namespace_Object
#import tests.usage.countof
namespace tests::usage::posix_F_OWNER {
  using sys::posix::F;
  namespace [[detail]] packaging {
    template<typename OWNER> concept Instance = requires(OWNER) {
      typename OWNER::Owner;
      requires tests::model::Namespace_Object<OWNER>;
      requires (int)OWNER::THREAD == F_OWNER_TID;
      requires (int)OWNER::PROCESS == F_OWNER_PID;
      requires (int)OWNER::GROUP == F_OWNER_PGRP;
      requires (int)OWNER::TID == F_OWNER_TID;
      requires (int)OWNER::PID == F_OWNER_PID;
      requires (int)OWNER::PGRP == F_OWNER_PGRP;
      requires (int)OWNER::GID == F_OWNER_PGRP;
    };
    template<typename... _> concept Usage = requires(_...) {
      requires 0 == countof<_...>;
      requires Instance<F::OWNER>;
    };
  }
  using packaging::Usage;
}
#endiv
