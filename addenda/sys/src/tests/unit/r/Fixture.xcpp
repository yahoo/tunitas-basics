// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::r { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
struct tests::unit::r::Fixture : public cppunit::test::Fixture {
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import sys.r.constants
auto tests::unit::r::Fixture::test_constants() -> void {
  // The other constants are exhibited in their respective sub-testers (limit, usage)
  using namespace sys::r::constants;
  auto i = INFINITY;
  CPPUNIT_ASSERT(sizeof (i));
}
#import tests.unit.r.limit.Fixture
#import tests.unit.r.usage.Fixture
#import rigging.suite.io
auto tests::unit::r::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("r");
  series << call("constants", &Fixture::test_constants)
         << add<limit::Fixture>()
         << add<usage::Fixture>()
         << END;
  return finalize(series);
}
#endiv
