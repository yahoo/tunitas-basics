// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::lease { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.lease.Operation
struct tests::unit::lease::Fixture : public cppunit::test::Fixture {
  using Operation = ::sys::lease::Operation;
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
protected:
  auto leasealike(Operation) -> void;
};
#endiv
#divert <cpp>
#import sys.lease.constants
namespace tests::unit::lease {
  auto Fixture::leasealike(Operation) -> void { CPPUNIT_ASSERT(true); }
  auto Fixture::test_constants() -> void {
    using namespace ::sys::lease::constants;
    auto c = Operation{};
    c = READ;
    c = WRITE;
    c = UNLOCK;
    c = END;
    c = ENDLEASE;
    leasealike(c);
  }
}
#import rigging.suite.io
auto tests::unit::lease::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("lease");
  series << call("constants", &Fixture::test_constants)
         << END;
  return finalize(series);
}
#endiv
