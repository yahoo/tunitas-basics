// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import tests.unit.w.Palette.declaration
#import sys.w.Option
namespace tests::unit::w {
  template<> struct Palette<::sys::w::Option>;
}
#endiv
#divert <hpp>
#import std.vector
template<> class tests::unit::w::Palette<::sys::w::Option> {
protected:
  // descendants only
  Palette() = default;
  ~Palette() = default;
public:
  virtual auto setUp() -> void;
  virtual auto tearDown() -> void;
  struct Subjects {
    using Option = ::sys::w::Option;
  };
  std::vector<Subjects::Option> some_flag_series;
};
#endiv
#divert <cpp>
#import rigging.unit.lhs
#import rigging.unit.clear
namespace tests::unit::w {
  using rigging::unit::lhs;
  using rigging::unit::clear;
  auto Palette<::sys::w::Option>::setUp() -> void {
    using v = std::vector<Subjects::Option>;
    lhs(some_flag_series) = v{// NOT THIS - Option::NONE - because it is not a flag, it is the absence of any flags
      Subjects::Option::CONTINUED,
      Subjects::Option::EXITED,
      Subjects::Option::NOHANG,
      Subjects::Option::NOWAIT,
      Subjects::Option::STOPPED};
  }
  auto Palette<::sys::w::Option>::tearDown() -> void {
    lhs(some_flag_series) = clear;
  }
}
#endiv
