// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::lockf { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.lockf.Operation
struct tests::unit::lockf::Fixture : public cppunit::test::Fixture {
  using Subject = ::sys::lockf::Operation;
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import sys.lockf.constants
namespace tests::unit::lockf {
  auto Fixture::test_constants() -> void {
    using namespace ::sys::lockf::constants;
    auto c = Subject{};
    c = LOCK;
    c = TEST_AND_LOCK;
    c = UNLOCK;
    c = TEST;
    c = TLOCK;
    c = ULOCK;
    static_assert(ULOCK == Subject{});
    CPPUNIT_ASSERT(LOCK != c);
  }
}
#import rigging.suite.io
auto tests::unit::lockf::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("lockf");
  series << call("constants", &Fixture::test_constants)
         << END;
  return finalize(series);
}
#endiv
