// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import tests.unit.o.Options.declaration
namespace tests::unit::o {
  template<> struct Options<library::Options<library::Create,library::Status>>;
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
namespace tests::unit::o {
  template<> struct Options<library::Options<library::Create,library::Status>> : public cppunit::test::Fixture {
    using Subject = library::Options<library::Create,library::Status>;
    auto test_mentions() -> void;
    static auto suite() -> cppunit::Test *;
  };
}
#endiv
#divert <cpp>
#import sys.o.constants
namespace tests::unit::o {
  using namespace ::sys::o::constants;
  auto Options<library::Options<library::Create,library::Status>>::test_mentions() -> void {
    Subject o;
    // create(s)
    o = NOCREATE;
    o = CLOSE_ON_EXEC;
    o = CREATE;
    o = DIRECTORY;
    o = EXCLUSIVE;
    o = NO_CONTROL_TERMINAL;
    o = NOFOLLOW;
    o = TRUNCATE;
    o = CLOEXEC;
    o = CREAT;
    o = EXCL;
    o = NOCTTY;
    o = TRUNC;
    // status(es)
    o = NONE;
    o = APPEND;
    o = ASYNC;
    o = DIRECT;
    o = DSYNC;
    o = LARGEFILE;
    o = NOATIME;
    o = NONBLOCK;
    o = PATH;
    o = SYNC;
    o = TMPFILE;
    // both
    o = NONE | APPEND;
    o = CLOSE_ON_EXEC | APPEND;
    o = CREATE | APPEND;
    o = DIRECTORY | APPEND;
    o = EXCLUSIVE | APPEND;
    o = NO_CONTROL_TERMINAL | APPEND;
    o = NOFOLLOW | APPEND;
    o = TRUNCATE | APPEND;
    o = CLOEXEC | APPEND;
    // quad
    // both
    o = NONE | CLOSE_ON_EXEC | APPEND | ASYNC;
    o = CLOSE_ON_EXEC | CREATE | APPEND | ASYNC;
    o = CREATE | DIRECTORY | APPEND | ASYNC;
    o = DIRECTORY | EXCLUSIVE | APPEND | ASYNC;
    o = EXCLUSIVE | NO_CONTROL_TERMINAL | APPEND | ASYNC;
    o = NO_CONTROL_TERMINAL | NOFOLLOW | APPEND | ASYNC;
    o = NOFOLLOW | TRUNCATE | APPEND | ASYNC;
    o = TRUNCATE | CLOEXEC | APPEND | ASYNC;
    o = CLOEXEC | APPEND | ASYNC;
    CPPUNIT_ASSERT(Subject{} != o);
  }
}
#import rigging.suite.io
namespace tests::unit::o {
  auto Options<library::Options<library::Create,library::Status>>::suite() -> cppunit::Test * {
    using namespace ::rigging::suite;
    Stream series("Options<Create,Status>");
    series << call("mentions", &Options::test_mentions)
           << END;
    return finalize(series);
  }
}
#endiv
