// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::fd::set { class Lhs; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.fd.set.Lhs
#import sys.fd.Set
class tests::unit::fd::set::Lhs : public cppunit::test::Fixture {
public:
  using Subject = ::sys::fd::set::Lhs;
  using Set = ::sys::fd::Set;
  auto test_constructor_private() -> void;
  auto test_assignment_bool() -> void;
  auto test_operator_cast() -> void;
  auto test_index() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
auto tests::unit::fd::set::Lhs::test_constructor_private() -> void {
#warning WRITETHIS auto tests::unit::fd::set::Lhs::test_constructor_default() -> void
}
auto tests::unit::fd::set::Lhs::test_assignment_bool() -> void {
#warning WRITETHIS auto tests::unit::fd::set::Lhs::test_assignment_bool() -> void
}
auto tests::unit::fd::set::Lhs::test_operator_cast() -> void {
#warning WRITETHIS auto tests::unit::fd::set::Lhs::test_operator_cast() -> void
}
auto tests::unit::fd::set::Lhs::test_index() -> void {
#warning WRITETHIS auto tests::unit::fd::set::Lhs::test_index() -> void
}
#import rigging.suite.io
auto tests::unit::fd::set::Lhs::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("Lhs");
  {
    Stream con("constructor");
    con << call("private", &Lhs::test_constructor_private)
      ;
    series << move(con);
  } {
    Stream ass("assignment");
    ass << call("bool", &Lhs::test_assignment_bool)
      ;
    series << move(ass);
  }
  series << call("operator bool", &Lhs::test_operator_cast)
         << call("index", &Lhs::test_index)
    ;
  return finalize(series);
}
#endiv
