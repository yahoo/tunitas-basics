// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::exit { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
struct tests::unit::exit::Fixture : public cppunit::test::Fixture {
  auto test_Code() -> void;
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import sys.exit.Code
#import sys.exit.constants
namespace tests::unit::exit {
  auto Fixture::test_Code() -> void {
    using Subject = ::sys::exit::Code;
    auto s = Subject{};
    s = Subject::SUCCESS;
    s = Subject::FAILURE;
    CPPUNIT_ASSERT(sizeof (s));
  }
  auto Fixture::test_constants() -> void {
    using namespace ::sys::exit::constants;
    auto c = ::sys::exit::Code{};
    c = SUCCESS;
    c = FAILURE;
    static_assert(sizeof (c));
  }
}
#import rigging.suite.io
auto tests::unit::exit::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("exit");
  series << call("Code", &Fixture::test_Code)
         << call("constants", &Fixture::test_constants)
         << END;
  return finalize(series);
}
#endiv
