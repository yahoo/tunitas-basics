// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.posix.Fixture
#endiv
#divert <cpp>
#import sys.posix.create
#import sys.posix.unlink
#import sys.posix.dup
auto tests::unit::posix::fixture::Fixture::test_dup() -> void {
  std::string file_exists = "/tmp/t99.tests.unit.posix.test.EXISTS-by-duping";
  six::unlink(file_exists);
  auto c = nat::create(file_exists, 0666);
  guardian::Close c_guard(value(c));
  CPPUNIT_ASSERT(good(c));
  auto u = six::unlink(file_exists);
  if (!good(u)) {
    std::cerr << "UNEXPECTED: " << file_exists << " should exist but " << error_code(u).message() << '\n';
  }
  CPPUNIT_ASSERT(good(u));
  int some_fd = value(c);
  auto d = nat::dup(some_fd); // <----- test this
  CPPUNIT_ASSERT(good(d));
  guardian::Close d_guard(value(d));
  int other_fd = value(d);
  CPPUNIT_ASSERT(some_fd >= 0);
  CPPUNIT_ASSERT(other_fd >= 0);
  CPPUNIT_ASSERT(other_fd != some_fd);
}
#endiv
