// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.posix.Fixture
#endiv
#divert <cpp>
#import sys.fd.Managed
#import sys.fd.Set
#import sys.fd.read
#import sys.fd.write
#import sys.fd.except
namespace tests::unit::posix::fixture {
  using ::sys::fd::Set;
  auto Fixture::test_select_read() -> void {
    auto s = Set{};
    auto r = read(s);
    CPPUNIT_ASSERT(0 == r.value().get().size());
    s.at(111) = true;
    CPPUNIT_ASSERT(1 == r.value().get().size());
    s.set(222);
    CPPUNIT_ASSERT(2 == r.value().get().size());
  }
  auto Fixture::test_select_write() -> void {
    auto s = Set{};
    auto w = write(s);
    s.at(111) = true;
    CPPUNIT_ASSERT(1 == w.value().get().size());
    s.set(222);
    CPPUNIT_ASSERT(2 == w.value().get().size());
  }
  auto Fixture::test_select_except() -> void {
    auto s = Set{};
    auto e = except(s);
    s.at(111) = true;
    CPPUNIT_ASSERT(1 == e.value().get().size());
    s.set(222);
    CPPUNIT_ASSERT(2 == e.value().get().size());
  }
}
#endiv
