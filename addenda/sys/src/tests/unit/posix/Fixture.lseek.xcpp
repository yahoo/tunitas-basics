// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.posix.Fixture
#endiv
#divert <cpp>
#import sys.posix.create
#import sys.posix.lseek
#import sys.seek.constants
#import sys.posix.unlink
auto tests::unit::posix::fixture::Fixture::test_lseek() -> void {
  namespace seek = ::sys::seek;
  std::string file_exists = "/tmp/t99.tests.unit.posix.test.lseek";
  six::unlink(file_exists);
  auto c = nat::create(file_exists, 0666);
  guardian::Close guard(value(c));
  CPPUNIT_ASSERT(good(c));
  auto set = nat::lseek(value(c), 0, seek::SET); // <------------- test this
  CPPUNIT_ASSERT(good(set) || !good(set));
  auto cur = nat::lseek(value(c), 0, seek::CURRENT); // <--------- test this
  CPPUNIT_ASSERT(good(cur) || !good(cur));
  auto end = nat::lseek(value(c), 0, seek::END); // <------------- test this
  CPPUNIT_ASSERT(good(end) || !good(end));
  auto u = six::unlink(file_exists);
  CPPUNIT_ASSERT(good(u));
}
#endiv
