// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::posix { struct EXIT; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.posix.EXIT
struct tests::unit::posix::EXIT : public cppunit::test::Fixture {
  using Subject = ::sys::posix::EXIT;
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
namespace tests::unit::posix {
  // Most of these will already have been tested in tests::usage::posix_EXIT
  auto EXIT::test_constants() -> void {
    Subject::Code c;
    c = Subject::SUCCESS;
    c = Subject::FAILURE;
    CPPUNIT_ASSERT(sizeof (c));
  }
}
#import rigging.suite.io
auto tests::unit::posix::EXIT::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("EXIT");
  series << call("constants", &EXIT::test_constants)
         << END;
  return finalize(series);
}
#endiv
