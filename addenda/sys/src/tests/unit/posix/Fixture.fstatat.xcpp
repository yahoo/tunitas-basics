// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.posix.Fixture
#endiv
#divert <cpp>
#import sys.posix.O
#import sys.posix.AT
#import sys.posix.open
#import sys.posix.mktemp
#import sys.posix.fstatat
#import sys.posix.unlink
auto tests::unit::posix::fixture::Fixture::test_fstatat() -> void {
  using O = six::O;
  using AT = six::AT;
  std::string const tmpdir = "/tmp";
  auto t = nat::open(tmpdir, O::DIRECTORY|O::RDONLY);
  guardian::Close guard0(value(t));
  auto p = six::mktemp(tmpdir + "/t99.tests.unit.posix.fstatat.XXXXXX");
  CPPUNIT_ASSERT(good(p));
  std::string specimen = value(p);
  std::string subspecimen = specimen.substr(tmpdir.size()+1);
  auto c = nat::open(specimen, O::CREATE|O::WRONLY, 0600);
  CPPUNIT_ASSERT(good(c)); // <--------- test this
  guardian::Chmod guard(specimen, value(c));
  auto s = six::fstatat(value(t), subspecimen, AT::NONE); // <------------- test this
  CPPUNIT_ASSERT(good(s)); // <------------------------------------------- show your work
  struct ::stat buf = value(s); // <------------------------------------ prove it
  CPPUNIT_ASSERT(1528060574 < buf.st_ctime);
  auto u = six::unlink(specimen);
  CPPUNIT_ASSERT(good(u));
}
#endiv
