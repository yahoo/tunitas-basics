// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.posix.Fixture
#endiv
#divert <cpp>
#import std.string
#import sys.posix.O
#import sys.posix.AT
#import sys.posix.open
#import sys.posix.touch
#import sys.posix.mktemp
#import sys.posix.unlinkat
auto tests::unit::posix::fixture::Fixture::test_unlinkat() -> void {
  using O = six::O;
  using AT = six::AT;
  std::string const tmpdir = "/tmp";
  auto t = nat::open(tmpdir, O::DIRECTORY|O::RDONLY);
  CPPUNIT_ASSERT(good(t));
  guardian::Close guard0(value(t));
  auto r = six::mktemp(tmpdir + "/t99.tests.unit.posix.EXISTS-for-unlinkat'ing.XXXXXX");
  CPPUNIT_ASSERT(good(r));
  std::string const specimen = value(r);
  std::string const subspecimen = specimen.substr(tmpdir.size()+1);
  guardian::Cleanup_Spackled_Names cleanup{specimen};
  auto h = six::touch(specimen, 0666);
  CPPUNIT_ASSERT(good(h));
  auto u = six::unlinkat(value(t), subspecimen, AT::NONE); // <--------- test this
  CPPUNIT_ASSERT(good(u));
}
#endiv
