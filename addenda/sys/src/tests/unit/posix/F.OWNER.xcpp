// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#include <hpp/tests.unit.posix.F>
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.posix.F.OWNER
struct tests::unit::posix::F::OWNER : public cppunit::test::Fixture {
  using Subject = ::sys::posix::F::OWNER;
  auto test_mentions() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
namespace tests::unit::posix {
  auto F::OWNER::test_mentions() -> void {
    Subject::Owner s;
    s = Subject::TID;
    s = Subject::PID;
    s = Subject::PGRP;
    CPPUNIT_ASSERT(s != Subject::TID);
  }
}
#import rigging.suite.io
auto tests::unit::posix::F::OWNER::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  using ::rigging::suite::call; // reminder: tests::unit::call occludes this
  Stream series{"Subject"};
  series << call("mentions", &OWNER::test_mentions)
         << END;
  return finalize(series);
}
#endiv
