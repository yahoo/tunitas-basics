// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::posix { class SEEK; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.posix.SEEK
class tests::unit::posix::SEEK : public cppunit::test::Fixture {
public:
  using Subject = ::sys::posix::SEEK;
  auto test_constants() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
namespace tests::unit::posix {
  auto SEEK::test_constants() -> void {
    CPPUNIT_ASSERT_EQUAL((int)SEEK_SET, (int)Subject::SET);
    CPPUNIT_ASSERT_EQUAL((int)SEEK_CUR, (int)Subject::CURRENT);
    CPPUNIT_ASSERT_EQUAL((int)SEEK_END, (int)Subject::END);
    CPPUNIT_ASSERT_EQUAL((int)SEEK_CUR, (int)Subject::CUR);
#ifdef SEEK_DATA
    CPPUNIT_ASSERT_EQUAL((int)SEEK_DATA, (int)Subject::DATA);
#endif
#ifdef SEEK_HOLE
    CPPUNIT_ASSERT_EQUAL((int)SEEK_HOLE, (int)Subject::HOLE);
#endif
  }
}
#import rigging.suite.io
auto tests::unit::posix::SEEK::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("SEEK");
  series << call("constants", &SEEK::test_constants)
         << END;
  return finalize(series);
}
#endiv
