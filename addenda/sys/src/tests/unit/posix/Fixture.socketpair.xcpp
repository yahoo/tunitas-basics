// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.posix.Fixture
#endiv
#divert <cpp>
#import sys.posix.socketpair
#import sys.posix.AF
#import sys.posix.SOCK
#import sys.posix.PF
namespace tests::unit::posix::fixture {
  auto Fixture::test_socketpair_SOCK() -> void {
    using AF = six::AF;
    using SOCK = six::SOCK;
    using PF = six::PF;
    auto socked = nat::socketpair(AF::UNIX, SOCK::DGRAM, PF::UNIX);
    guardian::Closer<guardian::closer::Pipe> doomed{socked};
    CPPUNIT_ASSERT(good(socked));
    auto c0 = read_side(socked);
    auto c1 = write_side(socked);
    CPPUNIT_ASSERT(c0 != c1);
  }
  auto Fixture::test_socketpair_sock() -> void {
    using ::sys::net::Network;
    namespace af = ::sys::af;
    namespace sock = ::sys::sock;
    namespace pf = ::sys::pf;
    auto socked = nat::socketpair(af::Family<Network::UNIX>, sock::Type::DGRAM, pf::Family<Network::UNIX>);
    guardian::Closer<guardian::closer::Pipe> doomed{socked};
    CPPUNIT_ASSERT(good(socked));
    auto c0 = read_side(socked);
    auto c1 = write_side(socked);
    CPPUNIT_ASSERT(c0 != c1);
  }
}
#endiv
