// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::posix { class W; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
#import sys.posix.W
struct tests::unit::posix::W : public cppunit::test::Fixture {
  using Subject = ::sys::posix::W;
  auto test_mentions() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
namespace tests::unit::posix {
  auto W::test_mentions() -> void {
    auto flags1 = Subject::CONTINUED | Subject::EXITED;
    auto flags2 = Subject::STOPPED;
    auto flags3 = Subject::UNTRACED | Subject::NOHANG;
    auto combined = (flags1 & flags2 & flags3) | flags1;
    Subject::Options const zero = Subject::NONE;
    CPPUNIT_ASSERT(zero != combined);
  }
}
#import rigging.suite.io
auto tests::unit::posix::W::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  using ::rigging::suite::call;     // because namespace tests::unit::call
  Stream series("W");
  series << call("mentions", &W::test_mentions)
         << END;
  return finalize(series);
}
#endiv
