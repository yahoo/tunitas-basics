// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <cpp>
#import c.const_argv
#import sys.call.Result
#import sys.posix.access
#import tests.binutils.Main
#import tests.binutils.parse.Access
#import tests.binutils.exception.Argument_Count
auto main(int c, char *v[]) -> int {
  tests::binutils::Main<sys::call::Result> remain("access", [](c::const_argv av) {
      using namespace tests::binutils;
      if (2 != av.size() && 3 != av.size()) {
        throw exception::Argument_Count();
      }
      // reminder: parse<Access> will look for an optional argument
      return access(av[1], parse<sys::ok::Access>(av, 2));
    });
  return remain(c::const_argv(c, v));
}
#endiv
