// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.is_same
#import std.string
#import sys.exits.Code
#import sys.call.Result
namespace tests::binutils::required {
  //
  // The result of a system call is one of a number of things.
  // e.g.
  //    auto exists(pathname) -> bool
  //    auto access(pathname, flags) -> sys::call::Result (sys::call::result::Value<int>)
  //    auto realpath(pathname) -> sys::call::result::Value<std::string>
  //    auto something(...something...) -> sys::exit::Code
  //    auto something(...something...) -> sys::exit::Code
  //
  template<typename RESULT> concept bool Syscall_Result =
    (std::is_same<RESULT, bool>::value ||
     std::is_same<RESULT, sys::exits::Code>::value ||
     std::is_same<RESULT, sys::call::result::Value<int>>::value ||
     std::is_same<RESULT, sys::call::result::Value<std::string>>::value);
}
#endiv
