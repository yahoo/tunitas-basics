// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.required // cascade the namespaces
#import sys.required.Enumeration
namespace sys::log::argument {
  //
  // Promote from the singular (Flag) to the plural (Flags)
  //
  // Usage:
  //
  //   using Many = Pluralize<Priority, Priorities>;
  //   auto function(Many) -> void;
  //   function(Priority::DEBUG);
  //   function(Priority::DEBUG | Priority::NOTICE);
  //
  template<required::Enumeration FLAG, required::Enumeration FLAGS> struct Pluralize;
}
#endiv
#divert <hpp>
namespace sys::log {
  template<required::Enumeration FLAG, required::Enumeration FLAGS> struct argument::Pluralize {
    using Flag = FLAG;
    using Flags = FLAGS;
    using Underlying = typename std::underlying_type<Flags>::type; // conceptually this is (sic) underlying_type<Pluralize<Flag, Flags>>::type
    Pluralize() = default;
    inline Pluralize(Flag flag) : flags{flag | flag} { }
    inline Pluralize(Flags flags) : flags{flags} { }
    inline explicit operator Flags() const { return flags; }
    inline explicit operator Underlying() const { return (Underlying)flags; }
  protected:
    Flags flags;
  };
}
#endiv
