// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
// Acquire the primitive #define values
#include <fcntl.h>
namespace sys::f {
  //
  // Suitable for use as the type field of f_owner_ex
  // Also available in sys::posix::F as manifest constants.
  //
  //   struct f_owner_ex {
  //     int   type;
  //     pid_t pid;
  //   };
  //
  //   f_owner_ex buf{
  //     .type = (int) Owner::TID,
  //     .pid =  998877
  //   };
  //
  enum class Owner {
    THREAD = F_OWNER_TID,
    TID [[deprecated("instead prefer THREAD")]] = THREAD,
    PROCESS = F_OWNER_PID,
    PID [[deprecated("instead prefer PROCESS")]] = PROCESS,
    GROUP = F_OWNER_PGRP,
    PGRP [[deprecated("instead prefer GROUP (Process Group)")]] = GROUP,
    GID [[deprecated("prefer GROUP, else PGRP")]] = GROUP,
  };
}
#endiv
