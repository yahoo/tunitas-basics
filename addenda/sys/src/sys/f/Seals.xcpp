// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.underlying_type
#import sys.f.Seal
#import sys.flagset.Cast
#include <hpp/sys.flagset.Cast> // because the complete type is needed to fulfil the Pluralizer requirements
#import sys.flagset.Container
namespace sys::f {
  //
  // The usual.
  //
  using Seals = flagset::Container<Seal, std::underlying_type_t<Seal>, flagset::Cast<Seal, std::underlying_type_t<Seal>>>;
}
#endiv
#divert <hpp>
namespace sys::f {
  inline constexpr auto operator&(Seal a, Seal b) -> Seals { return Seals::meet(a, b); }
  inline constexpr auto operator|(Seal a, Seal b) -> Seals { return Seals::join(a, b); }
  inline constexpr auto operator~(Seal a) -> Seals { return Seals::complement(a); }
}
#endiv
