// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.f.Seal
#import sys.f.Seals
#import std.is_same
namespace sys::f::required {
  //
  // Either the singleton or the (bitset) flags variant of f::Seals
  // Normally you'd use overloading to express this.
  // But when overloading on the return type, a template must be used.
  //
  // Usage:
  //
  //   template<required::Seals RESULT> inline auto function(...somehow...) -> RESULT;
  //
  template<typename SEALS> concept bool Seals = std::is_same_v<SEALS, f::Seals> || std::is_same_v<SEALS, f::Seal>;
}
#endiv
