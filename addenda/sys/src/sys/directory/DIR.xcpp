// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#include <dirent.h>
namespace sys {
  namespace directory {
    using DIR = ::DIR;
  }
}
#endiv
#divert <hpp>
#import off_t
namespace sys {
  namespace directory {
    inline auto rewind(DIR *) -> void;
    inline auto seek(DIR *, off_t) -> void;
    inline auto tell(DIR *) -> off_t;
    inline auto fd(DIR *) -> int;
    // MAXNAMELEN
    // NAME_MAX
    // TODO ... move to Entry
    // alphasort
    // get??entries
    // versionsort

    namespace {
      inline auto rewinddir(DIR *) -> void;
      inline auto seekdir(DIR *, off_t) -> void;
      inline auto telldir(DIR *) -> off_t;
      inline auto dirfd(DIR *) -> int;
    }

  }
}
#endiv
#divert <ipp>
auto sys::directory::rewind(DIR *d) -> void {
  ::rewinddir(d);
}

auto sys::directory::seek(DIR *d, off_t o) -> void {
  ::seekdir(d, o);
}

auto sys::directory::tell(DIR *d) -> off_t {
  return ::telldir(d);
}

auto sys::directory::fd(DIR *d) -> int {
  return ::dirfd(d);
}

namespace sys {
  namespace directory {
    namespace {
      // Because the "-dir" suffix is amusing to the legacy C-language interface
      auto rewinddir(DIR *d) -> void {
        rewind(d);
      }
      auto seekdir(DIR *d, off_t o) -> void {
        seek(d, o);
      }
      auto telldir(DIR *d) -> off_t {
        return tell(d);
      }
      auto dirfd(DIR *d) -> int {
        return fd(d);
      }
    }
  }
}
#endiv
