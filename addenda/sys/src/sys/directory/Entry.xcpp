// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#include <dirent.h>
namespace sys {
  namespace directory {
    class Entry;
    using entry = ::dirent;
  }
}
#entail sys.directory.Entry.less
#entail sys.directory.Entry.less_equal
#entail sys.directory.Entry.greater
#entail sys.directory.Entry.greater_equal
#endiv
#divert <hpp>
#import std.string
#import sys.directory.Type
class sys::directory::Entry {
public:
  inline Entry();
  inline Entry(ino_t, off_t, Type, std::string);
  inline explicit Entry(entry const &);
  ino_t ino;
  off_t off;
  // reclen is not carried over
  Type type;
  std::string name;
};
#endiv
#divert <ipp>
sys::directory::Entry::Entry()
  : ino(0)
  , off(0)
  , type(Type::UNKNOWN)
  , name() {
  ;
}

#import std.move
sys::directory::Entry::Entry(ino_t arg_ino, off_t arg_off, Type arg_type, std::string arg_name)
  : ino(arg_ino)
  , off(arg_off)
  , type(arg_type)
  , name(std::move(arg_name)) {
  ;
}

sys::directory::Entry::Entry(entry const &arg)
  : ino(arg.d_ino)
  , off(arg.d_off)
  , type(Type(arg.d_type))
  , name(arg.d_name) {
  ;
}
#endiv

