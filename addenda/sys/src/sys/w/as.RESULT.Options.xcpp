// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.W.Options
namespace sys {
  namespace posix {
    namespace W {

      template<typename RESULT> inline auto as(Options) -> RESULT;

      // reminder: these throw if Options contains more than one Flag  
      template<> inline auto as<Options>(Options) -> Options;
      template<> inline auto as<literal::Option>(Options) -> literal::Option;

    }
  }
}
#endiv
#divert <ipp>
template<typename RESULT> auto sys::posix::W::as(Options) -> RESULT {
  static_assert(0 == sizeof (RESULT) && 0 != sizeof (RESULT), "only specializations");
  return RESULT();
}

template<> auto sys::posix::W::as<sys::posix::W::Options>(Options o) -> Options {
  return o;
}

#import sys.flags.maskof
template<> auto sys::posix::W::as<sys::posix::W::literal::Option>(Options o) -> literal::Option { return sys::flags::maskof<literal::Option>(o, Options::Limits::begin(), Options::Limits::end()); }
#endiv
