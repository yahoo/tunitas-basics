// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.underlying_type
#import sys.dn.Notify
#import sys.flagset.Cast
#include <hpp/sys.flagset.Cast> // because the complete type is needed to fulfil the concept
#import sys.flagset.Container
namespace sys::dn {
  //
  // The usual.
  // But the uint32_t is required because that high sign bit is actually used to signal something.
  //
  using Notifies = flagset::Container<Notify, std::underlying_type_t<Notify>, flagset::Cast<Notify, std::underlying_type_t<Notify>>>;
}
#endiv
#divert <hpp>
namespace sys::dn {
  inline constexpr auto operator&(Notify a, Notify b) -> Notifies { return Notifies::meet(a, b); }
  inline constexpr auto operator|(Notify a, Notify b) -> Notifies { return Notifies::join(a, b); }
  inline constexpr auto operator~(Notify a) -> Notifies { return Notifies::complement(a); }
}
#endiv
