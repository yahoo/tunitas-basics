// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.fd.Flag
#import sys.fd.Flags
#import sys.fd.required.Flags
namespace sys::fd {
  template<required::Flags RESULT> auto as(Flag) -> RESULT = delete;
  template<required::Flags RESULT> auto as(Flags) -> RESULT = delete;
  template<> inline auto as<Flag>(Flag) -> Flag; //    identity is unexceptional
  template<> inline auto as<Flag>(Flags) -> Flag; //   demotion can throw because it demotion of multi-flag values is ambiguous.
  template<> inline auto as<Flags>(Flag) -> Flags; //  simple promotion unexceptional
  template<> inline auto as<Flags>(Flags) -> Flags; // identity is unexceptional
}
#endiv
#divert <ipp>
#import sys.flags.maskof
namespace sys {
  template<> auto fd::as<fd::Flag>(Flag f) -> Flag    { return f; }
  template<> auto fd::as<fd::Flag>(Flags s) -> Flag   { return sys::flags::maskof<Flag>(s, Flags::Limits::begin(), Flags::Limits::end()); }
  template<> auto fd::as<fd::Flags>(Flag f) -> Flags  { return Flags{f}; }
  template<> auto fd::as<fd::Flags>(Flags s) -> Flags { return s; }
}
#endiv
