// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.posix.pf.Type
namespace sys::posix::af {
  //
  // PREFER this usage with the lower-case 'af' as the namespace name.
  // AVOID the other usage with the upper-case 'AF' as the namespace name.
  // The enum class already gives access to the enum members in a scoped nomenclature
  //
  // Reminder -- AF and PF are basically the same thing.
  // Reminder -- The documents (socket(2)) say they could be different, but they are never different.
  //
  // Question: Have there _ever_ been protocols and addresses that do not co-vary together as interlocked?
  // Answer: no.
  //         https://en.wikipedia.org/wiki/Berkeley_sockets
  //         Further erudiction occurs in sys.posix.pf
  //
  // To give the flavor of the usage, consider the socket(2) call.
  //
  //   auto socketed = socket(AF::INET6, SOCK::STREAM, IPPROTO::NONE);
  //   auto socketed = socket(PF::INET4, SOCK::STREAM, IPPROTO::NONE);
  //
  using Type = pf::Type;
}
#endiv
