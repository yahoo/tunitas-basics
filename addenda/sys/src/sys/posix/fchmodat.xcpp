// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.at.interface
namespace sys::posix {
  namespace packaging::fchmodat {
    using namespace packaging::at::interface;
    namespace function {
      using Position = argument::Position<File>;
      inline auto fchmodat(Position, Pathname, Permissions, Flags) -> result::Status;
    }
    namespace native {
      using Position = argument::Position<int>;
      inline auto fchmodat(Position, Pathname, Permissions, Flags) -> result::Status;
    }
  }
  using packaging::fchmodat::function::fchmodat;
  namespace native { using packaging::fchmodat::native::fchmodat; }
}
using sys::posix::fchmodat; // avoid ambiguity with the POSIX C API
#endiv
#divert <ipp>
#import sys.posix.syscall
namespace sys::posix::packaging::fchmodat {
  auto function::fchmodat(Position position, Pathname pathname, Permissions perms, Flags flags) -> result::Status { return native::fchmodat(position, move(pathname), perms, flags); }
  auto native::fchmodat(Position position, Pathname pathname, Permissions perms, Flags flags) -> result::Status   { return idiomatic::syscall<int>(Syscall::FCHMODAT, (int)position, (char const *)pathname, (mode_t)perms, (int)flags); }
}
#endiv
