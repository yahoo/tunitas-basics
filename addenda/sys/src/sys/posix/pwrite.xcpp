// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.iov.interface
namespace sys::posix {
  namespace packaging::pwrite {
    using namespace packaging::iov::interface;
    namespace function {
      inline auto pwrite(File, [[in]] void const *, Size, Offset) -> Result;
      template<required::Octet OCTET> inline auto pwrite(File, [[in]] Buffer<OCTET const>, Offset) -> Result;
    }
    namespace native {
      inline auto pwrite(int fd, [[in]] void const *, Size, Offset) -> Result;
      template<required::Octet OCTET> inline auto pwrite(int fd, [[in]] Buffer<OCTET const>, Offset) -> Result;
    }
  }
  using packaging::pwrite::function::pwrite;
  namespace native { using packaging::pwrite::native::pwrite; }
}
#endiv
#divert <ipp>
#import sys.posix.write
namespace sys::posix::packaging::pwrite {
  auto function::pwrite(File fd, void const *buf, Size size, Offset offset) -> Result                               { return posix::write(fd, buf, size, offset); }
  template<required::Octet OCTET> auto function::pwrite(File fd, Buffer<OCTET const> buf, Offset offset) -> Result  { return posix::write(fd, buf, offset); }
  //
  auto native::pwrite(int fd, void const *buf, Size size, Offset offset) -> Result                              { return posix::native::write(fd, buf, size, offset); }
  template<required::Octet OCTET> auto native::pwrite(int fd, Buffer<OCTET const> buf, Offset offset) -> Result { return posix::native::write(fd, buf, offset); }
}
#endiv
