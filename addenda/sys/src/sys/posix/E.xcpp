// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace sys::posix {
  //
  // It's a fake namespace-in-a-struct.
  // PREFER namespace sys::e                 (older) namespace sys::error
  // PREFER namespace sys::e::constants      (older) namespace sys::error (NO inline namespace constants)
  // PREFER sys::e::Code                     (older) sys::error::Code
  //        etc.
  //
  // Usage:
  //
  //   using E = sys::posix::E;
  //   auto const e0 = E::SUCCESS;
  //   auto const e1 = E::PERM;
  //   ...etc...
  //
  struct E;
}
#endiv
#divert <hpp>
#import sys.e.Code
#import sys.e.Condition
#import sys.e.constants
#import sys.posix.required.rebundled
struct sys::posix::E {
  using Condition = e::Condition;
  using Code = e::Code;
  inline static constexpr auto SUCCESS = e::SUCCESS;
  inline static constexpr auto AFNOSUPPORT = e::AFNOSUPPORT;
  inline static constexpr auto ADDRINUSE = e::ADDRINUSE;
  inline static constexpr auto ADDRNOTAVAIL = e::ADDRNOTAVAIL;
  inline static constexpr auto ISCONN = e::ISCONN;
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  [[deprecated("too cute, too cryptic.  instead, prefer E::ARGLISTTOOLONG")]] inline static constexpr auto TOOBIG = e::TOOBIG;
#pragma GCC diagnostic pop
  inline static constexpr auto ARGLISTTOOLONG = e::ARGLISTTOOLONG;
  inline static constexpr auto DOM = e::DOM;
  inline static constexpr auto FAULT = e::FAULT;
  inline static constexpr auto BADF = e::BADF;
#ifdef EBADMSG
  inline static constexpr auto BADMSG = e::BADMSG;
#endif
  inline static constexpr auto PIPE = e::PIPE;
  inline static constexpr auto CONNABORTED = e::CONNABORTED;
  inline static constexpr auto ALREADY = e::ALREADY;
  inline static constexpr auto CONNREFUSED = e::CONNREFUSED;
  inline static constexpr auto CONNRESET = e::CONNRESET;
  inline static constexpr auto XDEV = e::XDEV;
  inline static constexpr auto DESTADDRREQ = e::DESTADDRREQ;
  inline static constexpr auto BUSY = e::BUSY;
  inline static constexpr auto NOTEMPTY = e::NOTEMPTY;
  inline static constexpr auto NOEXEC = e::NOEXEC;
  inline static constexpr auto EXIST = e::EXIST;
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  [[deprecated("buy a vowel! spell it out! instead, prefer E::FILETOOBIG")]] inline static constexpr auto FBIG = e::FBIG;
#pragma GCC diagnostic pop
  inline static constexpr auto FILETOOBIG = e::FILE2BIG;
  inline static constexpr auto NAMETOOLONG = e::NAMETOOLONG;
  inline static constexpr auto NOSYS = e::NOSYS;
  inline static constexpr auto HOSTUNREACH = e::HOSTUNREACH;
#ifdef EIDRM
  inline static constexpr auto IDRM = e::IDRM;
#endif
  inline static constexpr auto ILSEQ = e::ILSEQ;
  inline static constexpr auto NOTTY = e::NOTTY;
  inline static constexpr auto INTR = e::INTR;
  inline static constexpr auto INVAL = e::INVAL;
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  [[deprecated("names mean things! instead prefer E::SEEK")]] inline static constexpr auto SPIPE = e::SPIPE;
#pragma GCC diagnostic pop
  inline static constexpr auto SEEK = e::SEEK;
  inline static constexpr auto IO = e::IO;
  inline static constexpr auto ISDIR = e::ISDIR;
  inline static constexpr auto MSGSIZE = e::MSGSIZE;
  inline static constexpr auto NETDOWN = e::NETDOWN;
  inline static constexpr auto NETRESET = e::NETRESET;
  inline static constexpr auto NETUNREACH = e::NETUNREACH;
  inline static constexpr auto NOBUFS = e::NOBUFS;
  inline static constexpr auto CHILD = e::CHILD;
#ifdef ENOLINK
  inline static constexpr auto NOLINK = e::NOLINK;
#endif
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
  [[deprecated("buy a vowel! instead, prefer E::NOLOCK")]] inline static constexpr auto NOLCK = e::NOLCK;
#pragma GCC diagnostic pop
  inline static constexpr auto NOLOCK = e::NOLOCK;
#ifdef ENODATA
  inline static constexpr auto NODATA = e::NODATA;
#endif
  inline static constexpr auto NOMSG = e::NOMSG;
  inline static constexpr auto NOPROTOOPT = e::NOPROTOOPT;
  inline static constexpr auto NOSPC = e::NOSPC;
#ifdef ENOSR
  inline static constexpr auto NOSR = e::NOSR;
#endif
  inline static constexpr auto NXIO = e::NXIO;
  inline static constexpr auto NOTBLK = e::NOTBLK; // Block device required (WATCHOUT: not in ISO C++)
  inline static constexpr auto NODEV = e::NODEV;
  inline static constexpr auto NOENT = e::NOENT;
  inline static constexpr auto SRCH = e::SRCH;
  inline static constexpr auto NOTDIR = e::NOTDIR;
  inline static constexpr auto NOTSOCK = e::NOTSOCK;
#ifdef ENOSTR
  inline static constexpr auto NOSTR = e::NOSTR;
#endif
  inline static constexpr auto NOTCONN = e::NOTCONN;
  inline static constexpr auto NOMEM = e::NOMEM;
#ifdef ENOTSUP
  inline static constexpr auto NOTSUP = e::NOTSUP;
#endif
#ifdef ECANCELED
  inline static constexpr auto CANCELED = e::CANCELED;
#endif
  inline static constexpr auto INPROGRESS = e::INPROGRESS;
  inline static constexpr auto PERM = e::PERM;
  inline static constexpr auto OPNOTSUPP = e::OPNOTSUPP;
  inline static constexpr auto WOULDBLOCK = e::WOULDBLOCK;
#ifdef EOWNERDEAD
  inline static constexpr auto OWNERDEAD = e::OWNERDEAD;
#endif
  inline static constexpr auto ACCES = e::ACCES;
#ifdef EPROTO
  inline static constexpr auto PROTO = e::PROTO;
#endif
  inline static constexpr auto PROTONOSUPPORT = e::PROTONOSUPPORT;
  inline static constexpr auto ROFS = Code::ROFS;
  inline static constexpr auto DEADLK = e::DEADLK;
  inline static constexpr auto AGAIN = e::AGAIN;
  inline static constexpr auto RANGE = e::RANGE;
#ifdef ENOTRECOVERABLE
  inline static constexpr auto NOTRECOVERABLE = e::NOTRECOVERABLE;
#endif
#ifdef ETIME
  inline static constexpr auto TIME = e::TIME;
#endif
#ifdef ETXTBSY
  inline static constexpr auto TXTBSY = e::TXTBSY;
#endif
  inline static constexpr auto TIMEDOUT = e::TIMEDOUT;
  inline static constexpr auto NFILE = e::NFILE;
  inline static constexpr auto MFILE = e::MFILE;
  inline static constexpr auto MLINK = e::MLINK;
  inline static constexpr auto LOOP = e::LOOP;
#ifdef EOVERFLOW
  inline static constexpr auto OVERFLOW = e::OVERFLOW;
#endif
  inline static constexpr auto PROTOTYPE = e::PROTOTYPE;
  // ----------------------------------------------------------------------------------------------------
  //
  // Linux-specific values
  //
  inline static constexpr auto CHRNG = e::CHRNG;
  inline static constexpr auto L2NSYNC = e::L2NSYNC;
  inline static constexpr auto L3HLT = e::L3HLT;
  inline static constexpr auto L3RST = e::L3RST;
  inline static constexpr auto LNRNG = e::LNRNG;
  inline static constexpr auto UNATCH = e::UNATCH;
  inline static constexpr auto NOCSI = e::NOCSI;
  inline static constexpr auto L2HLT = e::L2HLT;
  inline static constexpr auto BADE = e::BADE;
  inline static constexpr auto BADR = e::BADR;
  inline static constexpr auto XFULL = e::XFULL;
  inline static constexpr auto NOANO = e::NOANO;
  inline static constexpr auto BADRQC = e::BADRQC;
  inline static constexpr auto BADSLT = e::BADSLT;
  inline static constexpr auto DEADLOCK = e::DEADLOCK;
  inline static constexpr auto BFONT = e::BFONT;
  inline static constexpr auto NONET = e::NONET;
  inline static constexpr auto NOPKG = e::NOPKG;
  inline static constexpr auto REMOTE = e::REMOTE;
  inline static constexpr auto ADV = e::ADV;
  inline static constexpr auto SRMNT = e::SRMNT;
  inline static constexpr auto COMM = e::COMM;
  inline static constexpr auto MULTIHOP = e::MULTIHOP;
  inline static constexpr auto DOTDOT = e::DOTDOT;
  inline static constexpr auto NOTUNIQ = e::NOTUNIQ;
  inline static constexpr auto REMCHG = e::REMCHG;
  inline static constexpr auto LIBACC = e::LIBACC;
  inline static constexpr auto LIBBAD = e::LIBBAD;
  inline static constexpr auto LIBSCN = e::LIBSCN;
  inline static constexpr auto LIBMAX = e::LIBMAX;
  inline static constexpr auto LIBEXEC = e::LIBEXEC;
  inline static constexpr auto RESTART = e::RESTART;
  inline static constexpr auto USERS = e::USERS;
  inline static constexpr auto SOCKTNOSUPPORT = e::SOCKTNOSUPPORT;
  inline static constexpr auto PFNOSUPPORT = e::PFNOSUPPORT;
  inline static constexpr auto SHUTDOWN = e::SHUTDOWN;
  inline static constexpr auto TOOMANYREFS = e::TOOMANYREFS;
  inline static constexpr auto HOSTDOWN = e::HOSTDOWN;
  inline static constexpr auto STALE = e::STALE;
  inline static constexpr auto UCLEAN = e::UCLEAN;
  inline static constexpr auto NOTNAM = e::NOTNAM;
  inline static constexpr auto NAVAIL = e::NAVAIL;
  inline static constexpr auto ISNAM = e::ISNAM;
  inline static constexpr auto DQUOT = e::DQUOT;
  inline static constexpr auto NOMEDIUM = e::NOMEDIUM;
  inline static constexpr auto MEDIUMTYPE = e::MEDIUMTYPE;
  inline static constexpr auto NOKEY = e::NOKEY;
  inline static constexpr auto KEYEXPIRED = e::KEYEXPIRED;
  inline static constexpr auto KEYREVOKED = e::KEYREVOKED;
  inline static constexpr auto KEYREJECTED = e::KEYREJECTED;
  inline static constexpr auto RFKILL = e::RFKILL;
  inline static constexpr auto HWPOISON = e::HWPOISON;
  //
  E() = delete;
  E(E const &) = delete;
  auto operator=(E const &) -> E & = delete;
};
#endiv
#divert <ipp>
namespace sys::posix {
  // any?
}
#endiv
#divert <cpp>
#import tests.usage.posix_E.Usage
static_assert(tests::usage::posix_E::Usage<>);
#endiv
