// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.at.interface
namespace sys::posix {
  namespace packaging::linkat {
    using namespace packaging::at::interface;
    namespace function {
      using Position = argument::Position<File>;
      inline auto linkat(Position source_directory, Pathname source, Position destination_directory, Pathname destination, Flags) -> result::Status;
    }
    namespace native {
      using Position = argument::Position<int>;
      inline auto linkat(Position source_directory, Pathname source, Position destination_directory, Pathname destination, Flags) -> result::Status;
    }
  }
  using packaging::linkat::function::linkat;
  namespace native { using packaging::linkat::native::linkat; }
}
using sys::posix::linkat; // avoid ambiguity with the POSIX C API
#endiv
#divert <ipp>
#import sys.posix.syscall
namespace sys::posix::packaging::linkat {
  auto function::linkat(Position source_directory, Pathname source, Position destination_directory, Pathname destination, Flags flags) -> result::Status { return native::linkat(source_directory, source, destination_directory, destination, flags); }
  auto native::linkat(Position source_directory, Pathname source, Position destination_directory, Pathname destination, Flags flags) -> result::Status {
    return idiomatic::syscall<int>(Syscall::LINKAT, (int)source_directory, (char const *)source, (int)destination_directory, (char const *)destination, (int)flags);
  }
}
#endiv
