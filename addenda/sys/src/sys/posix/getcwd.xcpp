// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import std.string
#import sys.call.result.Value
namespace sys {
  namespace posix {
    //
    // Recall: get-"wd" vs get-"cwd"
    //
    //   getcwd(char *buf, size_t size) -> char *;
    //   auto getwd(char *buf) -> char *
    //
    // But at the C++ level these two are "the same"
    auto getcwd() -> call::result::Value<std::string>;
  }
}
#endiv
#divert <cpp>
#import getcwd
#import std.move
// require PATH_MAX
// #include <sys/param.h> -- WATCHOUT - many #defines will poison the namespace
#include <linux/limits.h>
auto sys::posix::getcwd() -> call::result::Value<std::string> {
  using result_type = call::result::Value<std::string>;
  char buf[PATH_MAX];
  char const *r = ::getcwd(buf, sizeof (buf));
  auto errnum = errno; // capture the value of errno before doing anything else
  bool b = nullptr != r;
  std::string wd = b ? std::string(r) : std::string();
  result_type ret(b, errnum, std::move(wd));
  return ret;
}
#endiv
