// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.itimer.interface
namespace sys::posix {
  namespace packaging::getitimer {
    using namespace itimer::interface;
    namespace function {
      inline auto getitimer(Which) -> Result;
      inline auto getitimer(Which, [[out]] itimerval &) -> Status;
    }
  }
  using packaging::getitimer::function::getitimer;
}
#endiv
#divert <ipp>
#import sys.posix.syscall
namespace sys::posix::packaging::getitimer {
  auto function::getitimer(Which which) -> Result {
    auto fill = itimerval{};
    auto got = getitimer(which, fill);
    if (auto b = good(got); b) {
      return {true, error_t{}, fill};
    } else {
      return {false, error_num(got), {}};
    }
  }
  auto function::getitimer(Which which, itimerval &fill) -> Status { return idiomatic::syscall<int>(Syscall::GETITIMER, (int)which, &fill); }
}
#endiv
