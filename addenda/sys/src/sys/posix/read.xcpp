// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.iov.interface
namespace sys::posix {
  namespace packaging::read {
    using namespace packaging::iov::interface;
    namespace function {
      // read(2)
      inline auto read(File, [[out]] void *, Size) -> Result;
      template<required::Octet OCTET> inline auto read(File, [[out]] Buffer<OCTET>) -> Result requires not std::is_const_v<OCTET>;
      // pread(2)
      inline auto read(File, [[out]] void *, Size, Offset) -> Result;
      template<required::Octet OCTET> inline auto read(File, [[out]] Buffer<OCTET>, Offset) -> Result requires not std::is_const_v<OCTET>;
    }
    namespace native {
      // read(2)
      inline auto read(int fd, [[out]] void *, Size) -> Result;
      template<required::Octet OCTET> inline auto read(int fd, [[out]] Buffer<OCTET>) -> Result requires not std::is_const_v<OCTET>;
      // pread(2)
      inline auto read(int fd, [[out]] void *, Size, Offset) -> Result;
      template<required::Octet OCTET> inline auto read(int fd, [[out]] Buffer<OCTET>, Offset) -> Result requires not std::is_const_v<OCTET>;
    }
  }
  using packaging::read::function::read;
  namespace native { using packaging::read::native::read; }
}
#endiv
#divert <ipp>
#import sys.posix.syscall
namespace sys::posix::packaging::read {
  // read(2)
  auto function::read(File fd, void *buf, Size size) -> Result                                                                  { return native::read((int)fd, buf, size); }
  template<required::Octet OCTET> auto function::read(File fd, Buffer<OCTET> buf) -> Result requires not std::is_const_v<OCTET> { return native::read((int)fd, buf); }
  //
  auto native::read(int fd, void *buf, Size size) -> Result                                                                  { return idiomatic::syscall<ssize_t>(Syscall::READ, fd, buf, size); }
  template<required::Octet OCTET> auto native::read(int fd, Buffer<OCTET> buf) -> Result requires not std::is_const_v<OCTET> { return read(fd, buf.data(), buf.size()); }
}
#import sys.posix.packaging.syscall.Offset
namespace sys::posix::packaging::read {
  // pread(2)
  auto function::read(File fd, void *buf, Size size, Offset offset) -> Result                                                                  { return native::read((int)fd, buf, size, offset); }
  template<required::Octet OCTET> auto function::read(File fd, Buffer<OCTET> buf, Offset offset) -> Result requires not std::is_const_v<OCTET> { return native::read((int)fd, buf, offset); }
  //
  auto native::read(int fd, void *buf, Size size, Offset offset) -> Result                                                                  { return packaging::syscall::Offset::pread(fd, buf, size, offset); }
  template<required::Octet OCTET> auto native::read(int fd, Buffer<OCTET> buf, Offset offset) -> Result requires not std::is_const_v<OCTET> { return read(fd, buf.data(), buf.size(), offset); }
}
#endiv
