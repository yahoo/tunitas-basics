// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.call.result.Value
#import sys.time.t
namespace sys::posix {
  //
  // time(2) can fail ... and ... you actually should check for that.
  //
  // Whereas time(2) offers to assign the 32-bit or 64-bit time to a location
  // this interface does not.  The time is always returned by value.
  //
  inline auto time() -> call::result::Value<sys::time::t>;
}
#endiv
#divert <ipp>
#include <cerrno>
#import time
#import std.move
auto sys::posix::time() -> call::result::Value<sys::time::t> {
  using result_type = call::result::Value<sys::time::t>;
  auto now = ::time(nullptr);
  auto errnum = errno; // capture the value of errno before doing anything else
  auto ok = now >= 0;
  result_type ret(ok, errnum, now);
  return ret;
}
#endiv
