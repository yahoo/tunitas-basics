// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.at.Position
#import sys.call.argument.Pathname
#import sys.call.argument.Pathstring
#import sys.call.argument.Permissions
#import sys.call.Result
#import sys.id.File
#import sys.posix.packaging.required // cascade
#import sys.required.Descriptor
namespace sys::posix::packaging::mkdir::interface {
  inline namespace argument {
           // n.b. the use of argument::Position allows the on-site overload variation
           // with either an 'int' dirfd or the symbolic AT::FDCWD constant.
           template<required::Descriptor NATIVE> using Position = sys::at::position::Position<NATIVE>;
           using call::argument::Pathname; // ..... for mkdir (alone) ..... just the reference
           using call::argument::Pathstring; // ... for mkdirp,  mkdirs ... string by value
           using call::argument::Permissions;
  }
  namespace result {
    using Status = call::Result;
  }
  using id::File;
  using Mode [[deprecated("use the precise form Permissions")]] = Permissions;
}
#endiv


