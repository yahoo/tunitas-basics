// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.time.durations // a.k.a. sys::time::durations::base a.k.a. std::chrono::duration
#import nonstd.required.Integer
#import nonstd.required.Ratio
namespace sys::posix::packaging::sleep::required {
  //
  // Is this a time::Duration<REP,RATIO>?
  //
  // [[FIXTHIS]] use sys::time::required::Duration<DURATION> when it exists, perhaps in module-sys >= 0.29.0-90.devel
  template<typename DURATION> concept Duration = requires(DURATION) {
    typename DURATION::rep;
    typename DURATION::period;
    requires required::Integer<typename DURATION::rep>;
    requires required::Ratio<typename DURATION::period>;
  };
}
#endiv
#divert <cpp>
#import sys.time.Duration
#import sys.posix.packaging.sleep.duration // duration:Duration<REP,RATIO>
namespace {
  namespace tests {
    namespace required = sys::posix::packaging::sleep::required;
    namespace duration = sys::posix::packaging::sleep::duration;
    static_assert(required::Duration<sys::time::Duration>);
    static_assert(required::Duration<duration::Duration<int,std::ratio<1>>>);
  }
}
#endiv
