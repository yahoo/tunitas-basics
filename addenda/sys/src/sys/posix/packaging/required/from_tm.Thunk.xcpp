// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.posix.packaging.from_tm.interface
namespace sys::posix::packaging::required::from_tm {
  //
  // The from_tm thunk.
  // Shaped like timegm
  //
  // Usage:
  //
  //   Hack the Spew (the usual).
  //
  namespace implementation {
    using namespace packaging::from_tm::interface;
    template<typename THUNK> concept Thunk = requires(THUNK thunk, Disaggregated const in) {
      { thunk(&in) } -> convertible_to<Old>;
    };
  }
  using implementation::Thunk;
}
#endiv
#divert <cpp>
#import timegm
#import timelocal
#import sys.posix.packaging.const_tm
namespace {
  namespace tests {
    using namespace sys::posix::packaging;
    using required::from_tm::Thunk;
    //
    static_assert(not Thunk<decltype(::timegm)>);
    static_assert(not Thunk<decltype(::timelocal)>);
    //
    static_assert(Thunk<decltype(const_tm::timegm)>);
    static_assert(Thunk<decltype(const_tm::timelocal)>);
  }
}
#endiv
