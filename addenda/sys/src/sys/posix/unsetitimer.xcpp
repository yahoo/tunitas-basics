// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.itimer.interface
#import std.nullptr_t
namespace sys::posix {
  namespace packaging::unsetitimer {
    using namespace itimer::interface;
    namespace function {
      //
      // And we are reminded from the documentation of setitimer(2) via man-pages-4.16-3.fc29.noarch
      //
      // <quote>
      //   If both fields in new_value.it_value are zero, then the timer is disarmed.
      // </quote>
      //
      inline auto unsetitimer(Which) -> Result;
      inline auto unsetitimer(Which, std::nullptr_t) -> Status;
      inline auto unsetitimer(Which, [[out]] itimerval &) -> Status;
    }
  }
  using packaging::unsetitimer::function::unsetitimer;
}
#endiv
#divert <ipp>
#import sys.posix.setitimer
namespace sys::posix::packaging::unsetitimer {
  auto function::unsetitimer(Which w) -> Result                   { return posix::setitimer(w, itimerval{}); }
  auto function::unsetitimer(Which w, std::nullptr_t n) -> Status { return posix::setitimer(w, itimerval{}, n); }
  auto function::unsetitimer(Which w, itimerval &o) -> Status     { return posix::setitimer(w, itimerval{}, o); }
}
#endiv
