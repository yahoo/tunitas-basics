// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import sys.posix.packaging.iov.interface
namespace sys::posix {
  namespace packaging::pwritev2 {
    using namespace packaging::iov::interface;
    namespace function {
      inline auto pwritev2(File, [[in]] io::Vec const *, Count, Offset, Flags) -> Result;
      inline auto pwritev2(File, [[in]] io::Vector<io::Vec const>, Offset, Flags) -> Result;
    }
    namespace native {
      inline auto pwritev2(int fd, [[in]] io::Vec const *, Count, Offset, Flags) -> Result;
      inline auto pwritev2(int fd, [[in]] io::Vector<io::Vec const>, Offset, Flags) -> Result;
    }
  }
  using packaging::pwritev2::function::pwritev2;
  namespace native { using packaging::pwritev2::native::pwritev2; }
}
#endiv
#divert <ipp>
#import sys.posix.writev
namespace sys::posix::packaging::pwritev2 {
  auto function::pwritev2(File fd, io::Vec const *vec, Count count, Offset offset, Flags flags) -> Result { return posix::writev(fd, vec, count, offset, flags); }
  auto function::pwritev2(File fd, io::Vector<io::Vec const> vec, Offset offset, Flags flags) -> Result   { return posix::writev(fd, vec, offset, flags); }
  //
  auto native::pwritev2(int fd, io::Vec const *vec, Count count, Offset offset, Flags flags) -> Result    { return posix::native::writev(fd, vec, count, offset, flags); }
  auto native::pwritev2(int fd, io::Vector<io::Vec const> vec, Offset offset, Flags flags) -> Result      { return posix::native::writev(fd, vec, offset, flags); }
}
#endiv
