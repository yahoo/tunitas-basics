// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.call.result.Element.declaration
#import std.tuple
#import error_t
namespace sys::call::result {
  //
  // like std::tuple_element, but works on the tuple underneath Value<...>
  //
  template<std::size_t N, typename VALUE, typename... VALUES> struct Element<N, std::tuple<bool, error_t, VALUE, VALUES...>>;
}
#endiv
#divert <hpp>
#import std.tuple_element
namespace sys::call {
  template<std::size_t N, typename VALUE, typename... VALUES> struct result::Element<N, std::tuple<bool, error_t, VALUE, VALUES...>> {
    using Type = typename std::tuple_element<N, std::tuple<bool, error_t, VALUE, VALUES...>>::type;
    using type [[deprecated("avoid old_school here. instead prefer New School, prefer Element<N, VALUES...>::Type")]] = Type;
  };
}
#endiv
