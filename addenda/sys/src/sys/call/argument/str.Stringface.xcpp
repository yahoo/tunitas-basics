// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#forward sys.call.argument.Stringface
namespace sys::call::argument {
  //
  // The 'str' operation.
  // Placed so that it it found by ADL
  //
  // Lifetimes:
  //
  //   As with c::str(...)
  //   the lifetime of the pathname must be longer than the usage of the result.
  //   You are extracting a pointer to the internals of something.
  //
  // Usage:
  //
  //   auto const pathname = Stringface{"./that/thing};
  //   auto const *const pointer = str(pathname);
  //
  inline auto str(Stringface const &) -> char const *;
}
#import c.str
namespace c {
  //
  // Usage:
  //
  //   auto const pathname = Stringface{"./that/thing};
  //   funcall(c::str(pathname));
  //
  // So that it overloads with the others and provides idiomatic c::str(pathname)
  using sys::call::argument::str;
};
#endiv
#divert <ipp>
#import sys.call.argument.Stringface
auto sys::call::argument::str(Stringface const &p) -> char const * {
  return p;
}
#endiv
