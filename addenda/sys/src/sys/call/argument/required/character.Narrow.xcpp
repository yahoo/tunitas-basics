// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.is_same
#import std.remove_const
namespace sys::call::argument::required::character {
  //
  // A narrow character, consty or not
  //
  // Application:
  //   argument::Stringface constructors
  //   argument::Stringsite constructors
  //
  // In the application sites, all of c::basic_stringz<CHAR>, c::basic_stringn<CHAR> appear, which is ambiguous
  // so the template ruse allows for all possible variants of const-and-muting, pointer-and-stringz-and-stringn
  // to be defined with only 3 declaration-definition repetitions.
  //
  // Usage:
  //
  //   oh, come on.
  //
  template<typename CHAR> concept bool Narrow = std::is_same<typename std::remove_const<CHAR>::type, char>::value;
}
#endiv
