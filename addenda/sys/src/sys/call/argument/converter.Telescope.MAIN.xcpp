// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.call.argument.converter.Telescope.declaration
namespace sys::call::argument::converter {
  template<typename MAIN> struct Telescope<MAIN>;
}
#endiv
#divert <hpp>
namespace sys::call::argument::converter {
  template<typename MAIN> struct Telescope<MAIN> {
    using Value = MAIN;
    inline Telescope();
    [[implicit]] Telescope(Value);
    inline explicit operator Value() const;
    inline auto operator&() -> Value *;
  protected:
    Value value;
  };
}
#endiv
#divert <ipp>
namespace sys::call::argument::converter {
  template<typename _> Telescope<_>::Telescope() : value{} { }
  template<typename _> Telescope<_>::Telescope(Value value) : value{value} { }
  template<typename _> Telescope<_>::operator Value() const { return value; }
  template<typename _> auto Telescope<_>::operator&() -> Value * { return &value; }
}
#endiv
