// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import sys.call.argument.converter.Telescope.declaration
namespace sys::call::argument::converter {
  template<typename MAIN, typename FIRST, typename... REST> struct Telescope<MAIN, FIRST, REST...>;
}
#endiv
#divert <hpp>
#import sys.call.argument.converter.Conversion
namespace sys::call::argument::converter {
  template<typename MAIN, typename FIRST, typename... REST> class Telescope<MAIN, FIRST, REST...> : public Telescope<MAIN, REST...> {
    using Ancestor = Telescope<MAIN, REST...>;
    using Conversion = converter::Conversion<FIRST, MAIN>; // WATCHOUT Conversion<FROM, TO> runs left-to-right but Telescope<LHS, RHS1, RHS2, RHS3, ...>
  public:
    Telescope() = default;
    [[implicit]] Telescope(FIRST first) : Ancestor{Conversion::convert(first)} { }
  };
}
#endiv
