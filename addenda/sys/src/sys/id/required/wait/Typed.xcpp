// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.is_same
#import sys.id.wait.Typed // and wait::typed_t (lower case)
namespace sys::id::required::wait {
  //
  // Is this type an (un)typed wait identifier (the pair?
  //
  // Usage:
  //
  //   Oh come on.
  //
  namespace typed {
    using namespace std;
    namespace id = sys::id::wait;
    template<typename TYPED> concept bool Title_Case = is_same_v<TYPED, id::Typed>;
    template<typename TYPED> concept bool Lower_Case = is_same_v<TYPED, id::typed_t>;
    template<typename TYPED> concept bool Typed = Title_Case<TYPED> || Lower_Case<TYPED>;
  }
  using typed::Typed;
}
#endiv
#divert <cpp>
#import id_t
#import sys.id.Wait
namespace {
  namespace tests {
    using namespace sys::id;
    static_assert(required::wait::Typed<sys::id::wait::Typed>);
    static_assert(required::wait::Typed<sys::id::wait::typed_t>);
    static_assert(!required::wait::Typed<pid_t>);
    static_assert(!required::wait::Typed<id_t>);
  }
}
#endiv
