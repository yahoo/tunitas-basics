// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
// Acquire the primitive #define values
#include <unistd.h>
namespace sys::lockf {
  //
  // Suitable for use as the 3nd argument to lockf(2)
  // Also available in sys::posix::F as manifest constants.
  //
  //   auto called = lockf(fd, F::LOCK, Offset{1});
  //   auto called = lockf(fd, F::TESTANDLOCK, Offset{-10});
  //   auto called = lockf(fd, F::UNLOCK, Offset{0});
  //   auto called = lockf(fd, F::TEST, Offset{99});
  //
  enum class Operation {
    LOCK          = F_LOCK,
    TEST_AND_LOCK = F_TLOCK,
    TEST          = F_TEST,
    UNLOCK        = F_ULOCK,
    END           = UNLOCK,
    TLOCK [[deprecated("buy a vowel! instead, prefer TEST_AND_LOCK")]] = TEST_AND_LOCK,
    ULOCK [[deprecated("buy a vowel, er, buy a consonant! instead, prefer UNLOCK")]] = UNLOCK,
  };
}
#endiv
