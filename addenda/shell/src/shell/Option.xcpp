// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace shell {
  template<typename OWNER, typename Indicator, Indicator INDICATOR, typename VALUE> class Option;
}
#endiv
#divert <hpp>
template<typename OWNER, typename Indicator, Indicator INDICATOR, typename VALUE> class shell::Option {
public:
  using owner_type = OWNER;
  static constexpr Indicator const flag = INDICATOR;
  using value_type = VALUE;
  Option() = default;
  inline explicit Option(value_type const &);
  inline explicit Option(value_type &&);
  value_type value;
public:
  struct tests { struct Suite; };
  friend struct tests::Suite;
};
#endiv
#divert <ipp>
#import std.forward
template<typename OWNER, typename Indicator, Indicator INDICATOR, typename VALUE> shell::Option<OWNER, Indicator, INDICATOR, VALUE>::Option(value_type const &the_value)
  : value(the_value) {
  ;
}

template<typename OWNER, typename Indicator, Indicator INDICATOR, typename VALUE> shell::Option<OWNER, Indicator, INDICATOR, VALUE>::Option(value_type &&the_value)
  : value(std::forward<decltype(value)>(the_value)) {
  ;
}
#endiv
