// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
//
// A stalking horse for pipe-to execution.
// Question: And how would we know that it was really being invoked?
// Answer: If that bothers you then convert this to apply '/bin/tr a-z A-Z' or such.
//
#include <tests.unit.run.Pipe_To>
#endiv
#divert <hpp>
#import shell.run.Pipe_To
class tests::unit::run::Pipe_To::Horse : public ::shell::run::Pipe_To {
  using Ancestor = ::shell::run::Pipe_To;
public:
  Horse();
  explicit Horse(std::filesystem::path const &output_location);
};
#endiv
#divert <cpp>
tests::unit::run::Pipe_To::Horse::Horse()
  : Ancestor{EXEC, "/bin/dd"} {
  Ancestor::args.push_back("of=/tmp/t99.pipe_to.horse.t99");
}
tests::unit::run::Pipe_To::Horse::Horse(std::filesystem::path const &output_location)
  : Ancestor{EXEC, "/bin/dd"} {
  // No writing to the controlling terminal from the background.
  Ancestor::args.push_back("of="s + (std::string)output_location);
  Ancestor::args.push_back("status=none");
}
#endiv
