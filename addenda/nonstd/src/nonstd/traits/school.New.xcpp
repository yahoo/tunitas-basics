// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace nonstd::traits::school {
  //
  // Is this type New School?
  //
  // Concept:
  //
  // New School types Camel Case only for the subtypes.
  //
  //   Value
  //   Size
  //   Difference
  //   Iterator ......... Iterator<RW> ....... Iterator<MUTABLE>
  //   Const_Iterator ... Iterator<RO> ....... Iterator<CONSTIE>
  //
  // New School types are not old_school types.
  //
  // Usage:
  //
  //   auto is_new = school::New<nonstd::Array<char>>;
  //
  template<typename TYPE> struct New;
}
#endiv
#divert <hpp>
#import nonstd.traits.school.Old
namespace nonstd::traits {
  template<typename TYPE> struct school::New {
    inline static constexpr auto value = Old<TYPE>::value;
  };
}
#endiv
