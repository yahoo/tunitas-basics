// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import nonstd.regex.matching.Flags
namespace nonstd::regex::matching {
  inline namespace constants { }
}
#endiv
#divert <hpp>
#import std.regex_constants
namespace nonstd::regex::matching::constants {
  namespace implementation {
    using namespace std::regex_constants;
    namespace interface {
      inline constexpr auto DEFAULT = match_default;
      inline constexpr auto NOT_BOL = match_not_bol;
      inline constexpr auto NOT_EOL = match_not_eol;
      inline constexpr auto NOT_BOW = match_not_bow;
      inline constexpr auto NOT_EOW = match_not_eow;
      inline constexpr auto ANY = match_any;
      inline constexpr auto NOT_NULL = match_not_null;
      inline constexpr auto CONTINUOUS = match_continuous;
      inline constexpr auto PREVIOUS_AVAILABLE = match_prev_avail;
      inline constexpr auto PREV_AVAIL = PREVIOUS_AVAILABLE;
    }
  }
  using namespace implementation::interface;
}
#endiv
#divert <cpp>
namespace {
  namespace tests {
    using namespace nonstd::regex::matching::constants;
    // Prove the (all) names are visible
    static_assert(sizeof (NOT_BOL));
  }
}
#endiv
