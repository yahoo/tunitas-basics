// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.basic_string
#import nonstd.required.Dopelike
#import nonstd.required.Spanlike
#import nonstd.string // occlude the name 'string' (see the commentariat below)
namespace nonstd {
  //
  // Import std::basic_string, string, wstring
  // Enable as basic_dope convertible from std::basic_string
  //
  using std::basic_string;
  using string_storage = std::string; // see nonstd::string::Storage which is nearby
  using wstring_storage = std::wstring;
  template<typename CHAR, typename TRAITS, typename ALLOC> struct basic_dope_traits<basic_string<CHAR, TRAITS, ALLOC>> : public doping::Traits<CHAR> { };
  template<typename CHAR, typename TRAITS, typename ALLOC> struct span_traits<basic_string<CHAR, TRAITS, ALLOC>> : public spanning::Traits<CHAR> { };
}
#endiv
#divert <cpp>
#import nonstd.basic_string
namespace nonstd {
  static_assert(required::Dopelike<std::string>);
}
#endiv
