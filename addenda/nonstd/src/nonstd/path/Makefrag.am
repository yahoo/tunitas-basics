# This is a -*- Makefile -*- fragment.
# For terms and provenance see the LICENSE file at the top of this repository.

# merely a convenience
lib_libnonstd_path_la = lib/libnonstd-path.la
lib_libnonstd_path_la_LIBADD = $(nothing)
lib_libnonstd_path_la_LDFLAGS = $(PACKAGE_LDFLAGS_SET)
lib_libnonstd_path_la_MODULES = $(call HT_SOURCEStoMODULES, $(lib_libnonstd_path_la_SOURCES))
lib_libnonstd_path_la_SOURCES = \
  obj/src/nonstd/path/namespace.cpp \
  \
  obj/src/nonstd/path/filename/namespace.cpp \
  obj/src/nonstd/path/filename/deprefix.cpp \
  obj/src/nonstd/path/filename/desuffix.cpp \
  obj/src/nonstd/path/filename/has_prefix.cpp \
  obj/src/nonstd/path/filename/has_suffix.cpp \
  obj/src/nonstd/path/filename/join.cpp \
  obj/src/nonstd/path/filename/joining.cpp \
  obj/src/nonstd/path/filename/trim.cpp \
  obj/src/nonstd/path/filename/workbench.cpp \
  \
  obj/src/nonstd/path/filename/has/namespace.cpp \
  obj/src/nonstd/path/filename/has/Iterator.cpp \
  obj/src/nonstd/path/filename/has/prefix.cpp \
  obj/src/nonstd/path/filename/has/suffix.cpp \
  obj/src/nonstd/path/filename/has/somefix.cpp \
  \
  obj/src/nonstd/path/filename/mount/namespace.cpp \
  obj/src/nonstd/path/filename/mount/Unbound.cpp \
  obj/src/nonstd/path/filename/mount/Reference.cpp \
  obj/src/nonstd/path/filename/mount/Value.cpp \
  obj/src/nonstd/path/filename/mount/string.BOUND.cpp \
  obj/src/nonstd/path/filename/mount/Joiner.cpp \
  obj/src/nonstd/path/filename/mount/Joiner.ITERATOR.cpp \
  obj/src/nonstd/path/filename/mount/Joinering.cpp \
  obj/src/nonstd/path/filename/mount/Joinering.EMPTY.cpp \
  obj/src/nonstd/path/filename/mount/Joinering.VALUE.VALUES.cpp \
  \
  obj/src/nonstd/path/filename/trimmer/namespace.cpp \
  obj/src/nonstd/path/filename/trimmer/Workbench.cpp \
  obj/src/nonstd/path/filename/trimmer/Prototype.cpp \
  obj/src/nonstd/path/filename/trimmer/Deprefix.cpp \
  obj/src/nonstd/path/filename/trimmer/Desuffix.cpp \
  $(end)
$(scold_cxxdir)/nonstd/path/dependencies.mk: $(lib_libnonstd_path_la_SOURCES)
$(lib_libnonstd_path_la_SOURCES) : obj/src/%.cpp : src/%.xcpp
	$(HT_V_COLD) $(call HT_XCPP2CPP, $^)
	@test -e $@
$(scold_cxxdir)/nonstd/path/dependencies.mk:
	$(HT_V_BOTH) $(call HT_DEPENDENCIES, $^)
	@test -e $@
include $(scold_cxxdir)/nonstd/path/dependencies.mk
clean-dependencies::
	rm -f $(scold_cxxdir)/nonstd/path/dependencies.mk
