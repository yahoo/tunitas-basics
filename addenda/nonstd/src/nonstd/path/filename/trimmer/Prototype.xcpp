// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace nonstd::path::filename::trimmer {
  //
  // The ancestor of any trimmer workbench operator
  //
  class Prototype;
}
#endiv
#divert <hpp>
#import std.string
class nonstd::path::filename::trimmer::Prototype {
protected:
  ~Prototype() = default; // descendants only
public:
  inline explicit Prototype(std::string const &pattern);
  // Thus the operator prototypes *container* the pattern.
  // The operators can be copied around, saved, etc.
  // They do not "bind" to the pattern, as does the Worbench
  std::string pattern;
};
#endiv
#divert <ipp>
nonstd::path::filename::trimmer::Prototype::Prototype(std::string const &arg_pattern)
  : pattern(arg_pattern) {
  ;
}
#endiv
