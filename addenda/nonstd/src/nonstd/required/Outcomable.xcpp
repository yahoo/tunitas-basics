// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
#import nonstd.required.Default_Constructible
namespace nonstd::required {
  //
  // Is type suitable for use in Outcome<TYPE>?
  //
  // Grammar:
  //
  //   Whereas "outcome-able" is a neologism we have to make a choice about to whether to keep the trailing 'e'
  //   We follow the pattern of "move" which conjugates into "movable" with no 'e'
  //   per https://www.grammar.com/movable_or_moveable
  //       tl;dr prefer "movable" without the extra vowel)
  //
  // Usage:
  //
  //   struct<required::Outcomable TYPE> auto function(...somehow...) -> Outcome<TYPE>;
  //
  template<typename TYPE> concept Outcomable = Default_Constructible<TYPE>;
}
#endiv
