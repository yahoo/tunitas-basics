// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.forward_iterator_tag
#import std.bidirectional_iterator_tag
#import std.random_access_iterator_tag
#import std.iterator_traits
#import nonstd.required.iterator.Input
namespace nonstd::required::iterator {
  //
  // A forward itreator
  //
  // Most of https://en.cppreference.com/w/cpp/named_req/ForwardIterator
  //
  template<typename ITERATOR> concept bool Forward = Input<ITERATOR> && requires(ITERATOR iterator) {
    requires (std::is_same<std::forward_iterator_tag, typename std::iterator_traits<ITERATOR>::iterator_category>::value ||
              std::is_same<std::bidirectional_iterator_tag, typename std::iterator_traits<ITERATOR>::iterator_category>::value ||
              std::is_same<std::random_access_iterator_tag, typename std::iterator_traits<ITERATOR>::iterator_category>::value);
    { ++iterator } -> ITERATOR &;
    { iterator++ } -> ITERATOR;
    { *iterator++ } -> typename std::iterator_traits<ITERATOR>::reference;
  };
}
#endiv
