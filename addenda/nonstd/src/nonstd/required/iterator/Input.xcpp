// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
// https://wiki.scold-lang.org/page/nonstd.required.iterator.Input
#import nonstd.input_iterator_tag
#import nonstd.required.iterator.Basis
namespace nonstd::required::iterator {
  //
  // An input iterator
  //
  // Most of https://en.cppreference.com/w/cpp/named_req/InputIterator
  //
  namespace input {
    template<typename ITERATOR> concept bool By_Value = requires(ITERATOR iterator) {
      { *iterator } -> typename iterator_traits<ITERATOR>::value_type;
    };
    template<typename ITERATOR> concept bool By_Reference = requires(ITERATOR iterator) {
      { *iterator } -> typename iterator_traits<ITERATOR>::reference;
    };
    template<typename ITERATOR> concept bool Input = Basis<ITERATOR> && requires(ITERATOR iterator) {
      requires is_base_of_v<input_iterator_tag, typename iterator_traits<ITERATOR>::iterator_category>;
      requires By_Value<ITERATOR> || By_Reference<ITERATOR>;
      { iterator == iterator } -> bool;
      { iterator != iterator } -> bool;
    };
  }
  using input::Input;
}
#endiv
