// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace nonstd::exception {
  //
  // The unimplemented (function) exception.
  //
  // Concept:
  //
  //   A code-level (subsystem, function) is unimplemented at a file & line number.
  //   Reminder __FUNCTION__ gives the member function name, not the fully-qualified class name to identifiy it.
  //
  //   Unimplementation is a runtime error because it is the luser's fault for operating
  //   the program into a mode which is known to be incomplete.
  //
  // Design:
  //
  //   Support old-school tokens __FUNCTION__, __FILE__, __LINE__
  //   Support new-school interface std::source_location
  //
  // Usage:
  //
  //   throw Unimplemented(};
  //   throw Unimplemented(std::source_location::current()};
  //   throw Unimplemented{__FUNCTION__, __FILE__, __LINE__};
  //
  class [[nodiscard]] Unimplemented;
}
#endiv
#divert <hpp>
#import nonstd.exception.detail.Function_File_Line
#import nonstd.basic_string_view
#import nonstd.exception.Runtime
class nonstd::exception::Unimplemented : public detail::Function_File_Line<Runtime<string_view>> {
  using Ancestor = detail::Function_File_Line<Runtime<string_view>>;
public:
  using Ancestor::Function_File_Line;
};
#endiv
