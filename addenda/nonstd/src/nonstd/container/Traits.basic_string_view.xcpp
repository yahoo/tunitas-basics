// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
// https://wiki.scold-lang.org/page/nonstd.container.Traits
#import nonstd.basic_string_view
#import nonstd.container.Traits.template
#import nonstd.required.character.Type
#import nonstd.required.character.Traits
namespace nonstd::container {
  template<required::character::Type CHAR, required::character::Traits<CHAR> TRAITS> struct Traits<std::basic_string_view<CHAR, TRAITS>>;
}
#endiv
#divert <hpp>
#import nonstd.container_traits.basic_string_view
namespace nonstd::container {
  template<required::character::Type CHAR, required::character::Traits<CHAR> TRAITS> struct Traits<std::basic_string_view<CHAR, TRAITS>> : public container_traits<std::basic_string_view<CHAR, TRAITS>> {
    using Container = std::basic_string_view<CHAR, TRAITS>;
  };
}
#endiv
#divert <cpp>
namespace {
  namespace tests {
    using namespace nonstd::container;
    static_assert(sizeof (Traits<std::string_view>));
    static_assert(sizeof (Traits<std::string_view>::iterator));
    static_assert(sizeof (Traits<std::string_view>::const_iterator));
  }
}
#endiv
