// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#include <ext/stdio_filebuf.h>
#import nonstd.required.Character
#import nonstd.required.Character_Traits
#import std.char_traits
namespace nonstd::stream::posix {
  //
  // Whereas C++ and POSIX are not coupled, there is no way to set up a C++ streambuf
  // to accept input from a POSIX-style file descriptor.  The generalized notion of a
  // file descriptor being fraught, they decided to abandon the standardization of such
  // out to userland.  Here we are, on a Monday morning, in want of such capability.
  //
  // https://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-api-4.6/a00068.html
  //
  //  Streambuf::Streambuf(int fd, std::ios_base::openmode, size_t=static_cast< size_t >(...something...))
  //    Associates a file stream buffer with an open POSIX file descriptor.
  //    The file descriptor will be closed upon destruction.
  //
  // Also
  //   http://www.boost.org/doc/libs/1_42_0/libs/iostreams/doc/classes/file_descriptor.html
  //   http://www.boost.org/doc/libs/1_42_0/libs/iostreams/doc/guide/generic_streams.html#stream
  // 
  // Background
  //   http://www.cppstdlib.com/
  //       Nicolai M. Josuttis
  //       The C++ Standard Library - A Tutorial and Reference, 2nd Edition
  //       Addison Wesley Longman, 2012,  978-0-321-62321-8.
  //   http://www.josuttis.com/cppcode/fdstream.html http://www.josuttis.com/cppcode/fdstream.tgz
  //       the tarball seems to be dated 2002-12-25 referencing the 1999 version of his book.
  //       fdoutbuf, fdostream, fdinbuf, fdistream
  //   https://stackoverflow.com/questions/2746168/how-to-construct-a-c-fstream-from-a-posix-file-descriptor
  //      Some droid using the self-asserted identity token "BD at Rivenhill", 2010-04-30.
  //      tl;dr -> points to GNU stdc++ __gnu__cxx::stdio_filebuf; reminds that Microsoft uses fdreopen(...) and std::filebuf
  //   https://groups.google.com/a/isocpp.org/forum/#!topic/std-proposals/XcQ4FZJKDbM
  //      Bruce Adams, file streams and access to the file descriptor, a conversation, started 2017-08-09.
  //   https://docs.google.com/viewer?a=v&pid=forums&srcid=MTEwODAzNzI2MjM1OTc0MjE3MjkBMDY0OTY1OTUzMjAwNzY0MTA0MjkBakhWMHBFLUNGd0FKATAuMQFpc29jcHAub3JnAXYy
  //      Bruce S. O. Adams; "file streams and access to the file descriptor", circa 2017-09, 12 pages.
  //      tl;dr -> proposes std::stdio_filebuf but evaluates other alternatives
  //
  template<required::Character CHAR, required::Character_Traits TRAITS = std::char_traits<CHAR>> using Basic_Streambuf = __gnu_cxx::stdio_filebuf<CHAR, TRAITS>;
}
#endiv
