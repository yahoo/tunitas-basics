// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import std.make_signed
#import nonstd.required.Integer
namespace nonstd {
  //
  // Compute the companion signed value
  //
  // Complete commentariat in nonstd.to_unsigned
  //
  template<required::Integer SOURCE> inline auto to_signed(SOURCE) -> std::make_signed_t<SOURCE>;
}
#endiv
#divert <ipp>
#import std.numeric_limits
#import nonstd.exception.Domain
#import std.is_unsigned
#import nonstd.string.View
template<nonstd::required::Integer SOURCE> auto nonstd::to_signed(SOURCE source) -> std::make_signed_t<SOURCE> {
  if constexpr(std::is_signed_v<SOURCE>) {
    return source;
  } else {
    using Result = std::make_signed_t<SOURCE>;
    using Limits = std::numeric_limits<Result>;
    if (Limits::max() < source) {
      throw exception::Domain<string::View>{"too big"};
    }
    return Result(source);
  }
}
#endiv
