// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import nonstd.required.iterator.Basis
namespace nonstd::iterator {
  //
  // The iterator traits, in the New School
  // Rhymes with the container traits in the New School (nonstd::container::Traits<ITERATOR>).
  //
  // Usage:
  // 
  //   using Traits = nonstd::iterator::Traits<...some_iterator...>;
  //
  template<required::iterator::Basis ITERATOR> struct Traits;
}
#endiv
#divert <hpp>
#import std.iterator_traits
template<nonstd::required::iterator::Basis ITERATOR> struct nonstd::iterator::Traits : public std::iterator_traits<ITERATOR> {
  using ancestor = std::iterator_traits<ITERATOR>;
  // https://en.cppreference.com/w/cpp/iterator/iterator_traits
public:
  using Iterator = ITERATOR;
  using Category = typename ancestor::iterator_category;
  using Value = typename ancestor::value_type;
  using Difference = typename ancestor::difference_type;
  using Pointer = typename ancestor::pointer;
  using Reference = typename ancestor::reference;
};
#endiv
