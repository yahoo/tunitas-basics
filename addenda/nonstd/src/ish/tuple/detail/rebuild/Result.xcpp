// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.size_t
namespace ish::tuple::detail::rebuild {
  //
  // In a parameter pack of TYPES... will strip off the leading N types
  // Suitable for use in detail::Rebuilder (nearby)
  //
  // Usage:
  //     using t = Result<1u, TYPE, TYPES...>::tuple         yields std::tuple<TYPES...>
  //     using b = Result<1u, TYPE, TYPES...>::bundle        yields Bundle<TYPES...>
  //
  //     using t = Result<2u, TYPE, TYPE, TYPES...>::tuple   yields std::tuple<TYPES...>
  //     using b = Result<2u, TYPE, TYPE, TYPES...>::bundle  yields Bundle<TYPES...>
  //
  template<std::size_t N, typename... TYPES> struct Result;
}
#endiv
#divert <hpp>
#import ish.tuple.detail.rebuild.Recurrence
template<std::size_t N, typename... TYPES> struct ish::tuple::detail::rebuild::Result : public Recurrence<0u == N, N, TYPES...> { };
#endiv
