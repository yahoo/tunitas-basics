// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import std.size_t
namespace ish::tuple::detail::rebuild {
  template<bool ZERO, std::size_t N, typename... TYPES> struct Recurrence;
  template<std::size_t N, typename TYPE, typename... TYPES> struct Recurrence<false, N, TYPE, TYPES...>;
  template<typename... TYPES>                               struct Recurrence<true, 0, TYPES...>;
}
#endiv
#divert <hpp>
template<std::size_t N, typename TYPE, typename... TYPES> struct ish::tuple::detail::rebuild::Recurrence<false, N, TYPE, TYPES...> : public Recurrence<0 == (N-1), N-1, TYPES...> {
private:
  using ancestor = Recurrence<0 == (N-1), N-1, TYPES...>;
public:
  using tuple = typename ancestor::tuple;
  using bundle = typename ancestor::bundle;
};

#import ish.tuple.Bundle
#import std.tuple
template<typename... TYPES> struct ish::tuple::detail::rebuild::Recurrence<true, 0, TYPES...> {
  //
  // The yield is Whatever was left after the descendants stripped away layers via Recurrence<ZERO, N, TYPE, TYPES...>
  //
  using tuple = std::tuple<TYPES...>;
  using bundle = Bundle<TYPES...>;
};
#endiv
