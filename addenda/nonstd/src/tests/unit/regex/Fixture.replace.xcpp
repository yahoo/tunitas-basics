// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.regex.Fixture
#endiv
#divert <cpp>
#import nonstd.regex.Pattern
#import nonstd.regex.replace
// [[FIXTHIS]] there should be around six variants of this
auto tests::unit::regex::Fixture::test_function_replace() -> void {
  using ::nonstd::regex::Pattern;
  using ::nonstd::regex::replace;
  auto const specimen = generate_a_to_z();
  auto const expected = "apple|banana|cherry|dog|eagle|frog|goat|harpie|idiot|jackass|kangaroo|llama|marmot|narwhal|ocelot|possum|quail|rat|seal|turkey|usufruct|vole|whale|xylotyl|yak|zebra"s;
  auto const pattern = Pattern{" +"}; // replace spaces with pipes
  { auto replaced = replace(specimen, pattern, "|");
    CPPUNIT_ASSERT_EQUAL(expected, replaced); }
}
#endiv
