// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::ish::bash { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.test.Fixture
#import cppunit.Test
#import tests.unit.ish.Palette
class tests::unit::ish::bash::Fixture : public cppunit::test::Fixture, Palette {
public:
  // unify the MI
  auto setUp() -> void { Palette::setUp(); }
  auto tearDown() -> void { Palette::tearDown(); }

  auto test_something() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import std.ostringstream
#import std.string

auto tests::unit::ish::bash::Fixture::test_something() -> void {
  // nothing to test (yet)
  CPPUNIT_ASSERT(true);
}

#import unit.rigging.suite.Stream
#import unit.rigging.suite.add
#import unit.rigging.suite.call
auto tests::unit::ish::bash::Fixture::suite() -> cppunit::Test * {
  using namespace ::unit::rigging::suite;
  Stream s("bash");
  s << call("something", &Fixture::test_something)
    ;
  return finalize(s);
}
#endiv
