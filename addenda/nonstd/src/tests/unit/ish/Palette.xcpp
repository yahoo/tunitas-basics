// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::ish { class Palette; }
#endiv
#divert <hpp>
#import std.deque
#import std.forward_list
#import std.list
#import std.string
#import std.vector
class tests::unit::ish::Palette {
protected:
  // ancestry only; expecting ancestry into a Fixture
  Palette() = default;
  ~Palette() = default;
public:
  using deque = std::deque<std::string>;
  using d = deque;
  deque dspecimen;

  using singly = std::forward_list<std::string>;
  using f = singly;
  singly fspecimen;

  using doubly = std::list<std::string>;
  using l = doubly;
  doubly lspecimen;

  using vector = std::vector<std::string>;
  using v = vector;
  vector vspecimen;
  
// unify the MI in the descendant
  virtual auto setUp() -> void;
  virtual auto tearDown() -> void;
};
#endiv
#divert <cpp>
#import unit.rigging.lhs
using unit::rigging::lhs;
#import unit.rigging.clear
using unit::rigging::clear;

auto tests::unit::ish::Palette::setUp() -> void {
  auto tmp = v{"apple",
               "banana",
               "cherry",
               "dog",
               "eagle",
               "frog",
               "goat",
               "harpie",
               "idiot",
               "kangaroo",
               "llama",
               "marmot",
               "narwal",
               "ocelot",
               "possum",
               "quail",
               "rat",
               "seal",
               "turkey",
               "usufruct",
               "vole",
               "wastrel",
               "xylotl",
               "yak",
               "zebra"};
  lhs(dspecimen) = d(tmp.begin(), tmp.end());
  lhs(fspecimen) = f(tmp.begin(), tmp.end());
  lhs(lspecimen) = l(tmp.begin(), tmp.end());
  lhs(vspecimen) = v(tmp.begin(), tmp.end());
}

auto tests::unit::ish::Palette::tearDown() -> void {
  lhs(dspecimen) = clear;
  lhs(fspecimen) = clear;
  lhs(lspecimen) = clear;
  lhs(vspecimen) = clear;
}
#endiv
