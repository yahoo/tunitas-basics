// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import tests.unit.exception.Fixture
#endiv
#divert <hpp>
#import std.basic_string
#import std.basic_ostream
#import nonstd.required.Character
#import nonstd.required.Character_Traits
namespace tests::unit::exception {
  template<::nonstd::required::Character CHAR, ::nonstd::required::Character_Traits TRAITS> struct Fixture::Palette {
    using Char = CHAR;
    using Traits = TRAITS;
    using String = std::basic_string<Char, Traits>;
    static auto simple_quitting_message() -> String;
  };
  template<> auto Fixture::Palette<char>::simple_quitting_message() -> String;
  template<> auto Fixture::Palette<wchar_t>::simple_quitting_message() -> String;
  template<> auto Fixture::Palette<char16_t>::simple_quitting_message() -> String;
  template<> auto Fixture::Palette<char32_t>::simple_quitting_message() -> String;
}
#endiv
#divert <cpp>
template<> auto tests::unit::exception::Fixture::Palette<char>::simple_quitting_message() -> String {
  return "message";
}
template<> auto tests::unit::exception::Fixture::Palette<wchar_t>::simple_quitting_message() -> String {
  return L"message";
}
template<> auto tests::unit::exception::Fixture::Palette<char16_t>::simple_quitting_message() -> String {
  return u"message";
}
template<> auto tests::unit::exception::Fixture::Palette<char32_t>::simple_quitting_message() -> String {
  return U"message";
}
#endiv
