// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <cpp>
//
// Just need to show that these compile and can all appear together.
//
#import path
namespace tests::unit::compatibility { using namespace ::path; }
#import path.filename
namespace tests::unit::compatibility { using namespace ::path::filename; }
#import path.filename.mount
namespace tests::unit::compatibility { using namespace ::path::filename::mount; }
#import path.filename.trimmer
namespace tests::unit::compatibility { using namespace ::path::filename::trimmer; }
#import path.filename.has
namespace tests::unit::compatibility { using namespace ::path::filename::has; }
// declarations
#import path.filename.deprefix
namespace tests::unit::compatibility { using ::path::filename::deprefix; }
#import path.filename.desuffix
namespace tests::unit::compatibility { using ::path::filename::desuffix; }
#import path.filename.has.Iterator
namespace tests::unit::compatibility { using ::path::filename::has::Iterator; }
#import path.filename.has_prefix
namespace tests::unit::compatibility { using ::path::filename::has_prefix; }
#import path.filename.has.somefix
namespace tests::unit::compatibility { using ::path::filename::has::somefix; }
#import path.filename.has_suffix
namespace tests::unit::compatibility { using ::path::filename::has::suffix; }
#import path.filename.has.suffix
namespace tests::unit::compatibility { using ::path::filename::has::suffix; }
#import path.filename.join
namespace tests::unit::compatibility { using ::path::filename::join; }
#import path.filename.joining
namespace tests::unit::compatibility { using ::path::filename::joining; }
#import path.filename.mount.Joiner
namespace tests::unit::compatibility { using ::path::filename::mount::Joiner; }
#import path.filename.mount.Joinering
namespace tests::unit::compatibility { using ::path::filename::mount::Joinering; }
#import path.filename.mount.Reference
namespace tests::unit::compatibility { using ::path::filename::mount::Reference; }
#import path.filename.mount.Unbound
namespace tests::unit::compatibility { using ::path::filename::mount::Unbound; }
#import path.filename.mount.Value
namespace tests::unit::compatibility { using ::path::filename::mount::Value; }
#import path.filename.trim
namespace tests::unit::compatibility { using ::path::filename::trim; }
#import path.filename.trimmer.Deprefix
namespace tests::unit::compatibility { using ::path::filename::trimmer::Deprefix; }
#import path.filename.trimmer.Desuffix
namespace tests::unit::compatibility { using ::path::filename::trimmer::Desuffix; }
#import path.filename.trimmer.Prototype
namespace tests::unit::compatibility { using ::path::filename::trimmer::Prototype; }
#import path.filename.trimmer.Workbench
namespace tests::unit::compatibility { using ::path::filename::trimmer::Workbench; }
#endiv
