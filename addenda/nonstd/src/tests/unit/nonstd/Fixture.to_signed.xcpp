// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <cpp>
#import tests.unit.nonstd.Fixture
#import std.numeric_limits
#import nonstd.to_signed
#import nonstd.exception.Exception
namespace tests::unit::nonstd::fixture {
  auto Fixture::test_to_signed_same() -> void {
    auto same = (long signed int)3;
    auto companion = library::to_signed(same); // <----- test this
    CPPUNIT_ASSERT(3u == companion);
  }
  auto Fixture::test_to_signed_good() -> void {
    auto different = (long unsigned int)3;
    auto companion = library::to_signed(different); // <----- test this
    CPPUNIT_ASSERT(3u == companion);
  }
  auto Fixture::test_to_signed_fail() -> void try {
    auto fail = 99u + (unsigned int)std::numeric_limits<signed int>::max();
    library::to_signed(fail); // <----- test this
    CPPUNIT_ASSERT(false);
  } catch (library::exception::Exception const &) {
    CPPUNIT_ASSERT(true);
  }
}
#endiv
