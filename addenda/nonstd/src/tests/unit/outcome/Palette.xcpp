// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::outcome {
  template<typename> struct Palette;
}
#endiv
#divert <hpp>
template<typename PAYLOAD> struct tests::unit::outcome::Palette {
  using Payload = PAYLOAD;
  static auto literal() -> Payload; // specializations only
};
#import std.string
#import nonstd.Success
namespace tests::unit::outcome {
  template<> inline auto Palette<::nonstd::success::Sense>::literal() -> Payload;
  template<> inline auto Palette<int>::literal() -> Payload;
  template<> inline auto Palette<std::string>::literal() -> Payload;
}
#endiv
#divert <ipp>
namespace tests::unit::outcome {
  template<> auto Palette<::nonstd::success::Sense>::literal() -> Payload {
    return Payload{nonstd::SUCCESS};
  }
  template<> auto Palette<int>::literal() -> Payload {
    return Payload{42};
  }
  template<> auto Palette<std::string>::literal() -> Payload {
    return Payload{"42"};
  }
}
#endiv
