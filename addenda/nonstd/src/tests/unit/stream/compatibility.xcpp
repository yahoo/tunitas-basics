// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
//
// All that has to occur here is to prove that these compile (together)
//

//
// The namespaces
//
namespace tests::unit::compatibility { }
#import stream
namespace tests::unit::compatibility { using namespace ::stream; }
#import stream.input
namespace tests::unit::compatibility { using namespace ::stream::input; }
#import stream.output
namespace tests::unit::compatibility { using namespace ::stream::output; }
#import stream.output.iterator
namespace tests::unit::compatibility { using namespace ::stream::output::iterator; }
#import stream.required
namespace tests::unit::compatibility { using namespace ::stream::required; }
//
// The declarations
//
#import stream.Nullbuf
namespace tests::unit::compatibility { using ::stream::Nullbuf; }
#import stream.null
namespace tests::unit::compatibility { using ::stream::null; }
#import stream.output.iterator.Bracketing
namespace tests::unit::compatibility { using ::stream::output::iterator::Bracketing; }
#import stream.output.iterator.Prefixing
namespace tests::unit::compatibility { using ::stream::output::iterator::Prefixing; }
#import stream.output.iterator.Suffixing
namespace tests::unit::compatibility { using ::stream::output::iterator::Suffixing; }
#import stream.required.Character_Traits
namespace tests::unit::compatibility { using ::stream::required::Character_Traits; }
#import stream.required.Character
namespace tests::unit::compatibility { using ::stream::required::Character; }
#import stream.required.Decoration
namespace tests::unit::compatibility { using ::stream::required::Decoration; }
#endiv
