// -*- c++ -*- 42da9faf-576c-4802-b93f-f38dbda7179c
#pragma once

// http://en.cppreference.com/w/cpp/string/basic_string_view
// but the <string_view> is not available everywhere.

#if __cplusplus <= 201103L
#error std::string_view is not in C++11, it is experimental in C++14, standard in C++17 (get thee to C++17)
#elif !defined(__GNUC__)
#include <string_view>
#elif __GNUC__ < 6
#error GCC is too old to support C++17
#elif 6 < __GNUC__
#include <string_view>
#elif 6 == __GNUC__
// C++14
// http://en.cppreference.com/w/cpp/experimental/basic_string_view
// but even gcc-6.3.0 doesn't have C++17 fully supported
//
// $ cat > cplusplus.cpp <<EOF
// int M = __GNUC__;
// int m = __GNUC_MINOR__;
// int p = __GNUC_PATCHLEVEL__;
// int l = __cplusplus;
// EOF
//
// $ g++ -E -std=c++1z -De cplusplus.cpp 
// int M = 6;
// int m = 3;
// int p = 0;
// int l = 201500L;
//
// too verbose
// <shutup>
//   #warning std::string_view experimental in C++14 is required, standard in C++17 (get thee to C++17)
// </shutup>
//
#include <experimental/string_view>
namespace std {
  // hoist up from std::experimental ... in advance of C++17
  using experimental::basic_string_view;
  using experimental::string_view;
  using experimental::wstring_view;
  using experimental::u16string_view;
  using experimental::u32string_view;
}
#endif
