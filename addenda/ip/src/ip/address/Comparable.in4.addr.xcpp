// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import ip.in4
#import ip.address.Comparable
namespace ip {
  namespace address {
    template<> inline auto operator==<in4::addr const>(Comparable<in4::addr const> const &, Comparable<in4::addr const> const &) -> bool;
    template<> inline auto operator==<in4::addr>(Comparable<in4::addr> const &, Comparable<in4::addr> const &) -> bool;
  }
}
#endiv
#divert <ipp>
#import ip.address.cmp
template<> auto ip::address::operator==<ip::in4::addr const>(Comparable<in4::addr const> const &a, Comparable<in4::addr const> const &b) -> bool {
  ip::uint32_t const &ai = a.value.s_addr;
  ip::uint32_t const &bi = b.value.s_addr;
  return ai == bi;
}

template<> auto ip::address::operator==<ip::in4::addr>(Comparable<in4::addr> const &a, Comparable<in4::addr> const &b) -> bool {
  // redo with more const (with more cowbell)
  Comparable<in4::addr const> ca(a.value), cb(b.value);
  return operator==(ca, cb);
}
#endiv
