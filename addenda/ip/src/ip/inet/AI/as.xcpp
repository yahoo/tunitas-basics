// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import ip.inet.AI.Features
#import ip.inet.AI.flag.Feature
namespace ip {
  namespace inet  {
    namespace AI {
      template<typename RESULT> inline auto as(Features) -> RESULT;

      // The identity transform
      template<> inline auto as<Features>(Features) -> Features;

      // throws if !is_flag(Features)
      template<> inline auto as<flag::Feature>(Features) -> flag::Feature;
    }
  }
}
#endiv
#divert <ipp>
template<typename RESULT> auto ip::inet::AI::as(Features) -> RESULT {
  static_assert(0 == sizeof (RESULT) && 0 != sizeof (RESULT), "specialization only");
  return RESULT();
}

template<> auto ip::inet::AI::as<ip::inet::AI::Features>(Features s) -> Features {
  return s;
}

#import std.invalid_argument
template<> auto ip::inet::AI::as<ip::inet::AI::flag::Feature>(Features s) -> flag::Feature {
  if (is_flag(s)) {
    return (flag::Feature)((int)(s));
  }
  throw std::invalid_argument("multiple features");
}
#endiv
