// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::ip::inet::addrinfo {
  class List;
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::ip::inet::addrinfo::List : public cppunit::test::Fixture {
public:
  inline auto test_swap() -> void;
  inline auto test_constructor_default() -> void;
  inline auto test_constructor_conversion() -> void;
  inline auto test_constructor_move() -> void;
  inline auto test_assign_move() -> void;
  inline auto test_empty() -> void;
  inline auto test_size() -> void;
  inline auto test_begin() -> void;
  inline auto test_end() -> void;
  inline auto test_front() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import ip.inet.addrinfo.List
auto tests::unit::ip::inet::addrinfo::List::test_swap() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_swap() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_constructor_default() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_constructor_default() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_constructor_conversion() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_constructor_conversion() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_constructor_move() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_constructor_move() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_assign_move() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_assign_move() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_empty() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_empty() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_size() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_size() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_begin() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_begin() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_end() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_end() -> void
}

auto tests::unit::ip::inet::addrinfo::List::test_front() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::List::test_front() -> void
}

#import rigging.suite.io
auto tests::unit::ip::inet::addrinfo::List::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("List");
  series << call("swap", &List::test_swap)
    << call("constructor_default", &List::test_constructor_default)
    << call("constructor_conversion", &List::test_constructor_conversion)
    << call("constructor_move", &List::test_constructor_move)
    << call("assign_move", &List::test_assign_move)
    << call("empty", &List::test_empty)
    << call("size", &List::test_size)
    << call("begin", &List::test_begin)
    << call("end", &List::test_end)
    << call("front", &List::test_front)
    ;
  return finalize(series);
}
#endiv
