// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::ip::inet::addrinfo {
  class Specification;
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::ip::inet::addrinfo::Specification : public cppunit::test::Fixture {
public:
  auto test_constructor_default() -> void;
  auto test_or_AF() -> void;
  auto test_or_AI() -> void;
  auto test_or_PF() -> void;
  auto test_or_SOCK() -> void;
  auto test_operator_cast() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import ip.inet.addrinfo.Specification

auto tests::unit::ip::inet::addrinfo::Specification::test_constructor_default() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::Specification::test_constructor_default() -> void
}

auto tests::unit::ip::inet::addrinfo::Specification::test_or_AF() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::Specification::test_or_AF() -> void
}

auto tests::unit::ip::inet::addrinfo::Specification::test_or_AI() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::Specification::test_or_AI() -> void
}

auto tests::unit::ip::inet::addrinfo::Specification::test_or_PF() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::Specification::test_or_PF() -> void
}

auto tests::unit::ip::inet::addrinfo::Specification::test_or_SOCK() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::Specification::test_or_SOCK() -> void
}

auto tests::unit::ip::inet::addrinfo::Specification::test_operator_cast() -> void {
#warning WRITEME auto tests::unit::ip::inet::addrinfo::Specification::test_operator_cast() -> void
}

#import tests.unit.ip.inet.addrinfo.Iterator
#import tests.unit.ip.inet.addrinfo.List
#import tests.unit.ip.inet.addrinfo.Specification
#import tests.unit.ip.inet.addrinfo.Value
#import rigging.suite.io
auto tests::unit::ip::inet::addrinfo::Specification::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream series("addrinfo");
  series << call("constructor_default", &Specification::test_constructor_default)
         << call("or_AF", &Specification::test_or_AF)
         << call("or_AI", &Specification::test_or_AI)
         << call("or_PF", &Specification::test_or_PF)
         << call("or_SOCK", &Specification::test_or_SOCK)
         << call("operator_cast", &Specification::test_operator_cast)
    ;
  return finalize(series);
}
#endiv
