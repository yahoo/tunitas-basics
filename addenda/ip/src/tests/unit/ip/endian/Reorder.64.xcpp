// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import tests.unit.ip.endian.Reorder
namespace tests::unit::ip::endian {
  template<> auto Reorder<64>::test_reorder() -> void;
  template<> auto Reorder<64>::test_roundtrip() -> void;
  template<> auto Reorder<64>::test_addressish() -> void;
}
#endiv
#divert <cpp>
#import ip // ::ip::uint{16,32,64,128}_t
#import ip.endian.reorder
using ::ip::endian::reorder;

template<> auto tests::unit::ip::endian::Reorder<64>::test_reorder() -> void {
  auto specimen = ::ip::uint64_t(0x0123456789abcdef);
  auto actual = reorder<WIDTH>(specimen);
  auto expected = ::ip::uint64_t(0xefcdab8967452301);
  dump_expected_actual(std::cerr, expected, actual);
  CPPUNIT_ASSERT_EQUAL(expected, actual);
}

template<> auto tests::unit::ip::endian::Reorder<64>::test_roundtrip() -> void {
  auto specimen = ::ip::uint64_t(0x0123456789abcdef);
  auto actual = reorder<WIDTH>(reorder<WIDTH>(specimen));
  auto expected = specimen;
  CPPUNIT_ASSERT_EQUAL(expected, actual);
}

template<> auto tests::unit::ip::endian::Reorder<64>::test_addressish() -> void {
  // There are no 64-bit addresses
  CPPUNIT_ASSERT(true);
}
#endiv
