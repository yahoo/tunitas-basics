// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests::unit::ip {
  class Fixture;
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
class tests::unit::ip::Fixture : public cppunit::test::Fixture {
public:
  auto test_usage_Address() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import ip.Address
#import ip.inet.ntop
auto tests::unit::ip::Fixture::test_usage_Address() -> void {
  ::ip::Address a;
  CPPUNIT_ASSERT(!a.isValid());
}

#import tests.unit.ip.Address
#import tests.unit.ip.as.Fixture
#import tests.unit.ip.endian.Fixture
#import tests.unit.ip.format.Fixture
#import tests.unit.ip.inet.Fixture
#import rigging.suite.io
auto tests::unit::ip::Fixture::suite() -> cppunit::Test * {
  using namespace ::rigging::suite;
  Stream usage("usage");
  usage << call("Address", &Fixture::test_usage_Address)
    ;
  Stream series("ip");
  series << move(usage)
         << add<Address>()
         << add<as::Fixture>()
         << add<endian::Fixture>()
         << add<format::Fixture>()
         << add<inet::Fixture>()
    ;
  return finalize(series);
}
#endiv
